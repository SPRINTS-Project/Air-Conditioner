
Air Conditioner.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001996  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000009a  00800060  00001996  00001a2a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000044  008000fa  008000fa  00001ac4  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001ac4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001af4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000230  00000000  00000000  00001b30  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002dd9  00000000  00000000  00001d60  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000010db  00000000  00000000  00004b39  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001ec8  00000000  00000000  00005c14  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000580  00000000  00000000  00007adc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000d42  00000000  00000000  0000805c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001bcf  00000000  00000000  00008d9e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001a8  00000000  00000000  0000a96d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 46 00 	jmp	0x8c	; 0x8c <__ctors_end>
       4:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
       8:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
       c:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
      10:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
      14:	0c 94 71 08 	jmp	0x10e2	; 0x10e2 <__vector_5>
      18:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
      1c:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
      20:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
      24:	0c 94 41 08 	jmp	0x1082	; 0x1082 <__vector_9>
      28:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
      2c:	0c 94 11 08 	jmp	0x1022	; 0x1022 <__vector_11>
      30:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
      34:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
      38:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
      3c:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
      40:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
      44:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
      48:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
      4c:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
      50:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
      54:	4e 09       	sbc	r20, r14
      56:	59 09       	sbc	r21, r9
      58:	64 09       	sbc	r22, r4
      5a:	74 0a       	sbc	r7, r20
      5c:	6f 09       	sbc	r22, r15
      5e:	74 0a       	sbc	r7, r20
      60:	7a 09       	sbc	r23, r10
      62:	85 09       	sbc	r24, r5
      64:	90 09       	sbc	r25, r0
      66:	9b 09       	sbc	r25, r11
      68:	b1 09       	sbc	r27, r1
      6a:	bc 09       	sbc	r27, r12
      6c:	c7 09       	sbc	r28, r7
      6e:	76 0a       	sbc	r7, r22
      70:	d2 09       	sbc	r29, r2
      72:	76 0a       	sbc	r7, r22
      74:	dd 09       	sbc	r29, r13
      76:	e8 09       	sbc	r30, r8
      78:	f3 09       	sbc	r31, r3
      7a:	fe 09       	sbc	r31, r14
      7c:	14 0a       	sbc	r1, r20
      7e:	1f 0a       	sbc	r1, r31
      80:	2a 0a       	sbc	r2, r26
      82:	35 0a       	sbc	r3, r21
      84:	40 0a       	sbc	r4, r16
      86:	4b 0a       	sbc	r4, r27
      88:	56 0a       	sbc	r5, r22
      8a:	61 0a       	sbc	r6, r17

0000008c <__ctors_end>:
      8c:	11 24       	eor	r1, r1
      8e:	1f be       	out	0x3f, r1	; 63
      90:	cf e5       	ldi	r28, 0x5F	; 95
      92:	d8 e0       	ldi	r29, 0x08	; 8
      94:	de bf       	out	0x3e, r29	; 62
      96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
      98:	10 e0       	ldi	r17, 0x00	; 0
      9a:	a0 e6       	ldi	r26, 0x60	; 96
      9c:	b0 e0       	ldi	r27, 0x00	; 0
      9e:	e6 e9       	ldi	r30, 0x96	; 150
      a0:	f9 e1       	ldi	r31, 0x19	; 25
      a2:	02 c0       	rjmp	.+4      	; 0xa8 <__do_copy_data+0x10>
      a4:	05 90       	lpm	r0, Z+
      a6:	0d 92       	st	X+, r0
      a8:	aa 3f       	cpi	r26, 0xFA	; 250
      aa:	b1 07       	cpc	r27, r17
      ac:	d9 f7       	brne	.-10     	; 0xa4 <__do_copy_data+0xc>

000000ae <__do_clear_bss>:
      ae:	21 e0       	ldi	r18, 0x01	; 1
      b0:	aa ef       	ldi	r26, 0xFA	; 250
      b2:	b0 e0       	ldi	r27, 0x00	; 0
      b4:	01 c0       	rjmp	.+2      	; 0xb8 <.do_clear_bss_start>

000000b6 <.do_clear_bss_loop>:
      b6:	1d 92       	st	X+, r1

000000b8 <.do_clear_bss_start>:
      b8:	ae 33       	cpi	r26, 0x3E	; 62
      ba:	b2 07       	cpc	r27, r18
      bc:	e1 f7       	brne	.-8      	; 0xb6 <.do_clear_bss_loop>
      be:	0e 94 75 06 	call	0xcea	; 0xcea <main>
      c2:	0c 94 c9 0c 	jmp	0x1992	; 0x1992 <_exit>

000000c6 <__bad_interrupt>:
      c6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ca <APP_timer0OvfHandeler>:
      ca:	80 91 fb 00 	lds	r24, 0x00FB	; 0x8000fb <u8_delay>
      ce:	8f 5f       	subi	r24, 0xFF	; 255
      d0:	80 93 fb 00 	sts	0x00FB, r24	; 0x8000fb <u8_delay>
      d4:	82 e0       	ldi	r24, 0x02	; 2
      d6:	91 e0       	ldi	r25, 0x01	; 1
      d8:	0e 94 63 06 	call	0xcc6	; 0xcc6 <TIMER_Manager_reset>
      dc:	08 95       	ret

000000de <APP_init>:
      de:	ef 92       	push	r14
      e0:	ff 92       	push	r15
      e2:	0f 93       	push	r16
      e4:	1f 93       	push	r17
      e6:	cf 93       	push	r28
      e8:	df 93       	push	r29
      ea:	e2 e0       	ldi	r30, 0x02	; 2
      ec:	f1 e0       	ldi	r31, 0x01	; 1
      ee:	d1 e0       	ldi	r29, 0x01	; 1
      f0:	d0 83       	st	Z, r29
      f2:	d4 83       	std	Z+4, r29	; 0x04
      f4:	88 e0       	ldi	r24, 0x08	; 8
      f6:	90 ef       	ldi	r25, 0xF0	; 240
      f8:	93 83       	std	Z+3, r25	; 0x03
      fa:	82 83       	std	Z+2, r24	; 0x02
      fc:	85 e6       	ldi	r24, 0x65	; 101
      fe:	90 e0       	ldi	r25, 0x00	; 0
     100:	96 83       	std	Z+6, r25	; 0x06
     102:	85 83       	std	Z+5, r24	; 0x05
     104:	c7 e0       	ldi	r28, 0x07	; 7
     106:	c1 83       	std	Z+1, r28	; 0x01
     108:	cf 01       	movw	r24, r30
     10a:	0e 94 31 06 	call	0xc62	; 0xc62 <TIMER_Manager_init>
     10e:	ef ef       	ldi	r30, 0xFF	; 255
     110:	f0 e0       	ldi	r31, 0x00	; 0
     112:	c2 83       	std	Z+2, r28	; 0x02
     114:	d0 83       	st	Z, r29
     116:	d1 83       	std	Z+1, r29	; 0x01
     118:	cf 01       	movw	r24, r30
     11a:	0e 94 84 05 	call	0xb08	; 0xb08 <TEMP_SENSOR_init>
     11e:	e5 e1       	ldi	r30, 0x15	; 21
     120:	f1 e0       	ldi	r31, 0x01	; 1
     122:	10 82       	st	Z, r1
     124:	11 86       	std	Z+9, r1	; 0x09
     126:	12 86       	std	Z+10, r1	; 0x0a
     128:	13 86       	std	Z+11, r1	; 0x0b
     12a:	d4 87       	std	Z+12, r29	; 0x0c
     12c:	15 86       	std	Z+13, r1	; 0x0d
     12e:	c2 e0       	ldi	r28, 0x02	; 2
     130:	c6 87       	std	Z+14, r28	; 0x0e
     132:	17 86       	std	Z+15, r1	; 0x0f
     134:	0f 2e       	mov	r0, r31
     136:	f3 e0       	ldi	r31, 0x03	; 3
     138:	ef 2e       	mov	r14, r31
     13a:	f0 2d       	mov	r31, r0
     13c:	e0 8a       	std	Z+16, r14	; 0x10
     13e:	11 8a       	std	Z+17, r1	; 0x11
     140:	68 94       	set
     142:	ff 24       	eor	r15, r15
     144:	f2 f8       	bld	r15, 2
     146:	f2 8a       	std	Z+18, r15	; 0x12
     148:	13 8a       	std	Z+19, r1	; 0x13
     14a:	05 e0       	ldi	r16, 0x05	; 5
     14c:	04 8b       	std	Z+20, r16	; 0x14
     14e:	15 8a       	std	Z+21, r1	; 0x15
     150:	16 e0       	ldi	r17, 0x06	; 6
     152:	16 8b       	std	Z+22, r17	; 0x16
     154:	cf 01       	movw	r24, r30
     156:	0e 94 0c 04 	call	0x818	; 0x818 <LCD_init>
     15a:	ec e2       	ldi	r30, 0x2C	; 44
     15c:	f1 e0       	ldi	r31, 0x01	; 1
     15e:	c6 83       	std	Z+6, r28	; 0x06
     160:	e7 82       	std	Z+7, r14	; 0x07
     162:	c0 87       	std	Z+8, r28	; 0x08
     164:	f1 86       	std	Z+9, r15	; 0x09
     166:	c2 87       	std	Z+10, r28	; 0x0a
     168:	03 87       	std	Z+11, r16	; 0x0b
     16a:	c4 87       	std	Z+12, r28	; 0x0c
     16c:	15 87       	std	Z+13, r17	; 0x0d
     16e:	c0 83       	st	Z, r28
     170:	11 82       	std	Z+1, r1	; 0x01
     172:	c2 83       	std	Z+2, r28	; 0x02
     174:	d3 83       	std	Z+3, r29	; 0x03
     176:	c4 83       	std	Z+4, r28	; 0x04
     178:	c5 83       	std	Z+5, r28	; 0x05
     17a:	cf 01       	movw	r24, r30
     17c:	0e 94 d2 02 	call	0x5a4	; 0x5a4 <KEYPAD_init>
     180:	ed ef       	ldi	r30, 0xFD	; 253
     182:	f0 e0       	ldi	r31, 0x00	; 0
     184:	d1 83       	std	Z+1, r29	; 0x01
     186:	10 82       	st	Z, r1
     188:	cf 01       	movw	r24, r30
     18a:	0e 94 99 02 	call	0x532	; 0x532 <BUZZER_init>
     18e:	df 91       	pop	r29
     190:	cf 91       	pop	r28
     192:	1f 91       	pop	r17
     194:	0f 91       	pop	r16
     196:	ff 90       	pop	r15
     198:	ef 90       	pop	r14
     19a:	08 95       	ret

0000019c <APP_welcome>:
     19c:	0e 94 a7 04 	call	0x94e	; 0x94e <LCD_clear>
     1a0:	61 e0       	ldi	r22, 0x01	; 1
     1a2:	81 e0       	ldi	r24, 0x01	; 1
     1a4:	0e 94 ad 04 	call	0x95a	; 0x95a <LCD_setCursor>
     1a8:	10 92 fb 00 	sts	0x00FB, r1	; 0x8000fb <u8_delay>
     1ac:	8c e6       	ldi	r24, 0x6C	; 108
     1ae:	90 e0       	ldi	r25, 0x00	; 0
     1b0:	0e 94 26 05 	call	0xa4c	; 0xa4c <LCD_writeString>
     1b4:	80 91 fb 00 	lds	r24, 0x00FB	; 0x8000fb <u8_delay>
     1b8:	83 30       	cpi	r24, 0x03	; 3
     1ba:	e0 f3       	brcs	.-8      	; 0x1b4 <APP_welcome+0x18>
     1bc:	0e 94 a7 04 	call	0x94e	; 0x94e <LCD_clear>
     1c0:	61 e0       	ldi	r22, 0x01	; 1
     1c2:	81 e0       	ldi	r24, 0x01	; 1
     1c4:	0e 94 ad 04 	call	0x95a	; 0x95a <LCD_setCursor>
     1c8:	84 e7       	ldi	r24, 0x74	; 116
     1ca:	90 e0       	ldi	r25, 0x00	; 0
     1cc:	0e 94 26 05 	call	0xa4c	; 0xa4c <LCD_writeString>
     1d0:	61 e0       	ldi	r22, 0x01	; 1
     1d2:	82 e0       	ldi	r24, 0x02	; 2
     1d4:	0e 94 ad 04 	call	0x95a	; 0x95a <LCD_setCursor>
     1d8:	10 92 fb 00 	sts	0x00FB, r1	; 0x8000fb <u8_delay>
     1dc:	8e ec       	ldi	r24, 0xCE	; 206
     1de:	90 e0       	ldi	r25, 0x00	; 0
     1e0:	0e 94 26 05 	call	0xa4c	; 0xa4c <LCD_writeString>
     1e4:	80 91 fb 00 	lds	r24, 0x00FB	; 0x8000fb <u8_delay>
     1e8:	83 30       	cpi	r24, 0x03	; 3
     1ea:	e0 f3       	brcs	.-8      	; 0x1e4 <APP_welcome+0x48>
     1ec:	84 e1       	ldi	r24, 0x14	; 20
     1ee:	80 93 fa 00 	sts	0x00FA, r24	; 0x8000fa <__data_end>
     1f2:	81 e0       	ldi	r24, 0x01	; 1
     1f4:	80 93 fc 00 	sts	0x00FC, r24	; 0x8000fc <u8_en_gs_programState>
     1f8:	08 95       	ret

000001fa <APP_set>:
     1fa:	1f 93       	push	r17
     1fc:	cf 93       	push	r28
     1fe:	df 93       	push	r29
     200:	cd b7       	in	r28, 0x3d	; 61
     202:	de b7       	in	r29, 0x3e	; 62
     204:	27 97       	sbiw	r28, 0x07	; 7
     206:	0f b6       	in	r0, 0x3f	; 63
     208:	f8 94       	cli
     20a:	de bf       	out	0x3e, r29	; 62
     20c:	0f be       	out	0x3f, r0	; 63
     20e:	cd bf       	out	0x3d, r28	; 61
     210:	8c e7       	ldi	r24, 0x7C	; 124
     212:	90 e0       	ldi	r25, 0x00	; 0
     214:	9a 83       	std	Y+2, r25	; 0x02
     216:	89 83       	std	Y+1, r24	; 0x01
     218:	80 e2       	ldi	r24, 0x20	; 32
     21a:	90 e0       	ldi	r25, 0x00	; 0
     21c:	9c 83       	std	Y+4, r25	; 0x04
     21e:	8b 83       	std	Y+3, r24	; 0x03
     220:	1d 82       	std	Y+5, r1	; 0x05
     222:	0e 94 a7 04 	call	0x94e	; 0x94e <LCD_clear>
     226:	61 e0       	ldi	r22, 0x01	; 1
     228:	81 e0       	ldi	r24, 0x01	; 1
     22a:	0e 94 ad 04 	call	0x95a	; 0x95a <LCD_setCursor>
     22e:	10 92 fb 00 	sts	0x00FB, r1	; 0x8000fb <u8_delay>
     232:	84 e8       	ldi	r24, 0x84	; 132
     234:	90 e0       	ldi	r25, 0x00	; 0
     236:	0e 94 26 05 	call	0xa4c	; 0xa4c <LCD_writeString>
     23a:	80 91 fb 00 	lds	r24, 0x00FB	; 0x8000fb <u8_delay>
     23e:	82 30       	cpi	r24, 0x02	; 2
     240:	e0 f3       	brcs	.-8      	; 0x23a <APP_set+0x40>
     242:	0e 94 a7 04 	call	0x94e	; 0x94e <LCD_clear>
     246:	61 e0       	ldi	r22, 0x01	; 1
     248:	81 e0       	ldi	r24, 0x01	; 1
     24a:	0e 94 ad 04 	call	0x95a	; 0x95a <LCD_setCursor>
     24e:	85 e9       	ldi	r24, 0x95	; 149
     250:	90 e0       	ldi	r25, 0x00	; 0
     252:	0e 94 26 05 	call	0xa4c	; 0xa4c <LCD_writeString>
     256:	6b e0       	ldi	r22, 0x0B	; 11
     258:	81 e0       	ldi	r24, 0x01	; 1
     25a:	0e 94 ad 04 	call	0x95a	; 0x95a <LCD_setCursor>
     25e:	8c e9       	ldi	r24, 0x9C	; 156
     260:	90 e0       	ldi	r25, 0x00	; 0
     262:	0e 94 26 05 	call	0xa4c	; 0xa4c <LCD_writeString>
     266:	13 e1       	ldi	r17, 0x13	; 19
     268:	0a c0       	rjmp	.+20     	; 0x27e <APP_set+0x84>
     26a:	6e ee       	ldi	r22, 0xEE	; 238
     26c:	61 0f       	add	r22, r17
     26e:	82 e0       	ldi	r24, 0x02	; 2
     270:	0e 94 ad 04 	call	0x95a	; 0x95a <LCD_setCursor>
     274:	ce 01       	movw	r24, r28
     276:	01 96       	adiw	r24, 0x01	; 1
     278:	0e 94 26 05 	call	0xa4c	; 0xa4c <LCD_writeString>
     27c:	1f 5f       	subi	r17, 0xFF	; 255
     27e:	80 91 fa 00 	lds	r24, 0x00FA	; 0x8000fa <__data_end>
     282:	81 17       	cp	r24, r17
     284:	90 f7       	brcc	.-28     	; 0x26a <APP_set+0x70>
     286:	80 91 fa 00 	lds	r24, 0x00FA	; 0x8000fa <__data_end>
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
     28a:	4a e0       	ldi	r20, 0x0A	; 10
     28c:	be 01       	movw	r22, r28
     28e:	6a 5f       	subi	r22, 0xFA	; 250
     290:	7f 4f       	sbci	r23, 0xFF	; 255
     292:	90 e0       	ldi	r25, 0x00	; 0
     294:	0e 94 94 0c 	call	0x1928	; 0x1928 <__itoa_ncheck>
     298:	68 e0       	ldi	r22, 0x08	; 8
     29a:	81 e0       	ldi	r24, 0x01	; 1
     29c:	0e 94 ad 04 	call	0x95a	; 0x95a <LCD_setCursor>
     2a0:	ce 01       	movw	r24, r28
     2a2:	06 96       	adiw	r24, 0x06	; 6
     2a4:	0e 94 26 05 	call	0xa4c	; 0xa4c <LCD_writeString>
     2a8:	ce 01       	movw	r24, r28
     2aa:	05 96       	adiw	r24, 0x05	; 5
     2ac:	0e 94 0f 03 	call	0x61e	; 0x61e <KEYPAD_read>
     2b0:	8d 81       	ldd	r24, Y+5	; 0x05
     2b2:	81 33       	cpi	r24, 0x31	; 49
     2b4:	89 f4       	brne	.+34     	; 0x2d8 <APP_set+0xde>
     2b6:	60 91 fa 00 	lds	r22, 0x00FA	; 0x8000fa <__data_end>
     2ba:	63 32       	cpi	r22, 0x23	; 35
     2bc:	20 f7       	brcc	.-56     	; 0x286 <APP_set+0x8c>
     2be:	81 e0       	ldi	r24, 0x01	; 1
     2c0:	86 0f       	add	r24, r22
     2c2:	80 93 fa 00 	sts	0x00FA, r24	; 0x8000fa <__data_end>
     2c6:	61 51       	subi	r22, 0x11	; 17
     2c8:	82 e0       	ldi	r24, 0x02	; 2
     2ca:	0e 94 ad 04 	call	0x95a	; 0x95a <LCD_setCursor>
     2ce:	ce 01       	movw	r24, r28
     2d0:	01 96       	adiw	r24, 0x01	; 1
     2d2:	0e 94 26 05 	call	0xa4c	; 0xa4c <LCD_writeString>
     2d6:	d7 cf       	rjmp	.-82     	; 0x286 <APP_set+0x8c>
     2d8:	82 33       	cpi	r24, 0x32	; 50
     2da:	89 f4       	brne	.+34     	; 0x2fe <APP_set+0x104>
     2dc:	60 91 fa 00 	lds	r22, 0x00FA	; 0x8000fa <__data_end>
     2e0:	63 31       	cpi	r22, 0x13	; 19
     2e2:	88 f2       	brcs	.-94     	; 0x286 <APP_set+0x8c>
     2e4:	8f ef       	ldi	r24, 0xFF	; 255
     2e6:	86 0f       	add	r24, r22
     2e8:	80 93 fa 00 	sts	0x00FA, r24	; 0x8000fa <__data_end>
     2ec:	62 51       	subi	r22, 0x12	; 18
     2ee:	82 e0       	ldi	r24, 0x02	; 2
     2f0:	0e 94 ad 04 	call	0x95a	; 0x95a <LCD_setCursor>
     2f4:	ce 01       	movw	r24, r28
     2f6:	03 96       	adiw	r24, 0x03	; 3
     2f8:	0e 94 26 05 	call	0xa4c	; 0xa4c <LCD_writeString>
     2fc:	c4 cf       	rjmp	.-120    	; 0x286 <APP_set+0x8c>
     2fe:	83 33       	cpi	r24, 0x33	; 51
     300:	11 f6       	brne	.-124    	; 0x286 <APP_set+0x8c>
     302:	82 e0       	ldi	r24, 0x02	; 2
     304:	80 93 fc 00 	sts	0x00FC, r24	; 0x8000fc <u8_en_gs_programState>
     308:	27 96       	adiw	r28, 0x07	; 7
     30a:	0f b6       	in	r0, 0x3f	; 63
     30c:	f8 94       	cli
     30e:	de bf       	out	0x3e, r29	; 62
     310:	0f be       	out	0x3f, r0	; 63
     312:	cd bf       	out	0x3d, r28	; 61
     314:	df 91       	pop	r29
     316:	cf 91       	pop	r28
     318:	1f 91       	pop	r17
     31a:	08 95       	ret

0000031c <APP_printString>:
     31c:	cf 93       	push	r28
     31e:	df 93       	push	r29
     320:	00 d0       	rcall	.+0      	; 0x322 <APP_printString+0x6>
     322:	1f 92       	push	r1
     324:	cd b7       	in	r28, 0x3d	; 61
     326:	de b7       	in	r29, 0x3e	; 62
     328:	20 e3       	ldi	r18, 0x30	; 48
     32a:	29 83       	std	Y+1, r18	; 0x01
     32c:	1a 82       	std	Y+2, r1	; 0x02
     32e:	1b 82       	std	Y+3, r1	; 0x03
     330:	0e 94 3b 0b 	call	0x1676	; 0x1676 <__fixunssfsi>
     334:	6a 30       	cpi	r22, 0x0A	; 10
     336:	28 f4       	brcc	.+10     	; 0x342 <APP_printString+0x26>
     338:	60 5d       	subi	r22, 0xD0	; 208
     33a:	69 83       	std	Y+1, r22	; 0x01
     33c:	80 e2       	ldi	r24, 0x20	; 32
     33e:	8a 83       	std	Y+2, r24	; 0x02
     340:	16 c0       	rjmp	.+44     	; 0x36e <APP_printString+0x52>
     342:	86 ef       	ldi	r24, 0xF6	; 246
     344:	86 0f       	add	r24, r22
     346:	8a 35       	cpi	r24, 0x5A	; 90
     348:	90 f4       	brcc	.+36     	; 0x36e <APP_printString+0x52>
     34a:	8d ec       	ldi	r24, 0xCD	; 205
     34c:	68 9f       	mul	r22, r24
     34e:	81 2d       	mov	r24, r1
     350:	11 24       	eor	r1, r1
     352:	86 95       	lsr	r24
     354:	86 95       	lsr	r24
     356:	86 95       	lsr	r24
     358:	90 e3       	ldi	r25, 0x30	; 48
     35a:	98 0f       	add	r25, r24
     35c:	99 83       	std	Y+1, r25	; 0x01
     35e:	88 0f       	add	r24, r24
     360:	98 2f       	mov	r25, r24
     362:	99 0f       	add	r25, r25
     364:	99 0f       	add	r25, r25
     366:	89 0f       	add	r24, r25
     368:	68 1b       	sub	r22, r24
     36a:	60 5d       	subi	r22, 0xD0	; 208
     36c:	6a 83       	std	Y+2, r22	; 0x02
     36e:	ce 01       	movw	r24, r28
     370:	01 96       	adiw	r24, 0x01	; 1
     372:	0e 94 26 05 	call	0xa4c	; 0xa4c <LCD_writeString>
     376:	0f 90       	pop	r0
     378:	0f 90       	pop	r0
     37a:	0f 90       	pop	r0
     37c:	df 91       	pop	r29
     37e:	cf 91       	pop	r28
     380:	08 95       	ret

00000382 <APP_working>:
     382:	cf 93       	push	r28
     384:	df 93       	push	r29
     386:	1f 92       	push	r1
     388:	cd b7       	in	r28, 0x3d	; 61
     38a:	de b7       	in	r29, 0x3e	; 62
     38c:	19 82       	std	Y+1, r1	; 0x01
     38e:	0e 94 a7 04 	call	0x94e	; 0x94e <LCD_clear>
     392:	61 e0       	ldi	r22, 0x01	; 1
     394:	81 e0       	ldi	r24, 0x01	; 1
     396:	0e 94 ad 04 	call	0x95a	; 0x95a <LCD_setCursor>
     39a:	83 ea       	ldi	r24, 0xA3	; 163
     39c:	90 e0       	ldi	r25, 0x00	; 0
     39e:	0e 94 26 05 	call	0xa4c	; 0xa4c <LCD_writeString>
     3a2:	a1 c0       	rjmp	.+322    	; 0x4e6 <__EEPROM_REGION_LENGTH__+0xe6>
     3a4:	60 e6       	ldi	r22, 0x60	; 96
     3a6:	70 e0       	ldi	r23, 0x00	; 0
     3a8:	8f ef       	ldi	r24, 0xFF	; 255
     3aa:	90 e0       	ldi	r25, 0x00	; 0
     3ac:	0e 94 a7 05 	call	0xb4e	; 0xb4e <TEMP_SENSOR_read>
     3b0:	20 e0       	ldi	r18, 0x00	; 0
     3b2:	30 e0       	ldi	r19, 0x00	; 0
     3b4:	40 e8       	ldi	r20, 0x80	; 128
     3b6:	5e e3       	ldi	r21, 0x3E	; 62
     3b8:	60 91 60 00 	lds	r22, 0x0060	; 0x800060 <__data_start>
     3bc:	70 91 61 00 	lds	r23, 0x0061	; 0x800061 <__data_start+0x1>
     3c0:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <__data_start+0x2>
     3c4:	90 91 63 00 	lds	r25, 0x0063	; 0x800063 <__data_start+0x3>
     3c8:	0e 94 21 0c 	call	0x1842	; 0x1842 <__mulsf3>
     3cc:	60 93 60 00 	sts	0x0060, r22	; 0x800060 <__data_start>
     3d0:	70 93 61 00 	sts	0x0061, r23	; 0x800061 <__data_start+0x1>
     3d4:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <__data_start+0x2>
     3d8:	90 93 63 00 	sts	0x0063, r25	; 0x800063 <__data_start+0x3>
     3dc:	62 e0       	ldi	r22, 0x02	; 2
     3de:	82 e0       	ldi	r24, 0x02	; 2
     3e0:	0e 94 ad 04 	call	0x95a	; 0x95a <LCD_setCursor>
     3e4:	60 91 60 00 	lds	r22, 0x0060	; 0x800060 <__data_start>
     3e8:	70 91 61 00 	lds	r23, 0x0061	; 0x800061 <__data_start+0x1>
     3ec:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <__data_start+0x2>
     3f0:	90 91 63 00 	lds	r25, 0x0063	; 0x800063 <__data_start+0x3>
     3f4:	0e 94 8e 01 	call	0x31c	; 0x31c <APP_printString>
     3f8:	60 91 fa 00 	lds	r22, 0x00FA	; 0x8000fa <__data_end>
     3fc:	70 e0       	ldi	r23, 0x00	; 0
     3fe:	80 e0       	ldi	r24, 0x00	; 0
     400:	90 e0       	ldi	r25, 0x00	; 0
     402:	0e 94 6c 0b 	call	0x16d8	; 0x16d8 <__floatsisf>
     406:	20 91 60 00 	lds	r18, 0x0060	; 0x800060 <__data_start>
     40a:	30 91 61 00 	lds	r19, 0x0061	; 0x800061 <__data_start+0x1>
     40e:	40 91 62 00 	lds	r20, 0x0062	; 0x800062 <__data_start+0x2>
     412:	50 91 63 00 	lds	r21, 0x0063	; 0x800063 <__data_start+0x3>
     416:	0e 94 c4 0a 	call	0x1588	; 0x1588 <__cmpsf2>
     41a:	88 23       	and	r24, r24
     41c:	34 f4       	brge	.+12     	; 0x42a <__EEPROM_REGION_LENGTH__+0x2a>
     41e:	83 e0       	ldi	r24, 0x03	; 3
     420:	0e 94 40 05 	call	0xa80	; 0xa80 <LCD_writeSpChar>
     424:	0e 94 b4 02 	call	0x568	; 0x568 <BUZZER_start>
     428:	08 c0       	rjmp	.+16     	; 0x43a <__EEPROM_REGION_LENGTH__+0x3a>
     42a:	61 e0       	ldi	r22, 0x01	; 1
     42c:	82 e0       	ldi	r24, 0x02	; 2
     42e:	0e 94 ad 04 	call	0x95a	; 0x95a <LCD_setCursor>
     432:	81 eb       	ldi	r24, 0xB1	; 177
     434:	90 e0       	ldi	r25, 0x00	; 0
     436:	0e 94 26 05 	call	0xa4c	; 0xa4c <LCD_writeString>
     43a:	ce 01       	movw	r24, r28
     43c:	01 96       	adiw	r24, 0x01	; 1
     43e:	0e 94 0f 03 	call	0x61e	; 0x61e <KEYPAD_read>
     442:	89 81       	ldd	r24, Y+1	; 0x01
     444:	85 33       	cpi	r24, 0x35	; 53
     446:	31 f0       	breq	.+12     	; 0x454 <__EEPROM_REGION_LENGTH__+0x54>
     448:	8e 34       	cpi	r24, 0x4E	; 78
     44a:	09 f4       	brne	.+2      	; 0x44e <__EEPROM_REGION_LENGTH__+0x4e>
     44c:	4c c0       	rjmp	.+152    	; 0x4e6 <__EEPROM_REGION_LENGTH__+0xe6>
     44e:	84 33       	cpi	r24, 0x34	; 52
     450:	41 f5       	brne	.+80     	; 0x4a2 <__EEPROM_REGION_LENGTH__+0xa2>
     452:	21 c0       	rjmp	.+66     	; 0x496 <__EEPROM_REGION_LENGTH__+0x96>
     454:	0e 94 c3 02 	call	0x586	; 0x586 <BUZZER_stop>
     458:	84 e1       	ldi	r24, 0x14	; 20
     45a:	80 93 fa 00 	sts	0x00FA, r24	; 0x8000fa <__data_end>
     45e:	0e 94 a7 04 	call	0x94e	; 0x94e <LCD_clear>
     462:	61 e0       	ldi	r22, 0x01	; 1
     464:	81 e0       	ldi	r24, 0x01	; 1
     466:	0e 94 ad 04 	call	0x95a	; 0x95a <LCD_setCursor>
     46a:	83 eb       	ldi	r24, 0xB3	; 179
     46c:	90 e0       	ldi	r25, 0x00	; 0
     46e:	0e 94 26 05 	call	0xa4c	; 0xa4c <LCD_writeString>
     472:	61 e0       	ldi	r22, 0x01	; 1
     474:	82 e0       	ldi	r24, 0x02	; 2
     476:	0e 94 ad 04 	call	0x95a	; 0x95a <LCD_setCursor>
     47a:	10 92 fb 00 	sts	0x00FB, r1	; 0x8000fb <u8_delay>
     47e:	81 ec       	ldi	r24, 0xC1	; 193
     480:	90 e0       	ldi	r25, 0x00	; 0
     482:	0e 94 26 05 	call	0xa4c	; 0xa4c <LCD_writeString>
     486:	80 91 fb 00 	lds	r24, 0x00FB	; 0x8000fb <u8_delay>
     48a:	83 30       	cpi	r24, 0x03	; 3
     48c:	e0 f3       	brcs	.-8      	; 0x486 <__EEPROM_REGION_LENGTH__+0x86>
     48e:	81 e0       	ldi	r24, 0x01	; 1
     490:	80 93 fc 00 	sts	0x00FC, r24	; 0x8000fc <u8_en_gs_programState>
     494:	28 c0       	rjmp	.+80     	; 0x4e6 <__EEPROM_REGION_LENGTH__+0xe6>
     496:	0e 94 c3 02 	call	0x586	; 0x586 <BUZZER_stop>
     49a:	81 e0       	ldi	r24, 0x01	; 1
     49c:	80 93 fc 00 	sts	0x00FC, r24	; 0x8000fc <u8_en_gs_programState>
     4a0:	22 c0       	rjmp	.+68     	; 0x4e6 <__EEPROM_REGION_LENGTH__+0xe6>
     4a2:	0e 94 a7 04 	call	0x94e	; 0x94e <LCD_clear>
     4a6:	61 e0       	ldi	r22, 0x01	; 1
     4a8:	81 e0       	ldi	r24, 0x01	; 1
     4aa:	0e 94 ad 04 	call	0x95a	; 0x95a <LCD_setCursor>
     4ae:	81 ed       	ldi	r24, 0xD1	; 209
     4b0:	90 e0       	ldi	r25, 0x00	; 0
     4b2:	0e 94 26 05 	call	0xa4c	; 0xa4c <LCD_writeString>
     4b6:	61 e0       	ldi	r22, 0x01	; 1
     4b8:	82 e0       	ldi	r24, 0x02	; 2
     4ba:	0e 94 ad 04 	call	0x95a	; 0x95a <LCD_setCursor>
     4be:	10 92 fb 00 	sts	0x00FB, r1	; 0x8000fb <u8_delay>
     4c2:	82 ee       	ldi	r24, 0xE2	; 226
     4c4:	90 e0       	ldi	r25, 0x00	; 0
     4c6:	0e 94 26 05 	call	0xa4c	; 0xa4c <LCD_writeString>
     4ca:	80 91 fb 00 	lds	r24, 0x00FB	; 0x8000fb <u8_delay>
     4ce:	83 30       	cpi	r24, 0x03	; 3
     4d0:	e0 f3       	brcs	.-8      	; 0x4ca <__EEPROM_REGION_LENGTH__+0xca>
     4d2:	0e 94 a7 04 	call	0x94e	; 0x94e <LCD_clear>
     4d6:	61 e0       	ldi	r22, 0x01	; 1
     4d8:	81 e0       	ldi	r24, 0x01	; 1
     4da:	0e 94 ad 04 	call	0x95a	; 0x95a <LCD_setCursor>
     4de:	83 ea       	ldi	r24, 0xA3	; 163
     4e0:	90 e0       	ldi	r25, 0x00	; 0
     4e2:	0e 94 26 05 	call	0xa4c	; 0xa4c <LCD_writeString>
     4e6:	80 91 fc 00 	lds	r24, 0x00FC	; 0x8000fc <u8_en_gs_programState>
     4ea:	82 30       	cpi	r24, 0x02	; 2
     4ec:	09 f4       	brne	.+2      	; 0x4f0 <__EEPROM_REGION_LENGTH__+0xf0>
     4ee:	5a cf       	rjmp	.-332    	; 0x3a4 <APP_working+0x22>
     4f0:	0f 90       	pop	r0
     4f2:	df 91       	pop	r29
     4f4:	cf 91       	pop	r28
     4f6:	08 95       	ret

000004f8 <APP_start>:
     4f8:	0e 94 6f 00 	call	0xde	; 0xde <APP_init>
     4fc:	78 94       	sei
     4fe:	82 e0       	ldi	r24, 0x02	; 2
     500:	91 e0       	ldi	r25, 0x01	; 1
     502:	0e 94 51 06 	call	0xca2	; 0xca2 <TIMER_Manager_start>
     506:	02 c0       	rjmp	.+4      	; 0x50c <APP_start+0x14>
     508:	0e 94 ce 00 	call	0x19c	; 0x19c <APP_welcome>
     50c:	80 91 fc 00 	lds	r24, 0x00FC	; 0x8000fc <u8_en_gs_programState>
     510:	81 11       	cpse	r24, r1
     512:	03 c0       	rjmp	.+6      	; 0x51a <APP_start+0x22>
     514:	f9 cf       	rjmp	.-14     	; 0x508 <APP_start+0x10>
     516:	0e 94 fd 00 	call	0x1fa	; 0x1fa <APP_set>
     51a:	80 91 fc 00 	lds	r24, 0x00FC	; 0x8000fc <u8_en_gs_programState>
     51e:	81 30       	cpi	r24, 0x01	; 1
     520:	d1 f3       	breq	.-12     	; 0x516 <APP_start+0x1e>
     522:	02 c0       	rjmp	.+4      	; 0x528 <APP_start+0x30>
     524:	0e 94 c1 01 	call	0x382	; 0x382 <APP_working>
     528:	80 91 fc 00 	lds	r24, 0x00FC	; 0x8000fc <u8_en_gs_programState>
     52c:	82 30       	cpi	r24, 0x02	; 2
     52e:	d1 f3       	breq	.-12     	; 0x524 <APP_start+0x2c>
     530:	ed cf       	rjmp	.-38     	; 0x50c <APP_start+0x14>

00000532 <BUZZER_init>:
static uint8_t u8_gs_buzzerState = NOT_INIT;



u8_en_buzzerErrorsType BUZZER_init (st_buzzerConfigType* st_config)
{
     532:	cf 93       	push	r28
     534:	df 93       	push	r29
	// Check if the pounter is invalid
	if (st_config == ((void*)0))
     536:	00 97       	sbiw	r24, 0x00	; 0
     538:	99 f0       	breq	.+38     	; 0x560 <BUZZER_init+0x2e>
     53a:	ec 01       	movw	r28, r24
		return BUZZER_E_NOT_OK;
	
	// Set Buzzer pin as output
	u8_en_dioErrors u8_dioRetVal = DIO_init(st_config->u8_port, st_config->u8_pin, STD_OUTPUT);
     53c:	68 81       	ld	r22, Y
     53e:	41 e0       	ldi	r20, 0x01	; 1
     540:	89 81       	ldd	r24, Y+1	; 0x01
     542:	0e 94 f1 06 	call	0xde2	; 0xde2 <DIO_init>
	
	// Check if there is an error from dio driver
	if(u8_dioRetVal)
     546:	81 11       	cpse	r24, r1
     548:	0c c0       	rjmp	.+24     	; 0x562 <BUZZER_init+0x30>
		return u8_dioRetVal;
	
	// Store configuration locally
	st_gs_buzzerConfig.u8_port = st_config->u8_port;
     54a:	89 81       	ldd	r24, Y+1	; 0x01
     54c:	ea e0       	ldi	r30, 0x0A	; 10
     54e:	f1 e0       	ldi	r31, 0x01	; 1
     550:	81 83       	std	Z+1, r24	; 0x01
	st_gs_buzzerConfig.u8_pin = st_config->u8_pin;
     552:	88 81       	ld	r24, Y
     554:	80 83       	st	Z, r24
	
	// Change buzzer state
	u8_gs_buzzerState = INIT;
     556:	81 e0       	ldi	r24, 0x01	; 1
     558:	80 93 09 01 	sts	0x0109, r24	; 0x800109 <u8_gs_buzzerState>
	
	return BUZZER_E_OK;
     55c:	80 e0       	ldi	r24, 0x00	; 0
     55e:	01 c0       	rjmp	.+2      	; 0x562 <BUZZER_init+0x30>

u8_en_buzzerErrorsType BUZZER_init (st_buzzerConfigType* st_config)
{
	// Check if the pounter is invalid
	if (st_config == ((void*)0))
		return BUZZER_E_NOT_OK;
     560:	86 e0       	ldi	r24, 0x06	; 6
	
	// Change buzzer state
	u8_gs_buzzerState = INIT;
	
	return BUZZER_E_OK;
}
     562:	df 91       	pop	r29
     564:	cf 91       	pop	r28
     566:	08 95       	ret

00000568 <BUZZER_start>:
u8_en_buzzerErrorsType BUZZER_start(void)
{
	// Check if the module is not init before
	if(u8_gs_buzzerState == NOT_INIT)
     568:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <u8_gs_buzzerState>
     56c:	88 23       	and	r24, r24
     56e:	49 f0       	breq	.+18     	; 0x582 <BUZZER_start+0x1a>
		return BUZZER_E_NOT_OK;
	
	// Turn the buzzer on
	DIO_writePIN(st_gs_buzzerConfig.u8_port,st_gs_buzzerConfig.u8_pin, STD_HIGH);
     570:	ea e0       	ldi	r30, 0x0A	; 10
     572:	f1 e0       	ldi	r31, 0x01	; 1
     574:	60 81       	ld	r22, Z
     576:	41 e0       	ldi	r20, 0x01	; 1
     578:	81 81       	ldd	r24, Z+1	; 0x01
     57a:	0e 94 2b 07 	call	0xe56	; 0xe56 <DIO_writePIN>
	
	return BUZZER_E_OK;
     57e:	80 e0       	ldi	r24, 0x00	; 0
     580:	08 95       	ret
}
u8_en_buzzerErrorsType BUZZER_start(void)
{
	// Check if the module is not init before
	if(u8_gs_buzzerState == NOT_INIT)
		return BUZZER_E_NOT_OK;
     582:	86 e0       	ldi	r24, 0x06	; 6
	
	// Turn the buzzer on
	DIO_writePIN(st_gs_buzzerConfig.u8_port,st_gs_buzzerConfig.u8_pin, STD_HIGH);
	
	return BUZZER_E_OK;
}
     584:	08 95       	ret

00000586 <BUZZER_stop>:
u8_en_buzzerErrorsType BUZZER_stop(void)
{
	// Check if the module is not init before
	if(u8_gs_buzzerState == NOT_INIT)
     586:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <u8_gs_buzzerState>
     58a:	88 23       	and	r24, r24
     58c:	49 f0       	breq	.+18     	; 0x5a0 <BUZZER_stop+0x1a>
		return BUZZER_E_NOT_OK;
	
	// Turn the buzzer off
	DIO_writePIN(st_gs_buzzerConfig.u8_port,st_gs_buzzerConfig.u8_pin, STD_LOW);
     58e:	ea e0       	ldi	r30, 0x0A	; 10
     590:	f1 e0       	ldi	r31, 0x01	; 1
     592:	60 81       	ld	r22, Z
     594:	40 e0       	ldi	r20, 0x00	; 0
     596:	81 81       	ldd	r24, Z+1	; 0x01
     598:	0e 94 2b 07 	call	0xe56	; 0xe56 <DIO_writePIN>
	
	return BUZZER_E_OK;
     59c:	80 e0       	ldi	r24, 0x00	; 0
     59e:	08 95       	ret
}
u8_en_buzzerErrorsType BUZZER_stop(void)
{
	// Check if the module is not init before
	if(u8_gs_buzzerState == NOT_INIT)
		return BUZZER_E_NOT_OK;
     5a0:	86 e0       	ldi	r24, 0x06	; 6
	
	// Turn the buzzer off
	DIO_writePIN(st_gs_buzzerConfig.u8_port,st_gs_buzzerConfig.u8_pin, STD_LOW);
	
	return BUZZER_E_OK;
     5a2:	08 95       	ret

000005a4 <KEYPAD_init>:
#define F_CPU 1000000U
#include<util/delay.h>
static uint8_t keypad[4][3]={{'1','2','3'},{'4','5','6'},{'7','8','9'},{'*','0','#'}};
extern st_keypadConfigType st_gs_keypadConfig;
u8_en_keypadErrorsType KEYPAD_init (st_keypadConfigType* st_config)
{
     5a4:	cf 93       	push	r28
     5a6:	df 93       	push	r29
	u8_en_keypadErrorsType ret_val=KEYPAD_E_OK;
	if(st_config==(void*)0)
     5a8:	00 97       	sbiw	r24, 0x00	; 0
     5aa:	a9 f1       	breq	.+106    	; 0x616 <KEYPAD_init+0x72>
     5ac:	ec 01       	movw	r28, r24
	{
		ret_val=KEYPAD_E_NOT_OK;
	}
	else
	{
		DIO_init(st_config->u8_row1Pin[0],st_config->u8_row1Pin[1],STD_INPUT);
     5ae:	69 81       	ldd	r22, Y+1	; 0x01
     5b0:	40 e0       	ldi	r20, 0x00	; 0
     5b2:	88 81       	ld	r24, Y
     5b4:	0e 94 f1 06 	call	0xde2	; 0xde2 <DIO_init>
		DIO_init(st_config->u8_row2Pin[0],st_config->u8_row2Pin[1],STD_INPUT);
     5b8:	6b 81       	ldd	r22, Y+3	; 0x03
     5ba:	40 e0       	ldi	r20, 0x00	; 0
     5bc:	8a 81       	ldd	r24, Y+2	; 0x02
     5be:	0e 94 f1 06 	call	0xde2	; 0xde2 <DIO_init>
		DIO_init(st_config->u8_row3Pin[0],st_config->u8_row3Pin[1],STD_INPUT);
     5c2:	6d 81       	ldd	r22, Y+5	; 0x05
     5c4:	40 e0       	ldi	r20, 0x00	; 0
     5c6:	8c 81       	ldd	r24, Y+4	; 0x04
     5c8:	0e 94 f1 06 	call	0xde2	; 0xde2 <DIO_init>
		DIO_writePIN(st_config->u8_row1Pin[0],st_config->u8_row1Pin[1],STD_HIGH);
     5cc:	69 81       	ldd	r22, Y+1	; 0x01
     5ce:	41 e0       	ldi	r20, 0x01	; 1
     5d0:	88 81       	ld	r24, Y
     5d2:	0e 94 2b 07 	call	0xe56	; 0xe56 <DIO_writePIN>
		DIO_writePIN(st_config->u8_row2Pin[0],st_config->u8_row2Pin[1],STD_HIGH);
     5d6:	6b 81       	ldd	r22, Y+3	; 0x03
     5d8:	41 e0       	ldi	r20, 0x01	; 1
     5da:	8a 81       	ldd	r24, Y+2	; 0x02
     5dc:	0e 94 2b 07 	call	0xe56	; 0xe56 <DIO_writePIN>
		DIO_writePIN(st_config->u8_row3Pin[0],st_config->u8_row3Pin[1],STD_HIGH);
     5e0:	6d 81       	ldd	r22, Y+5	; 0x05
     5e2:	41 e0       	ldi	r20, 0x01	; 1
     5e4:	8c 81       	ldd	r24, Y+4	; 0x04
     5e6:	0e 94 2b 07 	call	0xe56	; 0xe56 <DIO_writePIN>
		
		DIO_init(st_config->u8_col1Pin[0],st_config->u8_col1Pin[1],STD_OUTPUT);
     5ea:	6f 81       	ldd	r22, Y+7	; 0x07
     5ec:	41 e0       	ldi	r20, 0x01	; 1
     5ee:	8e 81       	ldd	r24, Y+6	; 0x06
     5f0:	0e 94 f1 06 	call	0xde2	; 0xde2 <DIO_init>
		DIO_init(st_config->u8_col2Pin[0],st_config->u8_col2Pin[1],STD_OUTPUT);
     5f4:	69 85       	ldd	r22, Y+9	; 0x09
     5f6:	41 e0       	ldi	r20, 0x01	; 1
     5f8:	88 85       	ldd	r24, Y+8	; 0x08
     5fa:	0e 94 f1 06 	call	0xde2	; 0xde2 <DIO_init>
		DIO_init(st_config->u8_col3Pin[0],st_config->u8_col3Pin[1],STD_OUTPUT);
     5fe:	6b 85       	ldd	r22, Y+11	; 0x0b
     600:	41 e0       	ldi	r20, 0x01	; 1
     602:	8a 85       	ldd	r24, Y+10	; 0x0a
     604:	0e 94 f1 06 	call	0xde2	; 0xde2 <DIO_init>
		DIO_init(st_config->u8_col4Pin[0],st_config->u8_col4Pin[1],STD_OUTPUT);
     608:	6d 85       	ldd	r22, Y+13	; 0x0d
     60a:	41 e0       	ldi	r20, 0x01	; 1
     60c:	8c 85       	ldd	r24, Y+12	; 0x0c
     60e:	0e 94 f1 06 	call	0xde2	; 0xde2 <DIO_init>
#include<util/delay.h>
static uint8_t keypad[4][3]={{'1','2','3'},{'4','5','6'},{'7','8','9'},{'*','0','#'}};
extern st_keypadConfigType st_gs_keypadConfig;
u8_en_keypadErrorsType KEYPAD_init (st_keypadConfigType* st_config)
{
	u8_en_keypadErrorsType ret_val=KEYPAD_E_OK;
     612:	80 e0       	ldi	r24, 0x00	; 0
     614:	01 c0       	rjmp	.+2      	; 0x618 <KEYPAD_init+0x74>
	if(st_config==(void*)0)
	{
		ret_val=KEYPAD_E_NOT_OK;
     616:	87 e0       	ldi	r24, 0x07	; 7
		DIO_init(st_config->u8_col2Pin[0],st_config->u8_col2Pin[1],STD_OUTPUT);
		DIO_init(st_config->u8_col3Pin[0],st_config->u8_col3Pin[1],STD_OUTPUT);
		DIO_init(st_config->u8_col4Pin[0],st_config->u8_col4Pin[1],STD_OUTPUT);
	}
	return ret_val;
}
     618:	df 91       	pop	r29
     61a:	cf 91       	pop	r28
     61c:	08 95       	ret

0000061e <KEYPAD_read>:

u8_en_keypadErrorsType KEYPAD_read (uint8_t * u8_data)
{   u8_en_keypadErrorsType ret_val=KEYPAD_E_OK;
     61e:	df 92       	push	r13
     620:	ef 92       	push	r14
     622:	ff 92       	push	r15
     624:	0f 93       	push	r16
     626:	1f 93       	push	r17
     628:	cf 93       	push	r28
     62a:	df 93       	push	r29
     62c:	1f 92       	push	r1
     62e:	cd b7       	in	r28, 0x3d	; 61
     630:	de b7       	in	r29, 0x3e	; 62
     632:	7c 01       	movw	r14, r24
	uint8_t value,flag=0;
	DIO_writePIN(st_gs_keypadConfig.u8_col1Pin[0],st_gs_keypadConfig.u8_col1Pin[1],STD_HIGH);
     634:	0c e2       	ldi	r16, 0x2C	; 44
     636:	11 e0       	ldi	r17, 0x01	; 1
     638:	f8 01       	movw	r30, r16
     63a:	67 81       	ldd	r22, Z+7	; 0x07
     63c:	41 e0       	ldi	r20, 0x01	; 1
     63e:	86 81       	ldd	r24, Z+6	; 0x06
     640:	0e 94 2b 07 	call	0xe56	; 0xe56 <DIO_writePIN>
	DIO_writePIN(st_gs_keypadConfig.u8_col2Pin[0],st_gs_keypadConfig.u8_col2Pin[1],STD_HIGH);
     644:	f8 01       	movw	r30, r16
     646:	61 85       	ldd	r22, Z+9	; 0x09
     648:	41 e0       	ldi	r20, 0x01	; 1
     64a:	80 85       	ldd	r24, Z+8	; 0x08
     64c:	0e 94 2b 07 	call	0xe56	; 0xe56 <DIO_writePIN>
	DIO_writePIN(st_gs_keypadConfig.u8_col3Pin[0],st_gs_keypadConfig.u8_col3Pin[1],STD_HIGH);
     650:	f8 01       	movw	r30, r16
     652:	63 85       	ldd	r22, Z+11	; 0x0b
     654:	41 e0       	ldi	r20, 0x01	; 1
     656:	82 85       	ldd	r24, Z+10	; 0x0a
     658:	0e 94 2b 07 	call	0xe56	; 0xe56 <DIO_writePIN>
	DIO_writePIN(st_gs_keypadConfig.u8_col4Pin[0],st_gs_keypadConfig.u8_col4Pin[1],STD_HIGH);
     65c:	f8 01       	movw	r30, r16
     65e:	65 85       	ldd	r22, Z+13	; 0x0d
     660:	41 e0       	ldi	r20, 0x01	; 1
     662:	84 85       	ldd	r24, Z+12	; 0x0c
     664:	0e 94 2b 07 	call	0xe56	; 0xe56 <DIO_writePIN>
	uint8_t i,j;
	for(i=0;i<4;i++)
     668:	00 e0       	ldi	r16, 0x00	; 0
	return ret_val;
}

u8_en_keypadErrorsType KEYPAD_read (uint8_t * u8_data)
{   u8_en_keypadErrorsType ret_val=KEYPAD_E_OK;
	uint8_t value,flag=0;
     66a:	d1 2c       	mov	r13, r1
	DIO_writePIN(st_gs_keypadConfig.u8_col1Pin[0],st_gs_keypadConfig.u8_col1Pin[1],STD_HIGH);
	DIO_writePIN(st_gs_keypadConfig.u8_col2Pin[0],st_gs_keypadConfig.u8_col2Pin[1],STD_HIGH);
	DIO_writePIN(st_gs_keypadConfig.u8_col3Pin[0],st_gs_keypadConfig.u8_col3Pin[1],STD_HIGH);
	DIO_writePIN(st_gs_keypadConfig.u8_col4Pin[0],st_gs_keypadConfig.u8_col4Pin[1],STD_HIGH);
	uint8_t i,j;
	for(i=0;i<4;i++)
     66c:	42 c0       	rjmp	.+132    	; 0x6f2 <KEYPAD_read+0xd4>
	{
		DIO_writePIN(st_gs_keypadConfig.u8_col1Pin[0],st_gs_keypadConfig.u8_col1Pin[1]+i,STD_LOW);
     66e:	ec e2       	ldi	r30, 0x2C	; 44
     670:	f1 e0       	ldi	r31, 0x01	; 1
     672:	67 81       	ldd	r22, Z+7	; 0x07
     674:	60 0f       	add	r22, r16
     676:	40 e0       	ldi	r20, 0x00	; 0
     678:	86 81       	ldd	r24, Z+6	; 0x06
     67a:	0e 94 2b 07 	call	0xe56	; 0xe56 <DIO_writePIN>
		for(j=0;j<3;j++)
     67e:	10 e0       	ldi	r17, 0x00	; 0
     680:	2d c0       	rjmp	.+90     	; 0x6dc <KEYPAD_read+0xbe>
		{
			DIO_readPIN(st_gs_keypadConfig.u8_row1Pin[0],st_gs_keypadConfig.u8_row1Pin[1]+j,&value);
     682:	ec e2       	ldi	r30, 0x2C	; 44
     684:	f1 e0       	ldi	r31, 0x01	; 1
     686:	61 81       	ldd	r22, Z+1	; 0x01
     688:	61 0f       	add	r22, r17
     68a:	ae 01       	movw	r20, r28
     68c:	4f 5f       	subi	r20, 0xFF	; 255
     68e:	5f 4f       	sbci	r21, 0xFF	; 255
     690:	80 81       	ld	r24, Z
     692:	0e 94 a6 07 	call	0xf4c	; 0xf4c <DIO_readPIN>
			if(value==0)
     696:	89 81       	ldd	r24, Y+1	; 0x01
     698:	81 11       	cpse	r24, r1
     69a:	1f c0       	rjmp	.+62     	; 0x6da <KEYPAD_read+0xbc>
     69c:	0a c0       	rjmp	.+20     	; 0x6b2 <KEYPAD_read+0x94>
			{  
				 while(value==0)
				 {
					 DIO_readPIN(st_gs_keypadConfig.u8_row1Pin[0],st_gs_keypadConfig.u8_row1Pin[1]+j,&value);
     69e:	ec e2       	ldi	r30, 0x2C	; 44
     6a0:	f1 e0       	ldi	r31, 0x01	; 1
     6a2:	61 81       	ldd	r22, Z+1	; 0x01
     6a4:	61 0f       	add	r22, r17
     6a6:	ae 01       	movw	r20, r28
     6a8:	4f 5f       	subi	r20, 0xFF	; 255
     6aa:	5f 4f       	sbci	r21, 0xFF	; 255
     6ac:	80 81       	ld	r24, Z
     6ae:	0e 94 a6 07 	call	0xf4c	; 0xf4c <DIO_readPIN>
		for(j=0;j<3;j++)
		{
			DIO_readPIN(st_gs_keypadConfig.u8_row1Pin[0],st_gs_keypadConfig.u8_row1Pin[1]+j,&value);
			if(value==0)
			{  
				 while(value==0)
     6b2:	89 81       	ldd	r24, Y+1	; 0x01
     6b4:	88 23       	and	r24, r24
     6b6:	99 f3       	breq	.-26     	; 0x69e <KEYPAD_read+0x80>
				 {
					 DIO_readPIN(st_gs_keypadConfig.u8_row1Pin[0],st_gs_keypadConfig.u8_row1Pin[1]+j,&value);
				 }
				*u8_data=keypad[i][j];
     6b8:	80 2f       	mov	r24, r16
     6ba:	90 e0       	ldi	r25, 0x00	; 0
     6bc:	fc 01       	movw	r30, r24
     6be:	ee 0f       	add	r30, r30
     6c0:	ff 1f       	adc	r31, r31
     6c2:	e8 0f       	add	r30, r24
     6c4:	f9 1f       	adc	r31, r25
     6c6:	e2 51       	subi	r30, 0x12	; 18
     6c8:	ff 4f       	sbci	r31, 0xFF	; 255
     6ca:	e1 0f       	add	r30, r17
     6cc:	f1 1d       	adc	r31, r1
     6ce:	80 81       	ld	r24, Z
     6d0:	f7 01       	movw	r30, r14
     6d2:	80 83       	st	Z, r24
				flag=1;
     6d4:	dd 24       	eor	r13, r13
     6d6:	d3 94       	inc	r13
				
				break;
     6d8:	03 c0       	rjmp	.+6      	; 0x6e0 <KEYPAD_read+0xc2>
	DIO_writePIN(st_gs_keypadConfig.u8_col4Pin[0],st_gs_keypadConfig.u8_col4Pin[1],STD_HIGH);
	uint8_t i,j;
	for(i=0;i<4;i++)
	{
		DIO_writePIN(st_gs_keypadConfig.u8_col1Pin[0],st_gs_keypadConfig.u8_col1Pin[1]+i,STD_LOW);
		for(j=0;j<3;j++)
     6da:	1f 5f       	subi	r17, 0xFF	; 255
     6dc:	13 30       	cpi	r17, 0x03	; 3
     6de:	88 f2       	brcs	.-94     	; 0x682 <KEYPAD_read+0x64>
				
				break;
			}
			
		}
		DIO_writePIN(st_gs_keypadConfig.u8_col1Pin[0],st_gs_keypadConfig.u8_col1Pin[1]+i,STD_HIGH);
     6e0:	ec e2       	ldi	r30, 0x2C	; 44
     6e2:	f1 e0       	ldi	r31, 0x01	; 1
     6e4:	67 81       	ldd	r22, Z+7	; 0x07
     6e6:	60 0f       	add	r22, r16
     6e8:	41 e0       	ldi	r20, 0x01	; 1
     6ea:	86 81       	ldd	r24, Z+6	; 0x06
     6ec:	0e 94 2b 07 	call	0xe56	; 0xe56 <DIO_writePIN>
	DIO_writePIN(st_gs_keypadConfig.u8_col1Pin[0],st_gs_keypadConfig.u8_col1Pin[1],STD_HIGH);
	DIO_writePIN(st_gs_keypadConfig.u8_col2Pin[0],st_gs_keypadConfig.u8_col2Pin[1],STD_HIGH);
	DIO_writePIN(st_gs_keypadConfig.u8_col3Pin[0],st_gs_keypadConfig.u8_col3Pin[1],STD_HIGH);
	DIO_writePIN(st_gs_keypadConfig.u8_col4Pin[0],st_gs_keypadConfig.u8_col4Pin[1],STD_HIGH);
	uint8_t i,j;
	for(i=0;i<4;i++)
     6f0:	0f 5f       	subi	r16, 0xFF	; 255
     6f2:	04 30       	cpi	r16, 0x04	; 4
     6f4:	08 f4       	brcc	.+2      	; 0x6f8 <KEYPAD_read+0xda>
     6f6:	bb cf       	rjmp	.-138    	; 0x66e <KEYPAD_read+0x50>
		DIO_writePIN(st_gs_keypadConfig.u8_col1Pin[0],st_gs_keypadConfig.u8_col1Pin[1]+i,STD_HIGH);
	}
	
	
	
	if(flag==1)
     6f8:	f1 e0       	ldi	r31, 0x01	; 1
     6fa:	df 16       	cp	r13, r31
     6fc:	19 f0       	breq	.+6      	; 0x704 <KEYPAD_read+0xe6>
		
		return ret_val;
	}
	else
	{
		*u8_data='N';
     6fe:	8e e4       	ldi	r24, 0x4E	; 78
     700:	f7 01       	movw	r30, r14
     702:	80 83       	st	Z, r24
		return ret_val;
	}
	
     704:	80 e0       	ldi	r24, 0x00	; 0
     706:	0f 90       	pop	r0
     708:	df 91       	pop	r29
     70a:	cf 91       	pop	r28
     70c:	1f 91       	pop	r17
     70e:	0f 91       	pop	r16
     710:	ff 90       	pop	r15
     712:	ef 90       	pop	r14
     714:	df 90       	pop	r13
     716:	08 95       	ret

00000718 <ENABLE>:
     718:	cf 93       	push	r28
     71a:	df 93       	push	r29
     71c:	c5 e1       	ldi	r28, 0x15	; 21
     71e:	d1 e0       	ldi	r29, 0x01	; 1
     720:	6e 89       	ldd	r22, Y+22	; 0x16
     722:	41 e0       	ldi	r20, 0x01	; 1
     724:	8d 89       	ldd	r24, Y+21	; 0x15
     726:	0e 94 2b 07 	call	0xe56	; 0xe56 <DIO_writePIN>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     72a:	82 e0       	ldi	r24, 0x02	; 2
     72c:	8a 95       	dec	r24
     72e:	f1 f7       	brne	.-4      	; 0x72c <ENABLE+0x14>
     730:	00 c0       	rjmp	.+0      	; 0x732 <ENABLE+0x1a>
     732:	6e 89       	ldd	r22, Y+22	; 0x16
     734:	40 e0       	ldi	r20, 0x00	; 0
     736:	8d 89       	ldd	r24, Y+21	; 0x15
     738:	0e 94 2b 07 	call	0xe56	; 0xe56 <DIO_writePIN>
     73c:	df 91       	pop	r29
     73e:	cf 91       	pop	r28
     740:	08 95       	ret

00000742 <LCD_cmd>:
     742:	1f 93       	push	r17
     744:	cf 93       	push	r28
     746:	df 93       	push	r29
     748:	ec 01       	movw	r28, r24
     74a:	16 2f       	mov	r17, r22
     74c:	6e 89       	ldd	r22, Y+22	; 0x16
     74e:	40 e0       	ldi	r20, 0x00	; 0
     750:	8d 89       	ldd	r24, Y+21	; 0x15
     752:	0e 94 2b 07 	call	0xe56	; 0xe56 <DIO_writePIN>
     756:	6a 89       	ldd	r22, Y+18	; 0x12
     758:	40 e0       	ldi	r20, 0x00	; 0
     75a:	89 89       	ldd	r24, Y+17	; 0x11
     75c:	0e 94 2b 07 	call	0xe56	; 0xe56 <DIO_writePIN>
     760:	6c 89       	ldd	r22, Y+20	; 0x14
     762:	40 e0       	ldi	r20, 0x00	; 0
     764:	8b 89       	ldd	r24, Y+19	; 0x13
     766:	0e 94 2b 07 	call	0xe56	; 0xe56 <DIO_writePIN>
     76a:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <mode>
     76e:	81 11       	cpse	r24, r1
     770:	4a c0       	rjmp	.+148    	; 0x806 <__DATA_REGION_LENGTH__+0x6>
     772:	68 89       	ldd	r22, Y+16	; 0x10
     774:	41 2f       	mov	r20, r17
     776:	44 1f       	adc	r20, r20
     778:	44 27       	eor	r20, r20
     77a:	44 1f       	adc	r20, r20
     77c:	8f 85       	ldd	r24, Y+15	; 0x0f
     77e:	0e 94 2b 07 	call	0xe56	; 0xe56 <DIO_writePIN>
     782:	6e 85       	ldd	r22, Y+14	; 0x0e
     784:	16 fb       	bst	r17, 6
     786:	44 27       	eor	r20, r20
     788:	40 f9       	bld	r20, 0
     78a:	8d 85       	ldd	r24, Y+13	; 0x0d
     78c:	0e 94 2b 07 	call	0xe56	; 0xe56 <DIO_writePIN>
     790:	6c 85       	ldd	r22, Y+12	; 0x0c
     792:	15 fb       	bst	r17, 5
     794:	44 27       	eor	r20, r20
     796:	40 f9       	bld	r20, 0
     798:	8b 85       	ldd	r24, Y+11	; 0x0b
     79a:	0e 94 2b 07 	call	0xe56	; 0xe56 <DIO_writePIN>
     79e:	6a 85       	ldd	r22, Y+10	; 0x0a
     7a0:	14 fb       	bst	r17, 4
     7a2:	44 27       	eor	r20, r20
     7a4:	40 f9       	bld	r20, 0
     7a6:	89 85       	ldd	r24, Y+9	; 0x09
     7a8:	0e 94 2b 07 	call	0xe56	; 0xe56 <DIO_writePIN>
     7ac:	0e 94 8c 03 	call	0x718	; 0x718 <ENABLE>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     7b0:	8f e6       	ldi	r24, 0x6F	; 111
     7b2:	97 e1       	ldi	r25, 0x17	; 23
     7b4:	01 97       	sbiw	r24, 0x01	; 1
     7b6:	f1 f7       	brne	.-4      	; 0x7b4 <LCD_cmd+0x72>
     7b8:	00 c0       	rjmp	.+0      	; 0x7ba <LCD_cmd+0x78>
     7ba:	00 00       	nop
     7bc:	68 89       	ldd	r22, Y+16	; 0x10
     7be:	13 fb       	bst	r17, 3
     7c0:	44 27       	eor	r20, r20
     7c2:	40 f9       	bld	r20, 0
     7c4:	8f 85       	ldd	r24, Y+15	; 0x0f
     7c6:	0e 94 2b 07 	call	0xe56	; 0xe56 <DIO_writePIN>
     7ca:	6e 85       	ldd	r22, Y+14	; 0x0e
     7cc:	12 fb       	bst	r17, 2
     7ce:	44 27       	eor	r20, r20
     7d0:	40 f9       	bld	r20, 0
     7d2:	8d 85       	ldd	r24, Y+13	; 0x0d
     7d4:	0e 94 2b 07 	call	0xe56	; 0xe56 <DIO_writePIN>
     7d8:	6c 85       	ldd	r22, Y+12	; 0x0c
     7da:	11 fb       	bst	r17, 1
     7dc:	44 27       	eor	r20, r20
     7de:	40 f9       	bld	r20, 0
     7e0:	8b 85       	ldd	r24, Y+11	; 0x0b
     7e2:	0e 94 2b 07 	call	0xe56	; 0xe56 <DIO_writePIN>
     7e6:	6a 85       	ldd	r22, Y+10	; 0x0a
     7e8:	41 2f       	mov	r20, r17
     7ea:	41 70       	andi	r20, 0x01	; 1
     7ec:	89 85       	ldd	r24, Y+9	; 0x09
     7ee:	0e 94 2b 07 	call	0xe56	; 0xe56 <DIO_writePIN>
     7f2:	0e 94 8c 03 	call	0x718	; 0x718 <ENABLE>
     7f6:	8f e6       	ldi	r24, 0x6F	; 111
     7f8:	97 e1       	ldi	r25, 0x17	; 23
     7fa:	01 97       	sbiw	r24, 0x01	; 1
     7fc:	f1 f7       	brne	.-4      	; 0x7fa <LCD_cmd+0xb8>
     7fe:	00 c0       	rjmp	.+0      	; 0x800 <__DATA_REGION_LENGTH__>
     800:	00 00       	nop
     802:	80 e0       	ldi	r24, 0x00	; 0
     804:	05 c0       	rjmp	.+10     	; 0x810 <__DATA_REGION_LENGTH__+0x10>
     806:	81 30       	cpi	r24, 0x01	; 1
     808:	11 f4       	brne	.+4      	; 0x80e <__DATA_REGION_LENGTH__+0xe>
     80a:	80 e0       	ldi	r24, 0x00	; 0
     80c:	01 c0       	rjmp	.+2      	; 0x810 <__DATA_REGION_LENGTH__+0x10>
     80e:	85 e0       	ldi	r24, 0x05	; 5
     810:	df 91       	pop	r29
     812:	cf 91       	pop	r28
     814:	1f 91       	pop	r17
     816:	08 95       	ret

00000818 <LCD_init>:
     818:	1f 93       	push	r17
     81a:	cf 93       	push	r28
     81c:	df 93       	push	r29
     81e:	ec 01       	movw	r28, r24
     820:	6a 89       	ldd	r22, Y+18	; 0x12
     822:	41 e0       	ldi	r20, 0x01	; 1
     824:	89 89       	ldd	r24, Y+17	; 0x11
     826:	0e 94 f1 06 	call	0xde2	; 0xde2 <DIO_init>
     82a:	18 2f       	mov	r17, r24
     82c:	6c 89       	ldd	r22, Y+20	; 0x14
     82e:	41 e0       	ldi	r20, 0x01	; 1
     830:	8b 89       	ldd	r24, Y+19	; 0x13
     832:	0e 94 f1 06 	call	0xde2	; 0xde2 <DIO_init>
     836:	18 2b       	or	r17, r24
     838:	6e 89       	ldd	r22, Y+22	; 0x16
     83a:	41 e0       	ldi	r20, 0x01	; 1
     83c:	8d 89       	ldd	r24, Y+21	; 0x15
     83e:	0e 94 f1 06 	call	0xde2	; 0xde2 <DIO_init>
     842:	18 2b       	or	r17, r24
     844:	88 81       	ld	r24, Y
     846:	88 23       	and	r24, r24
     848:	19 f0       	breq	.+6      	; 0x850 <LCD_init+0x38>
     84a:	81 30       	cpi	r24, 0x01	; 1
     84c:	99 f1       	breq	.+102    	; 0x8b4 <__stack+0x55>
     84e:	77 c0       	rjmp	.+238    	; 0x93e <__stack+0xdf>
     850:	62 e0       	ldi	r22, 0x02	; 2
     852:	85 e1       	ldi	r24, 0x15	; 21
     854:	91 e0       	ldi	r25, 0x01	; 1
     856:	0e 94 a1 03 	call	0x742	; 0x742 <LCD_cmd>
     85a:	68 e2       	ldi	r22, 0x28	; 40
     85c:	85 e1       	ldi	r24, 0x15	; 21
     85e:	91 e0       	ldi	r25, 0x01	; 1
     860:	0e 94 a1 03 	call	0x742	; 0x742 <LCD_cmd>
     864:	6c e0       	ldi	r22, 0x0C	; 12
     866:	85 e1       	ldi	r24, 0x15	; 21
     868:	91 e0       	ldi	r25, 0x01	; 1
     86a:	0e 94 a1 03 	call	0x742	; 0x742 <LCD_cmd>
     86e:	66 e0       	ldi	r22, 0x06	; 6
     870:	85 e1       	ldi	r24, 0x15	; 21
     872:	91 e0       	ldi	r25, 0x01	; 1
     874:	0e 94 a1 03 	call	0x742	; 0x742 <LCD_cmd>
     878:	61 e0       	ldi	r22, 0x01	; 1
     87a:	85 e1       	ldi	r24, 0x15	; 21
     87c:	91 e0       	ldi	r25, 0x01	; 1
     87e:	0e 94 a1 03 	call	0x742	; 0x742 <LCD_cmd>
     882:	6a 85       	ldd	r22, Y+10	; 0x0a
     884:	41 e0       	ldi	r20, 0x01	; 1
     886:	89 85       	ldd	r24, Y+9	; 0x09
     888:	0e 94 f1 06 	call	0xde2	; 0xde2 <DIO_init>
     88c:	18 2b       	or	r17, r24
     88e:	6c 85       	ldd	r22, Y+12	; 0x0c
     890:	41 e0       	ldi	r20, 0x01	; 1
     892:	8b 85       	ldd	r24, Y+11	; 0x0b
     894:	0e 94 f1 06 	call	0xde2	; 0xde2 <DIO_init>
     898:	18 2b       	or	r17, r24
     89a:	6e 85       	ldd	r22, Y+14	; 0x0e
     89c:	41 e0       	ldi	r20, 0x01	; 1
     89e:	8d 85       	ldd	r24, Y+13	; 0x0d
     8a0:	0e 94 f1 06 	call	0xde2	; 0xde2 <DIO_init>
     8a4:	18 2b       	or	r17, r24
     8a6:	68 89       	ldd	r22, Y+16	; 0x10
     8a8:	41 e0       	ldi	r20, 0x01	; 1
     8aa:	8f 85       	ldd	r24, Y+15	; 0x0f
     8ac:	0e 94 f1 06 	call	0xde2	; 0xde2 <DIO_init>
     8b0:	81 2b       	or	r24, r17
     8b2:	46 c0       	rjmp	.+140    	; 0x940 <__stack+0xe1>
     8b4:	68 e3       	ldi	r22, 0x38	; 56
     8b6:	85 e1       	ldi	r24, 0x15	; 21
     8b8:	91 e0       	ldi	r25, 0x01	; 1
     8ba:	0e 94 a1 03 	call	0x742	; 0x742 <LCD_cmd>
     8be:	6c e0       	ldi	r22, 0x0C	; 12
     8c0:	85 e1       	ldi	r24, 0x15	; 21
     8c2:	91 e0       	ldi	r25, 0x01	; 1
     8c4:	0e 94 a1 03 	call	0x742	; 0x742 <LCD_cmd>
     8c8:	66 e0       	ldi	r22, 0x06	; 6
     8ca:	85 e1       	ldi	r24, 0x15	; 21
     8cc:	91 e0       	ldi	r25, 0x01	; 1
     8ce:	0e 94 a1 03 	call	0x742	; 0x742 <LCD_cmd>
     8d2:	61 e0       	ldi	r22, 0x01	; 1
     8d4:	85 e1       	ldi	r24, 0x15	; 21
     8d6:	91 e0       	ldi	r25, 0x01	; 1
     8d8:	0e 94 a1 03 	call	0x742	; 0x742 <LCD_cmd>
     8dc:	6a 81       	ldd	r22, Y+2	; 0x02
     8de:	41 e0       	ldi	r20, 0x01	; 1
     8e0:	89 81       	ldd	r24, Y+1	; 0x01
     8e2:	0e 94 f1 06 	call	0xde2	; 0xde2 <DIO_init>
     8e6:	18 2b       	or	r17, r24
     8e8:	6c 81       	ldd	r22, Y+4	; 0x04
     8ea:	41 e0       	ldi	r20, 0x01	; 1
     8ec:	8b 81       	ldd	r24, Y+3	; 0x03
     8ee:	0e 94 f1 06 	call	0xde2	; 0xde2 <DIO_init>
     8f2:	18 2b       	or	r17, r24
     8f4:	6e 81       	ldd	r22, Y+6	; 0x06
     8f6:	41 e0       	ldi	r20, 0x01	; 1
     8f8:	8d 81       	ldd	r24, Y+5	; 0x05
     8fa:	0e 94 f1 06 	call	0xde2	; 0xde2 <DIO_init>
     8fe:	18 2b       	or	r17, r24
     900:	68 85       	ldd	r22, Y+8	; 0x08
     902:	41 e0       	ldi	r20, 0x01	; 1
     904:	8f 81       	ldd	r24, Y+7	; 0x07
     906:	0e 94 f1 06 	call	0xde2	; 0xde2 <DIO_init>
     90a:	18 2b       	or	r17, r24
     90c:	6a 85       	ldd	r22, Y+10	; 0x0a
     90e:	41 e0       	ldi	r20, 0x01	; 1
     910:	89 85       	ldd	r24, Y+9	; 0x09
     912:	0e 94 f1 06 	call	0xde2	; 0xde2 <DIO_init>
     916:	18 2b       	or	r17, r24
     918:	6c 85       	ldd	r22, Y+12	; 0x0c
     91a:	41 e0       	ldi	r20, 0x01	; 1
     91c:	8b 85       	ldd	r24, Y+11	; 0x0b
     91e:	0e 94 f1 06 	call	0xde2	; 0xde2 <DIO_init>
     922:	18 2b       	or	r17, r24
     924:	6e 85       	ldd	r22, Y+14	; 0x0e
     926:	41 e0       	ldi	r20, 0x01	; 1
     928:	8d 85       	ldd	r24, Y+13	; 0x0d
     92a:	0e 94 f1 06 	call	0xde2	; 0xde2 <DIO_init>
     92e:	18 2b       	or	r17, r24
     930:	68 89       	ldd	r22, Y+16	; 0x10
     932:	41 e0       	ldi	r20, 0x01	; 1
     934:	8f 85       	ldd	r24, Y+15	; 0x0f
     936:	0e 94 f1 06 	call	0xde2	; 0xde2 <DIO_init>
     93a:	81 2b       	or	r24, r17
     93c:	01 c0       	rjmp	.+2      	; 0x940 <__stack+0xe1>
     93e:	85 e0       	ldi	r24, 0x05	; 5
     940:	98 81       	ld	r25, Y
     942:	90 93 0c 01 	sts	0x010C, r25	; 0x80010c <mode>
     946:	df 91       	pop	r29
     948:	cf 91       	pop	r28
     94a:	1f 91       	pop	r17
     94c:	08 95       	ret

0000094e <LCD_clear>:
     94e:	61 e0       	ldi	r22, 0x01	; 1
     950:	85 e1       	ldi	r24, 0x15	; 21
     952:	91 e0       	ldi	r25, 0x01	; 1
     954:	0e 94 a1 03 	call	0x742	; 0x742 <LCD_cmd>
     958:	08 95       	ret

0000095a <LCD_setCursor>:
     95a:	81 30       	cpi	r24, 0x01	; 1
     95c:	19 f0       	breq	.+6      	; 0x964 <LCD_setCursor+0xa>
     95e:	82 30       	cpi	r24, 0x02	; 2
     960:	41 f0       	breq	.+16     	; 0x972 <LCD_setCursor+0x18>
     962:	0e c0       	rjmp	.+28     	; 0x980 <LCD_setCursor+0x26>
     964:	61 58       	subi	r22, 0x81	; 129
     966:	85 e1       	ldi	r24, 0x15	; 21
     968:	91 e0       	ldi	r25, 0x01	; 1
     96a:	0e 94 a1 03 	call	0x742	; 0x742 <LCD_cmd>
     96e:	80 e0       	ldi	r24, 0x00	; 0
     970:	08 95       	ret
     972:	61 54       	subi	r22, 0x41	; 65
     974:	85 e1       	ldi	r24, 0x15	; 21
     976:	91 e0       	ldi	r25, 0x01	; 1
     978:	0e 94 a1 03 	call	0x742	; 0x742 <LCD_cmd>
     97c:	80 e0       	ldi	r24, 0x00	; 0
     97e:	08 95       	ret
     980:	85 e0       	ldi	r24, 0x05	; 5
     982:	08 95       	ret

00000984 <LCD_char>:
     984:	1f 93       	push	r17
     986:	cf 93       	push	r28
     988:	df 93       	push	r29
     98a:	ec 01       	movw	r28, r24
     98c:	16 2f       	mov	r17, r22
     98e:	6e 89       	ldd	r22, Y+22	; 0x16
     990:	40 e0       	ldi	r20, 0x00	; 0
     992:	8d 89       	ldd	r24, Y+21	; 0x15
     994:	0e 94 2b 07 	call	0xe56	; 0xe56 <DIO_writePIN>
     998:	6a 89       	ldd	r22, Y+18	; 0x12
     99a:	41 e0       	ldi	r20, 0x01	; 1
     99c:	89 89       	ldd	r24, Y+17	; 0x11
     99e:	0e 94 2b 07 	call	0xe56	; 0xe56 <DIO_writePIN>
     9a2:	6c 89       	ldd	r22, Y+20	; 0x14
     9a4:	40 e0       	ldi	r20, 0x00	; 0
     9a6:	8b 89       	ldd	r24, Y+19	; 0x13
     9a8:	0e 94 2b 07 	call	0xe56	; 0xe56 <DIO_writePIN>
     9ac:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <mode>
     9b0:	81 11       	cpse	r24, r1
     9b2:	48 c0       	rjmp	.+144    	; 0xa44 <LCD_char+0xc0>
     9b4:	68 89       	ldd	r22, Y+16	; 0x10
     9b6:	41 2f       	mov	r20, r17
     9b8:	44 1f       	adc	r20, r20
     9ba:	44 27       	eor	r20, r20
     9bc:	44 1f       	adc	r20, r20
     9be:	8f 85       	ldd	r24, Y+15	; 0x0f
     9c0:	0e 94 2b 07 	call	0xe56	; 0xe56 <DIO_writePIN>
     9c4:	6e 85       	ldd	r22, Y+14	; 0x0e
     9c6:	16 fb       	bst	r17, 6
     9c8:	44 27       	eor	r20, r20
     9ca:	40 f9       	bld	r20, 0
     9cc:	8d 85       	ldd	r24, Y+13	; 0x0d
     9ce:	0e 94 2b 07 	call	0xe56	; 0xe56 <DIO_writePIN>
     9d2:	6c 85       	ldd	r22, Y+12	; 0x0c
     9d4:	15 fb       	bst	r17, 5
     9d6:	44 27       	eor	r20, r20
     9d8:	40 f9       	bld	r20, 0
     9da:	8b 85       	ldd	r24, Y+11	; 0x0b
     9dc:	0e 94 2b 07 	call	0xe56	; 0xe56 <DIO_writePIN>
     9e0:	6a 85       	ldd	r22, Y+10	; 0x0a
     9e2:	14 fb       	bst	r17, 4
     9e4:	44 27       	eor	r20, r20
     9e6:	40 f9       	bld	r20, 0
     9e8:	89 85       	ldd	r24, Y+9	; 0x09
     9ea:	0e 94 2b 07 	call	0xe56	; 0xe56 <DIO_writePIN>
     9ee:	0e 94 8c 03 	call	0x718	; 0x718 <ENABLE>
     9f2:	8f e6       	ldi	r24, 0x6F	; 111
     9f4:	97 e1       	ldi	r25, 0x17	; 23
     9f6:	01 97       	sbiw	r24, 0x01	; 1
     9f8:	f1 f7       	brne	.-4      	; 0x9f6 <LCD_char+0x72>
     9fa:	00 c0       	rjmp	.+0      	; 0x9fc <LCD_char+0x78>
     9fc:	00 00       	nop
     9fe:	68 89       	ldd	r22, Y+16	; 0x10
     a00:	13 fb       	bst	r17, 3
     a02:	44 27       	eor	r20, r20
     a04:	40 f9       	bld	r20, 0
     a06:	8f 85       	ldd	r24, Y+15	; 0x0f
     a08:	0e 94 2b 07 	call	0xe56	; 0xe56 <DIO_writePIN>
     a0c:	6e 85       	ldd	r22, Y+14	; 0x0e
     a0e:	12 fb       	bst	r17, 2
     a10:	44 27       	eor	r20, r20
     a12:	40 f9       	bld	r20, 0
     a14:	8d 85       	ldd	r24, Y+13	; 0x0d
     a16:	0e 94 2b 07 	call	0xe56	; 0xe56 <DIO_writePIN>
     a1a:	6c 85       	ldd	r22, Y+12	; 0x0c
     a1c:	11 fb       	bst	r17, 1
     a1e:	44 27       	eor	r20, r20
     a20:	40 f9       	bld	r20, 0
     a22:	8b 85       	ldd	r24, Y+11	; 0x0b
     a24:	0e 94 2b 07 	call	0xe56	; 0xe56 <DIO_writePIN>
     a28:	6a 85       	ldd	r22, Y+10	; 0x0a
     a2a:	41 2f       	mov	r20, r17
     a2c:	41 70       	andi	r20, 0x01	; 1
     a2e:	89 85       	ldd	r24, Y+9	; 0x09
     a30:	0e 94 2b 07 	call	0xe56	; 0xe56 <DIO_writePIN>
     a34:	0e 94 8c 03 	call	0x718	; 0x718 <ENABLE>
     a38:	8f e6       	ldi	r24, 0x6F	; 111
     a3a:	97 e1       	ldi	r25, 0x17	; 23
     a3c:	01 97       	sbiw	r24, 0x01	; 1
     a3e:	f1 f7       	brne	.-4      	; 0xa3c <LCD_char+0xb8>
     a40:	00 c0       	rjmp	.+0      	; 0xa42 <LCD_char+0xbe>
     a42:	00 00       	nop
     a44:	df 91       	pop	r29
     a46:	cf 91       	pop	r28
     a48:	1f 91       	pop	r17
     a4a:	08 95       	ret

00000a4c <LCD_writeString>:
     a4c:	0f 93       	push	r16
     a4e:	1f 93       	push	r17
     a50:	cf 93       	push	r28
     a52:	00 97       	sbiw	r24, 0x00	; 0
     a54:	81 f0       	breq	.+32     	; 0xa76 <LCD_writeString+0x2a>
     a56:	8c 01       	movw	r16, r24
     a58:	c0 e0       	ldi	r28, 0x00	; 0
     a5a:	05 c0       	rjmp	.+10     	; 0xa66 <LCD_writeString+0x1a>
     a5c:	85 e1       	ldi	r24, 0x15	; 21
     a5e:	91 e0       	ldi	r25, 0x01	; 1
     a60:	0e 94 c2 04 	call	0x984	; 0x984 <LCD_char>
     a64:	cf 5f       	subi	r28, 0xFF	; 255
     a66:	f8 01       	movw	r30, r16
     a68:	ec 0f       	add	r30, r28
     a6a:	f1 1d       	adc	r31, r1
     a6c:	60 81       	ld	r22, Z
     a6e:	61 11       	cpse	r22, r1
     a70:	f5 cf       	rjmp	.-22     	; 0xa5c <LCD_writeString+0x10>
     a72:	80 e0       	ldi	r24, 0x00	; 0
     a74:	01 c0       	rjmp	.+2      	; 0xa78 <LCD_writeString+0x2c>
     a76:	85 e0       	ldi	r24, 0x05	; 5
     a78:	cf 91       	pop	r28
     a7a:	1f 91       	pop	r17
     a7c:	0f 91       	pop	r16
     a7e:	08 95       	ret

00000a80 <LCD_writeSpChar>:
     a80:	1f 93       	push	r17
     a82:	cf 93       	push	r28
     a84:	df 93       	push	r29
     a86:	cd b7       	in	r28, 0x3d	; 61
     a88:	de b7       	in	r29, 0x3e	; 62
     a8a:	28 97       	sbiw	r28, 0x08	; 8
     a8c:	0f b6       	in	r0, 0x3f	; 63
     a8e:	f8 94       	cli
     a90:	de bf       	out	0x3e, r29	; 62
     a92:	0f be       	out	0x3f, r0	; 63
     a94:	cd bf       	out	0x3d, r28	; 61
     a96:	98 e0       	ldi	r25, 0x08	; 8
     a98:	e4 e6       	ldi	r30, 0x64	; 100
     a9a:	f0 e0       	ldi	r31, 0x00	; 0
     a9c:	de 01       	movw	r26, r28
     a9e:	11 96       	adiw	r26, 0x01	; 1
     aa0:	01 90       	ld	r0, Z+
     aa2:	0d 92       	st	X+, r0
     aa4:	9a 95       	dec	r25
     aa6:	e1 f7       	brne	.-8      	; 0xaa0 <LCD_writeSpChar+0x20>
     aa8:	68 2f       	mov	r22, r24
     aaa:	70 e0       	ldi	r23, 0x00	; 0
     aac:	68 5f       	subi	r22, 0xF8	; 248
     aae:	7f 4f       	sbci	r23, 0xFF	; 255
     ab0:	66 0f       	add	r22, r22
     ab2:	66 0f       	add	r22, r22
     ab4:	66 0f       	add	r22, r22
     ab6:	85 e1       	ldi	r24, 0x15	; 21
     ab8:	91 e0       	ldi	r25, 0x01	; 1
     aba:	0e 94 a1 03 	call	0x742	; 0x742 <LCD_cmd>
     abe:	10 e0       	ldi	r17, 0x00	; 0
     ac0:	0c c0       	rjmp	.+24     	; 0xada <LCD_writeSpChar+0x5a>
     ac2:	e1 e0       	ldi	r30, 0x01	; 1
     ac4:	f0 e0       	ldi	r31, 0x00	; 0
     ac6:	ec 0f       	add	r30, r28
     ac8:	fd 1f       	adc	r31, r29
     aca:	e1 0f       	add	r30, r17
     acc:	f1 1d       	adc	r31, r1
     ace:	60 81       	ld	r22, Z
     ad0:	85 e1       	ldi	r24, 0x15	; 21
     ad2:	91 e0       	ldi	r25, 0x01	; 1
     ad4:	0e 94 c2 04 	call	0x984	; 0x984 <LCD_char>
     ad8:	1f 5f       	subi	r17, 0xFF	; 255
     ada:	18 30       	cpi	r17, 0x08	; 8
     adc:	90 f3       	brcs	.-28     	; 0xac2 <LCD_writeSpChar+0x42>
     ade:	60 ec       	ldi	r22, 0xC0	; 192
     ae0:	85 e1       	ldi	r24, 0x15	; 21
     ae2:	91 e0       	ldi	r25, 0x01	; 1
     ae4:	0e 94 a1 03 	call	0x742	; 0x742 <LCD_cmd>
     ae8:	63 e0       	ldi	r22, 0x03	; 3
     aea:	85 e1       	ldi	r24, 0x15	; 21
     aec:	91 e0       	ldi	r25, 0x01	; 1
     aee:	0e 94 c2 04 	call	0x984	; 0x984 <LCD_char>
     af2:	80 e0       	ldi	r24, 0x00	; 0
     af4:	28 96       	adiw	r28, 0x08	; 8
     af6:	0f b6       	in	r0, 0x3f	; 63
     af8:	f8 94       	cli
     afa:	de bf       	out	0x3e, r29	; 62
     afc:	0f be       	out	0x3f, r0	; 63
     afe:	cd bf       	out	0x3d, r28	; 61
     b00:	df 91       	pop	r29
     b02:	cf 91       	pop	r28
     b04:	1f 91       	pop	r17
     b06:	08 95       	ret

00000b08 <TEMP_SENSOR_init>:
     b08:	cf 93       	push	r28
     b0a:	df 93       	push	r29
     b0c:	00 97       	sbiw	r24, 0x00	; 0
     b0e:	b9 f0       	breq	.+46     	; 0xb3e <TEMP_SENSOR_init+0x36>
     b10:	fc 01       	movw	r30, r24
     b12:	22 81       	ldd	r18, Z+2	; 0x02
     b14:	28 30       	cpi	r18, 0x08	; 8
     b16:	a8 f4       	brcc	.+42     	; 0xb42 <TEMP_SENSOR_init+0x3a>
     b18:	21 81       	ldd	r18, Z+1	; 0x01
     b1a:	28 30       	cpi	r18, 0x08	; 8
     b1c:	a0 f4       	brcc	.+40     	; 0xb46 <TEMP_SENSOR_init+0x3e>
     b1e:	ec 01       	movw	r28, r24
     b20:	ed e0       	ldi	r30, 0x0D	; 13
     b22:	f1 e0       	ldi	r31, 0x01	; 1
     b24:	21 83       	std	Z+1, r18	; 0x01
     b26:	88 81       	ld	r24, Y
     b28:	80 83       	st	Z, r24
     b2a:	cf 01       	movw	r24, r30
     b2c:	0e 94 7a 06 	call	0xcf4	; 0xcf4 <ADC_init>
     b30:	6a 81       	ldd	r22, Y+2	; 0x02
     b32:	40 e0       	ldi	r20, 0x00	; 0
     b34:	80 e0       	ldi	r24, 0x00	; 0
     b36:	0e 94 f1 06 	call	0xde2	; 0xde2 <DIO_init>
     b3a:	80 e0       	ldi	r24, 0x00	; 0
     b3c:	05 c0       	rjmp	.+10     	; 0xb48 <TEMP_SENSOR_init+0x40>
     b3e:	88 e0       	ldi	r24, 0x08	; 8
     b40:	03 c0       	rjmp	.+6      	; 0xb48 <TEMP_SENSOR_init+0x40>
     b42:	88 e0       	ldi	r24, 0x08	; 8
     b44:	01 c0       	rjmp	.+2      	; 0xb48 <TEMP_SENSOR_init+0x40>
     b46:	88 e0       	ldi	r24, 0x08	; 8
     b48:	df 91       	pop	r29
     b4a:	cf 91       	pop	r28
     b4c:	08 95       	ret

00000b4e <TEMP_SENSOR_read>:
     b4e:	8f 92       	push	r8
     b50:	9f 92       	push	r9
     b52:	af 92       	push	r10
     b54:	bf 92       	push	r11
     b56:	ef 92       	push	r14
     b58:	ff 92       	push	r15
     b5a:	1f 93       	push	r17
     b5c:	cf 93       	push	r28
     b5e:	df 93       	push	r29
     b60:	00 d0       	rcall	.+0      	; 0xb62 <TEMP_SENSOR_read+0x14>
     b62:	cd b7       	in	r28, 0x3d	; 61
     b64:	de b7       	in	r29, 0x3e	; 62
     b66:	1a 82       	std	Y+2, r1	; 0x02
     b68:	19 82       	std	Y+1, r1	; 0x01
     b6a:	61 15       	cp	r22, r1
     b6c:	71 05       	cpc	r23, r1
     b6e:	09 f4       	brne	.+2      	; 0xb72 <TEMP_SENSOR_read+0x24>
     b70:	64 c0       	rjmp	.+200    	; 0xc3a <TEMP_SENSOR_read+0xec>
     b72:	00 97       	sbiw	r24, 0x00	; 0
     b74:	09 f4       	brne	.+2      	; 0xb78 <TEMP_SENSOR_read+0x2a>
     b76:	63 c0       	rjmp	.+198    	; 0xc3e <TEMP_SENSOR_read+0xf0>
     b78:	fc 01       	movw	r30, r24
     b7a:	22 81       	ldd	r18, Z+2	; 0x02
     b7c:	28 30       	cpi	r18, 0x08	; 8
     b7e:	08 f0       	brcs	.+2      	; 0xb82 <TEMP_SENSOR_read+0x34>
     b80:	60 c0       	rjmp	.+192    	; 0xc42 <TEMP_SENSOR_read+0xf4>
     b82:	31 81       	ldd	r19, Z+1	; 0x01
     b84:	38 30       	cpi	r19, 0x08	; 8
     b86:	08 f0       	brcs	.+2      	; 0xb8a <TEMP_SENSOR_read+0x3c>
     b88:	5e c0       	rjmp	.+188    	; 0xc46 <TEMP_SENSOR_read+0xf8>
     b8a:	7b 01       	movw	r14, r22
     b8c:	5c 01       	movw	r10, r24
     b8e:	be 01       	movw	r22, r28
     b90:	6f 5f       	subi	r22, 0xFF	; 255
     b92:	7f 4f       	sbci	r23, 0xFF	; 255
     b94:	82 2f       	mov	r24, r18
     b96:	0e 94 a9 06 	call	0xd52	; 0xd52 <ADC_read>
     b9a:	18 2f       	mov	r17, r24
     b9c:	81 11       	cpse	r24, r1
     b9e:	0a c0       	rjmp	.+20     	; 0xbb4 <TEMP_SENSOR_read+0x66>
     ba0:	f5 01       	movw	r30, r10
     ba2:	80 81       	ld	r24, Z
     ba4:	83 30       	cpi	r24, 0x03	; 3
     ba6:	51 f0       	breq	.+20     	; 0xbbc <TEMP_SENSOR_read+0x6e>
     ba8:	81 30       	cpi	r24, 0x01	; 1
     baa:	99 f0       	breq	.+38     	; 0xbd2 <TEMP_SENSOR_read+0x84>
     bac:	81 2c       	mov	r8, r1
     bae:	91 2c       	mov	r9, r1
     bb0:	54 01       	movw	r10, r8
     bb2:	17 c0       	rjmp	.+46     	; 0xbe2 <TEMP_SENSOR_read+0x94>
     bb4:	81 2c       	mov	r8, r1
     bb6:	91 2c       	mov	r9, r1
     bb8:	54 01       	movw	r10, r8
     bba:	13 c0       	rjmp	.+38     	; 0xbe2 <TEMP_SENSOR_read+0x94>
     bbc:	0f 2e       	mov	r0, r31
     bbe:	fa e0       	ldi	r31, 0x0A	; 10
     bc0:	8f 2e       	mov	r8, r31
     bc2:	f7 ed       	ldi	r31, 0xD7	; 215
     bc4:	9f 2e       	mov	r9, r31
     bc6:	f3 e2       	ldi	r31, 0x23	; 35
     bc8:	af 2e       	mov	r10, r31
     bca:	fb e3       	ldi	r31, 0x3B	; 59
     bcc:	bf 2e       	mov	r11, r31
     bce:	f0 2d       	mov	r31, r0
     bd0:	08 c0       	rjmp	.+16     	; 0xbe2 <TEMP_SENSOR_read+0x94>
     bd2:	0f 2e       	mov	r0, r31
     bd4:	81 2c       	mov	r8, r1
     bd6:	91 2c       	mov	r9, r1
     bd8:	f0 ea       	ldi	r31, 0xA0	; 160
     bda:	af 2e       	mov	r10, r31
     bdc:	fb e3       	ldi	r31, 0x3B	; 59
     bde:	bf 2e       	mov	r11, r31
     be0:	f0 2d       	mov	r31, r0
     be2:	69 81       	ldd	r22, Y+1	; 0x01
     be4:	7a 81       	ldd	r23, Y+2	; 0x02
     be6:	80 e0       	ldi	r24, 0x00	; 0
     be8:	90 e0       	ldi	r25, 0x00	; 0
     bea:	0e 94 6a 0b 	call	0x16d4	; 0x16d4 <__floatunsisf>
     bee:	9b 01       	movw	r18, r22
     bf0:	ac 01       	movw	r20, r24
     bf2:	c5 01       	movw	r24, r10
     bf4:	b4 01       	movw	r22, r8
     bf6:	0e 94 21 0c 	call	0x1842	; 0x1842 <__mulsf3>
     bfa:	20 e0       	ldi	r18, 0x00	; 0
     bfc:	30 e0       	ldi	r19, 0x00	; 0
     bfe:	48 ec       	ldi	r20, 0xC8	; 200
     c00:	52 e4       	ldi	r21, 0x42	; 66
     c02:	0e 94 21 0c 	call	0x1842	; 0x1842 <__mulsf3>
     c06:	4b 01       	movw	r8, r22
     c08:	5c 01       	movw	r10, r24
     c0a:	20 e0       	ldi	r18, 0x00	; 0
     c0c:	30 e0       	ldi	r19, 0x00	; 0
     c0e:	46 e1       	ldi	r20, 0x16	; 22
     c10:	53 e4       	ldi	r21, 0x43	; 67
     c12:	0e 94 1c 0c 	call	0x1838	; 0x1838 <__gesf2>
     c16:	88 23       	and	r24, r24
     c18:	54 f0       	brlt	.+20     	; 0xc2e <TEMP_SENSOR_read+0xe0>
     c1a:	80 e0       	ldi	r24, 0x00	; 0
     c1c:	90 e0       	ldi	r25, 0x00	; 0
     c1e:	a6 e1       	ldi	r26, 0x16	; 22
     c20:	b3 e4       	ldi	r27, 0x43	; 67
     c22:	f7 01       	movw	r30, r14
     c24:	80 83       	st	Z, r24
     c26:	91 83       	std	Z+1, r25	; 0x01
     c28:	a2 83       	std	Z+2, r26	; 0x02
     c2a:	b3 83       	std	Z+3, r27	; 0x03
     c2c:	0d c0       	rjmp	.+26     	; 0xc48 <TEMP_SENSOR_read+0xfa>
     c2e:	f7 01       	movw	r30, r14
     c30:	80 82       	st	Z, r8
     c32:	91 82       	std	Z+1, r9	; 0x01
     c34:	a2 82       	std	Z+2, r10	; 0x02
     c36:	b3 82       	std	Z+3, r11	; 0x03
     c38:	07 c0       	rjmp	.+14     	; 0xc48 <TEMP_SENSOR_read+0xfa>
     c3a:	18 e0       	ldi	r17, 0x08	; 8
     c3c:	05 c0       	rjmp	.+10     	; 0xc48 <TEMP_SENSOR_read+0xfa>
     c3e:	18 e0       	ldi	r17, 0x08	; 8
     c40:	03 c0       	rjmp	.+6      	; 0xc48 <TEMP_SENSOR_read+0xfa>
     c42:	18 e0       	ldi	r17, 0x08	; 8
     c44:	01 c0       	rjmp	.+2      	; 0xc48 <TEMP_SENSOR_read+0xfa>
     c46:	18 e0       	ldi	r17, 0x08	; 8
     c48:	81 2f       	mov	r24, r17
     c4a:	0f 90       	pop	r0
     c4c:	0f 90       	pop	r0
     c4e:	df 91       	pop	r29
     c50:	cf 91       	pop	r28
     c52:	1f 91       	pop	r17
     c54:	ff 90       	pop	r15
     c56:	ef 90       	pop	r14
     c58:	bf 90       	pop	r11
     c5a:	af 90       	pop	r10
     c5c:	9f 90       	pop	r9
     c5e:	8f 90       	pop	r8
     c60:	08 95       	ret

00000c62 <TIMER_Manager_init>:
     c62:	1f 93       	push	r17
     c64:	cf 93       	push	r28
     c66:	df 93       	push	r29
     c68:	00 97       	sbiw	r24, 0x00	; 0
     c6a:	91 f0       	breq	.+36     	; 0xc90 <TIMER_Manager_init+0x2e>
     c6c:	fc 01       	movw	r30, r24
     c6e:	20 81       	ld	r18, Z
     c70:	23 30       	cpi	r18, 0x03	; 3
     c72:	80 f4       	brcc	.+32     	; 0xc94 <TIMER_Manager_init+0x32>
     c74:	21 81       	ldd	r18, Z+1	; 0x01
     c76:	2a 30       	cpi	r18, 0x0A	; 10
     c78:	78 f4       	brcc	.+30     	; 0xc98 <TIMER_Manager_init+0x36>
     c7a:	ec 01       	movw	r28, r24
     c7c:	0e 94 a1 08 	call	0x1142	; 0x1142 <TIMER_init>
     c80:	18 2f       	mov	r17, r24
     c82:	68 81       	ld	r22, Y
     c84:	8d 81       	ldd	r24, Y+5	; 0x05
     c86:	9e 81       	ldd	r25, Y+6	; 0x06
     c88:	0e 94 a2 0a 	call	0x1544	; 0x1544 <TIMER_setCallBack>
     c8c:	81 2b       	or	r24, r17
     c8e:	05 c0       	rjmp	.+10     	; 0xc9a <TIMER_Manager_init+0x38>
     c90:	83 e0       	ldi	r24, 0x03	; 3
     c92:	03 c0       	rjmp	.+6      	; 0xc9a <TIMER_Manager_init+0x38>
     c94:	83 e0       	ldi	r24, 0x03	; 3
     c96:	01 c0       	rjmp	.+2      	; 0xc9a <TIMER_Manager_init+0x38>
     c98:	83 e0       	ldi	r24, 0x03	; 3
     c9a:	df 91       	pop	r29
     c9c:	cf 91       	pop	r28
     c9e:	1f 91       	pop	r17
     ca0:	08 95       	ret

00000ca2 <TIMER_Manager_start>:
     ca2:	00 97       	sbiw	r24, 0x00	; 0
     ca4:	51 f0       	breq	.+20     	; 0xcba <TIMER_Manager_start+0x18>
     ca6:	fc 01       	movw	r30, r24
     ca8:	20 81       	ld	r18, Z
     caa:	23 30       	cpi	r18, 0x03	; 3
     cac:	40 f4       	brcc	.+16     	; 0xcbe <TIMER_Manager_start+0x1c>
     cae:	21 81       	ldd	r18, Z+1	; 0x01
     cb0:	2a 30       	cpi	r18, 0x0A	; 10
     cb2:	38 f4       	brcc	.+14     	; 0xcc2 <TIMER_Manager_start+0x20>
     cb4:	0e 94 2e 09 	call	0x125c	; 0x125c <TIMER_start>
     cb8:	08 95       	ret
     cba:	83 e0       	ldi	r24, 0x03	; 3
     cbc:	08 95       	ret
     cbe:	83 e0       	ldi	r24, 0x03	; 3
     cc0:	08 95       	ret
     cc2:	83 e0       	ldi	r24, 0x03	; 3
     cc4:	08 95       	ret

00000cc6 <TIMER_Manager_reset>:
     cc6:	00 97       	sbiw	r24, 0x00	; 0
     cc8:	51 f0       	breq	.+20     	; 0xcde <TIMER_Manager_reset+0x18>
     cca:	fc 01       	movw	r30, r24
     ccc:	20 81       	ld	r18, Z
     cce:	23 30       	cpi	r18, 0x03	; 3
     cd0:	40 f4       	brcc	.+16     	; 0xce2 <TIMER_Manager_reset+0x1c>
     cd2:	21 81       	ldd	r18, Z+1	; 0x01
     cd4:	2a 30       	cpi	r18, 0x0A	; 10
     cd6:	38 f4       	brcc	.+14     	; 0xce6 <TIMER_Manager_reset+0x20>
     cd8:	0e 94 7a 0a 	call	0x14f4	; 0x14f4 <TIMER_reset>
     cdc:	08 95       	ret
     cde:	83 e0       	ldi	r24, 0x03	; 3
     ce0:	08 95       	ret
     ce2:	83 e0       	ldi	r24, 0x03	; 3
     ce4:	08 95       	ret
     ce6:	83 e0       	ldi	r24, 0x03	; 3
     ce8:	08 95       	ret

00000cea <main>:
#include "APP/app.h"

int main(void)
{

	APP_start();
     cea:	0e 94 7c 02 	call	0x4f8	; 0x4f8 <APP_start>
	
}
     cee:	80 e0       	ldi	r24, 0x00	; 0
     cf0:	90 e0       	ldi	r25, 0x00	; 0
     cf2:	08 95       	ret

00000cf4 <ADC_init>:
     cf4:	00 97       	sbiw	r24, 0x00	; 0
     cf6:	59 f1       	breq	.+86     	; 0xd4e <ADC_init+0x5a>
     cf8:	fc 01       	movw	r30, r24
     cfa:	21 81       	ldd	r18, Z+1	; 0x01
     cfc:	20 68       	ori	r18, 0x80	; 128
     cfe:	26 b9       	out	0x06, r18	; 6
     d00:	80 81       	ld	r24, Z
     d02:	82 95       	swap	r24
     d04:	88 0f       	add	r24, r24
     d06:	88 0f       	add	r24, r24
     d08:	80 7c       	andi	r24, 0xC0	; 192
     d0a:	87 b9       	out	0x07, r24	; 7
     d0c:	81 e0       	ldi	r24, 0x01	; 1
     d0e:	90 e0       	ldi	r25, 0x00	; 0
     d10:	62 e0       	ldi	r22, 0x02	; 2
     d12:	70 e0       	ldi	r23, 0x00	; 0
     d14:	03 c0       	rjmp	.+6      	; 0xd1c <ADC_init+0x28>
     d16:	66 0f       	add	r22, r22
     d18:	77 1f       	adc	r23, r23
     d1a:	01 96       	adiw	r24, 0x01	; 1
     d1c:	8a 30       	cpi	r24, 0x0A	; 10
     d1e:	91 05       	cpc	r25, r1
     d20:	d4 f3       	brlt	.-12     	; 0xd16 <ADC_init+0x22>
     d22:	80 e0       	ldi	r24, 0x00	; 0
     d24:	90 e0       	ldi	r25, 0x00	; 0
     d26:	0e 94 6a 0b 	call	0x16d4	; 0x16d4 <__floatunsisf>
     d2a:	9b 01       	movw	r18, r22
     d2c:	ac 01       	movw	r20, r24
     d2e:	60 e0       	ldi	r22, 0x00	; 0
     d30:	70 e0       	ldi	r23, 0x00	; 0
     d32:	80 ea       	ldi	r24, 0xA0	; 160
     d34:	90 e4       	ldi	r25, 0x40	; 64
     d36:	0e 94 c9 0a 	call	0x1592	; 0x1592 <__divsf3>
     d3a:	60 93 3a 01 	sts	0x013A, r22	; 0x80013a <Quantisation_step>
     d3e:	70 93 3b 01 	sts	0x013B, r23	; 0x80013b <Quantisation_step+0x1>
     d42:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <Quantisation_step+0x2>
     d46:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <Quantisation_step+0x3>
     d4a:	80 e0       	ldi	r24, 0x00	; 0
     d4c:	08 95       	ret
     d4e:	84 e0       	ldi	r24, 0x04	; 4
     d50:	08 95       	ret

00000d52 <ADC_read>:
     d52:	0f 93       	push	r16
     d54:	1f 93       	push	r17
     d56:	cf 93       	push	r28
     d58:	88 30       	cpi	r24, 0x08	; 8
     d5a:	e0 f5       	brcc	.+120    	; 0xdd4 <ADC_read+0x82>
     d5c:	61 15       	cp	r22, r1
     d5e:	71 05       	cpc	r23, r1
     d60:	d9 f1       	breq	.+118    	; 0xdd8 <ADC_read+0x86>
     d62:	8b 01       	movw	r16, r22
     d64:	c8 2f       	mov	r28, r24
     d66:	4a b3       	in	r20, 0x1a	; 26
     d68:	81 e0       	ldi	r24, 0x01	; 1
     d6a:	90 e0       	ldi	r25, 0x00	; 0
     d6c:	9c 01       	movw	r18, r24
     d6e:	0c 2e       	mov	r0, r28
     d70:	02 c0       	rjmp	.+4      	; 0xd76 <ADC_read+0x24>
     d72:	22 0f       	add	r18, r18
     d74:	33 1f       	adc	r19, r19
     d76:	0a 94       	dec	r0
     d78:	e2 f7       	brpl	.-8      	; 0xd72 <ADC_read+0x20>
     d7a:	84 2f       	mov	r24, r20
     d7c:	90 e0       	ldi	r25, 0x00	; 0
     d7e:	82 23       	and	r24, r18
     d80:	93 23       	and	r25, r19
     d82:	0c 2e       	mov	r0, r28
     d84:	02 c0       	rjmp	.+4      	; 0xd8a <ADC_read+0x38>
     d86:	96 95       	lsr	r25
     d88:	87 95       	ror	r24
     d8a:	0a 94       	dec	r0
     d8c:	e2 f7       	brpl	.-8      	; 0xd86 <ADC_read+0x34>
     d8e:	89 2b       	or	r24, r25
     d90:	29 f0       	breq	.+10     	; 0xd9c <ADC_read+0x4a>
     d92:	40 e0       	ldi	r20, 0x00	; 0
     d94:	6c 2f       	mov	r22, r28
     d96:	80 e0       	ldi	r24, 0x00	; 0
     d98:	0e 94 f1 06 	call	0xde2	; 0xde2 <DIO_init>
     d9c:	36 99       	sbic	0x06, 6	; 6
     d9e:	fe cf       	rjmp	.-4      	; 0xd9c <ADC_read+0x4a>
     da0:	87 b1       	in	r24, 0x07	; 7
     da2:	88 7f       	andi	r24, 0xF8	; 248
     da4:	8c 2b       	or	r24, r28
     da6:	87 b9       	out	0x07, r24	; 7
     da8:	86 b1       	in	r24, 0x06	; 6
     daa:	80 64       	ori	r24, 0x40	; 64
     dac:	86 b9       	out	0x06, r24	; 6
     dae:	8f e1       	ldi	r24, 0x1F	; 31
     db0:	9e e4       	ldi	r25, 0x4E	; 78
     db2:	01 97       	sbiw	r24, 0x01	; 1
     db4:	f1 f7       	brne	.-4      	; 0xdb2 <ADC_read+0x60>
     db6:	00 c0       	rjmp	.+0      	; 0xdb8 <ADC_read+0x66>
     db8:	00 00       	nop
     dba:	34 9b       	sbis	0x06, 4	; 6
     dbc:	fe cf       	rjmp	.-4      	; 0xdba <ADC_read+0x68>
     dbe:	24 b1       	in	r18, 0x04	; 4
     dc0:	85 b1       	in	r24, 0x05	; 5
     dc2:	90 e0       	ldi	r25, 0x00	; 0
     dc4:	98 2f       	mov	r25, r24
     dc6:	88 27       	eor	r24, r24
     dc8:	82 2b       	or	r24, r18
     dca:	f8 01       	movw	r30, r16
     dcc:	91 83       	std	Z+1, r25	; 0x01
     dce:	80 83       	st	Z, r24
     dd0:	80 e0       	ldi	r24, 0x00	; 0
     dd2:	03 c0       	rjmp	.+6      	; 0xdda <ADC_read+0x88>
     dd4:	84 e0       	ldi	r24, 0x04	; 4
     dd6:	01 c0       	rjmp	.+2      	; 0xdda <ADC_read+0x88>
     dd8:	84 e0       	ldi	r24, 0x04	; 4
     dda:	cf 91       	pop	r28
     ddc:	1f 91       	pop	r17
     dde:	0f 91       	pop	r16
     de0:	08 95       	ret

00000de2 <DIO_init>:


u8_en_dioErrors DIO_init (en_dioPortsType port, en_dioPinsType pin, u8_en_dioDirType direction)
{
	
	if (pin < DIO_MAX_PINS)
     de2:	68 30       	cpi	r22, 0x08	; 8
     de4:	a0 f5       	brcc	.+104    	; 0xe4e <DIO_init+0x6c>
	{
		if (port == porta)
     de6:	81 11       	cpse	r24, r1
     de8:	0b c0       	rjmp	.+22     	; 0xe00 <DIO_init+0x1e>
		{
			DATA_DIRECTION_PORTA |= direction << pin;
     dea:	8a b3       	in	r24, 0x1a	; 26
     dec:	50 e0       	ldi	r21, 0x00	; 0
     dee:	02 c0       	rjmp	.+4      	; 0xdf4 <DIO_init+0x12>
     df0:	44 0f       	add	r20, r20
     df2:	55 1f       	adc	r21, r21
     df4:	6a 95       	dec	r22
     df6:	e2 f7       	brpl	.-8      	; 0xdf0 <DIO_init+0xe>
     df8:	48 2b       	or	r20, r24
     dfa:	4a bb       	out	0x1a, r20	; 26
			return DIO_E_OK;
     dfc:	80 e0       	ldi	r24, 0x00	; 0
     dfe:	08 95       	ret
		}
		else if (port == portb)
     e00:	81 30       	cpi	r24, 0x01	; 1
     e02:	59 f4       	brne	.+22     	; 0xe1a <DIO_init+0x38>
		{
			DATA_DIRECTION_PORTB |= direction << pin;
     e04:	87 b3       	in	r24, 0x17	; 23
     e06:	50 e0       	ldi	r21, 0x00	; 0
     e08:	02 c0       	rjmp	.+4      	; 0xe0e <DIO_init+0x2c>
     e0a:	44 0f       	add	r20, r20
     e0c:	55 1f       	adc	r21, r21
     e0e:	6a 95       	dec	r22
     e10:	e2 f7       	brpl	.-8      	; 0xe0a <DIO_init+0x28>
     e12:	48 2b       	or	r20, r24
     e14:	47 bb       	out	0x17, r20	; 23
			return DIO_E_OK;
     e16:	80 e0       	ldi	r24, 0x00	; 0
     e18:	08 95       	ret
		}
		else if (port == portc)
     e1a:	82 30       	cpi	r24, 0x02	; 2
     e1c:	59 f4       	brne	.+22     	; 0xe34 <DIO_init+0x52>
		{
			DATA_DIRECTION_PORTC |= direction << pin;
     e1e:	84 b3       	in	r24, 0x14	; 20
     e20:	50 e0       	ldi	r21, 0x00	; 0
     e22:	02 c0       	rjmp	.+4      	; 0xe28 <DIO_init+0x46>
     e24:	44 0f       	add	r20, r20
     e26:	55 1f       	adc	r21, r21
     e28:	6a 95       	dec	r22
     e2a:	e2 f7       	brpl	.-8      	; 0xe24 <DIO_init+0x42>
     e2c:	48 2b       	or	r20, r24
     e2e:	44 bb       	out	0x14, r20	; 20
			return DIO_E_OK;
     e30:	80 e0       	ldi	r24, 0x00	; 0
     e32:	08 95       	ret
		}
		else if (port == portd)
     e34:	83 30       	cpi	r24, 0x03	; 3
     e36:	69 f4       	brne	.+26     	; 0xe52 <DIO_init+0x70>
		{
			DATA_DIRECTION_PORTD |= direction << pin;
     e38:	81 b3       	in	r24, 0x11	; 17
     e3a:	50 e0       	ldi	r21, 0x00	; 0
     e3c:	02 c0       	rjmp	.+4      	; 0xe42 <DIO_init+0x60>
     e3e:	44 0f       	add	r20, r20
     e40:	55 1f       	adc	r21, r21
     e42:	6a 95       	dec	r22
     e44:	e2 f7       	brpl	.-8      	; 0xe3e <DIO_init+0x5c>
     e46:	48 2b       	or	r20, r24
     e48:	41 bb       	out	0x11, r20	; 17
			return DIO_E_OK;
     e4a:	80 e0       	ldi	r24, 0x00	; 0
     e4c:	08 95       	ret
			return DIO_InvalidPort;
		}
		
	}
	else{
		return DIO_InvalidPin;
     e4e:	81 e0       	ldi	r24, 0x01	; 1
     e50:	08 95       	ret
			DATA_DIRECTION_PORTD |= direction << pin;
			return DIO_E_OK;
		}
		else
		{
			return DIO_InvalidPort;
     e52:	82 e0       	ldi	r24, 0x02	; 2
		
	}
	else{
		return DIO_InvalidPin;
	}
}
     e54:	08 95       	ret

00000e56 <DIO_writePIN>:
u8_en_dioErrors DIO_writePIN (en_dioPortsType port, en_dioPinsType pin, u8_en_dioLevelType state)
{
	if (pin < DIO_MAX_PINS)
     e56:	68 30       	cpi	r22, 0x08	; 8
     e58:	08 f0       	brcs	.+2      	; 0xe5c <DIO_writePIN+0x6>
     e5a:	74 c0       	rjmp	.+232    	; 0xf44 <DIO_writePIN+0xee>
	{
		if (port == porta)
     e5c:	81 11       	cpse	r24, r1
     e5e:	1b c0       	rjmp	.+54     	; 0xe96 <DIO_writePIN+0x40>
		{
			if (state == STD_HIGH)
     e60:	41 30       	cpi	r20, 0x01	; 1
     e62:	61 f4       	brne	.+24     	; 0xe7c <DIO_writePIN+0x26>
			{
				WR_PORT_A |= (1U << pin);
     e64:	2b b3       	in	r18, 0x1b	; 27
     e66:	81 e0       	ldi	r24, 0x01	; 1
     e68:	90 e0       	ldi	r25, 0x00	; 0
     e6a:	02 c0       	rjmp	.+4      	; 0xe70 <DIO_writePIN+0x1a>
     e6c:	88 0f       	add	r24, r24
     e6e:	99 1f       	adc	r25, r25
     e70:	6a 95       	dec	r22
     e72:	e2 f7       	brpl	.-8      	; 0xe6c <DIO_writePIN+0x16>
     e74:	82 2b       	or	r24, r18
     e76:	8b bb       	out	0x1b, r24	; 27
			}
			else{
				WR_PORT_A &= ~(1U << pin);
			}
			return DIO_E_OK;
     e78:	80 e0       	ldi	r24, 0x00	; 0
     e7a:	08 95       	ret
			if (state == STD_HIGH)
			{
				WR_PORT_A |= (1U << pin);
			}
			else{
				WR_PORT_A &= ~(1U << pin);
     e7c:	2b b3       	in	r18, 0x1b	; 27
     e7e:	81 e0       	ldi	r24, 0x01	; 1
     e80:	90 e0       	ldi	r25, 0x00	; 0
     e82:	02 c0       	rjmp	.+4      	; 0xe88 <DIO_writePIN+0x32>
     e84:	88 0f       	add	r24, r24
     e86:	99 1f       	adc	r25, r25
     e88:	6a 95       	dec	r22
     e8a:	e2 f7       	brpl	.-8      	; 0xe84 <DIO_writePIN+0x2e>
     e8c:	80 95       	com	r24
     e8e:	82 23       	and	r24, r18
     e90:	8b bb       	out	0x1b, r24	; 27
			}
			return DIO_E_OK;
     e92:	80 e0       	ldi	r24, 0x00	; 0
     e94:	08 95       	ret
		}
		else if (port == portb)
     e96:	81 30       	cpi	r24, 0x01	; 1
     e98:	d9 f4       	brne	.+54     	; 0xed0 <DIO_writePIN+0x7a>
		{
			if (state == STD_HIGH)
     e9a:	41 30       	cpi	r20, 0x01	; 1
     e9c:	61 f4       	brne	.+24     	; 0xeb6 <DIO_writePIN+0x60>
			{
				WR_PORT_B |= (1U << pin);
     e9e:	28 b3       	in	r18, 0x18	; 24
     ea0:	81 e0       	ldi	r24, 0x01	; 1
     ea2:	90 e0       	ldi	r25, 0x00	; 0
     ea4:	02 c0       	rjmp	.+4      	; 0xeaa <DIO_writePIN+0x54>
     ea6:	88 0f       	add	r24, r24
     ea8:	99 1f       	adc	r25, r25
     eaa:	6a 95       	dec	r22
     eac:	e2 f7       	brpl	.-8      	; 0xea6 <DIO_writePIN+0x50>
     eae:	82 2b       	or	r24, r18
     eb0:	88 bb       	out	0x18, r24	; 24
			}
			else{
				WR_PORT_B &= ~(1U << pin);
			}
			return DIO_E_OK;
     eb2:	80 e0       	ldi	r24, 0x00	; 0
     eb4:	08 95       	ret
			if (state == STD_HIGH)
			{
				WR_PORT_B |= (1U << pin);
			}
			else{
				WR_PORT_B &= ~(1U << pin);
     eb6:	28 b3       	in	r18, 0x18	; 24
     eb8:	81 e0       	ldi	r24, 0x01	; 1
     eba:	90 e0       	ldi	r25, 0x00	; 0
     ebc:	02 c0       	rjmp	.+4      	; 0xec2 <DIO_writePIN+0x6c>
     ebe:	88 0f       	add	r24, r24
     ec0:	99 1f       	adc	r25, r25
     ec2:	6a 95       	dec	r22
     ec4:	e2 f7       	brpl	.-8      	; 0xebe <DIO_writePIN+0x68>
     ec6:	80 95       	com	r24
     ec8:	82 23       	and	r24, r18
     eca:	88 bb       	out	0x18, r24	; 24
			}
			return DIO_E_OK;
     ecc:	80 e0       	ldi	r24, 0x00	; 0
     ece:	08 95       	ret
		}
		else if (port == portc)
     ed0:	82 30       	cpi	r24, 0x02	; 2
     ed2:	d9 f4       	brne	.+54     	; 0xf0a <DIO_writePIN+0xb4>
		{
			if (state == STD_HIGH)
     ed4:	41 30       	cpi	r20, 0x01	; 1
     ed6:	61 f4       	brne	.+24     	; 0xef0 <DIO_writePIN+0x9a>
			{
				WR_PORT_C |= (1U << pin);
     ed8:	25 b3       	in	r18, 0x15	; 21
     eda:	81 e0       	ldi	r24, 0x01	; 1
     edc:	90 e0       	ldi	r25, 0x00	; 0
     ede:	02 c0       	rjmp	.+4      	; 0xee4 <DIO_writePIN+0x8e>
     ee0:	88 0f       	add	r24, r24
     ee2:	99 1f       	adc	r25, r25
     ee4:	6a 95       	dec	r22
     ee6:	e2 f7       	brpl	.-8      	; 0xee0 <DIO_writePIN+0x8a>
     ee8:	82 2b       	or	r24, r18
     eea:	85 bb       	out	0x15, r24	; 21
			}
			else{
				WR_PORT_C &= ~(1U << pin);
			}
			return DIO_E_OK;
     eec:	80 e0       	ldi	r24, 0x00	; 0
     eee:	08 95       	ret
			if (state == STD_HIGH)
			{
				WR_PORT_C |= (1U << pin);
			}
			else{
				WR_PORT_C &= ~(1U << pin);
     ef0:	25 b3       	in	r18, 0x15	; 21
     ef2:	81 e0       	ldi	r24, 0x01	; 1
     ef4:	90 e0       	ldi	r25, 0x00	; 0
     ef6:	02 c0       	rjmp	.+4      	; 0xefc <DIO_writePIN+0xa6>
     ef8:	88 0f       	add	r24, r24
     efa:	99 1f       	adc	r25, r25
     efc:	6a 95       	dec	r22
     efe:	e2 f7       	brpl	.-8      	; 0xef8 <DIO_writePIN+0xa2>
     f00:	80 95       	com	r24
     f02:	82 23       	and	r24, r18
     f04:	85 bb       	out	0x15, r24	; 21
			}
			return DIO_E_OK;
     f06:	80 e0       	ldi	r24, 0x00	; 0
     f08:	08 95       	ret
		}
		else if (port == portd)
     f0a:	83 30       	cpi	r24, 0x03	; 3
     f0c:	e9 f4       	brne	.+58     	; 0xf48 <DIO_writePIN+0xf2>
		{
			if (state == STD_HIGH)
     f0e:	41 30       	cpi	r20, 0x01	; 1
     f10:	61 f4       	brne	.+24     	; 0xf2a <DIO_writePIN+0xd4>
			{
				WR_PORT_D |= (1U << pin);
     f12:	22 b3       	in	r18, 0x12	; 18
     f14:	81 e0       	ldi	r24, 0x01	; 1
     f16:	90 e0       	ldi	r25, 0x00	; 0
     f18:	02 c0       	rjmp	.+4      	; 0xf1e <DIO_writePIN+0xc8>
     f1a:	88 0f       	add	r24, r24
     f1c:	99 1f       	adc	r25, r25
     f1e:	6a 95       	dec	r22
     f20:	e2 f7       	brpl	.-8      	; 0xf1a <DIO_writePIN+0xc4>
     f22:	82 2b       	or	r24, r18
     f24:	82 bb       	out	0x12, r24	; 18
			}
			else{
				WR_PORT_D &= ~(1U << pin);
			}
			return DIO_E_OK;
     f26:	80 e0       	ldi	r24, 0x00	; 0
     f28:	08 95       	ret
			if (state == STD_HIGH)
			{
				WR_PORT_D |= (1U << pin);
			}
			else{
				WR_PORT_D &= ~(1U << pin);
     f2a:	22 b3       	in	r18, 0x12	; 18
     f2c:	81 e0       	ldi	r24, 0x01	; 1
     f2e:	90 e0       	ldi	r25, 0x00	; 0
     f30:	02 c0       	rjmp	.+4      	; 0xf36 <DIO_writePIN+0xe0>
     f32:	88 0f       	add	r24, r24
     f34:	99 1f       	adc	r25, r25
     f36:	6a 95       	dec	r22
     f38:	e2 f7       	brpl	.-8      	; 0xf32 <DIO_writePIN+0xdc>
     f3a:	80 95       	com	r24
     f3c:	82 23       	and	r24, r18
     f3e:	82 bb       	out	0x12, r24	; 18
			}
			return DIO_E_OK;
     f40:	80 e0       	ldi	r24, 0x00	; 0
     f42:	08 95       	ret
			return DIO_InvalidPort;
		}
		
	}
	else{
		return DIO_InvalidPin;
     f44:	81 e0       	ldi	r24, 0x01	; 1
     f46:	08 95       	ret
			}
			return DIO_E_OK;
		}
		else
		{
			return DIO_InvalidPort;
     f48:	82 e0       	ldi	r24, 0x02	; 2
		
	}
	else{
		return DIO_InvalidPin;
	}
}
     f4a:	08 95       	ret

00000f4c <DIO_readPIN>:
u8_en_dioErrors DIO_readPIN (en_dioPortsType port, en_dioPinsType pin, uint8_t* value)
{
	if (pin < DIO_MAX_PINS)
     f4c:	68 30       	cpi	r22, 0x08	; 8
     f4e:	08 f0       	brcs	.+2      	; 0xf52 <DIO_readPIN+0x6>
     f50:	64 c0       	rjmp	.+200    	; 0x101a <DIO_readPIN+0xce>
	{
		if (port == porta)
     f52:	81 11       	cpse	r24, r1
     f54:	17 c0       	rjmp	.+46     	; 0xf84 <DIO_readPIN+0x38>
		{
			*value = ((RE_PORT_A & (1U<<pin))>>pin);
     f56:	79 b3       	in	r23, 0x19	; 25
     f58:	81 e0       	ldi	r24, 0x01	; 1
     f5a:	90 e0       	ldi	r25, 0x00	; 0
     f5c:	9c 01       	movw	r18, r24
     f5e:	06 2e       	mov	r0, r22
     f60:	02 c0       	rjmp	.+4      	; 0xf66 <DIO_readPIN+0x1a>
     f62:	22 0f       	add	r18, r18
     f64:	33 1f       	adc	r19, r19
     f66:	0a 94       	dec	r0
     f68:	e2 f7       	brpl	.-8      	; 0xf62 <DIO_readPIN+0x16>
     f6a:	87 2f       	mov	r24, r23
     f6c:	90 e0       	ldi	r25, 0x00	; 0
     f6e:	82 23       	and	r24, r18
     f70:	93 23       	and	r25, r19
     f72:	02 c0       	rjmp	.+4      	; 0xf78 <DIO_readPIN+0x2c>
     f74:	96 95       	lsr	r25
     f76:	87 95       	ror	r24
     f78:	6a 95       	dec	r22
     f7a:	e2 f7       	brpl	.-8      	; 0xf74 <DIO_readPIN+0x28>
     f7c:	fa 01       	movw	r30, r20
     f7e:	80 83       	st	Z, r24
			return DIO_E_OK;
     f80:	80 e0       	ldi	r24, 0x00	; 0
     f82:	08 95       	ret
		}
		else if (port == portb)
     f84:	81 30       	cpi	r24, 0x01	; 1
     f86:	b9 f4       	brne	.+46     	; 0xfb6 <DIO_readPIN+0x6a>
		{
			*value = ((RE_PORT_B & (1U<<pin))>>pin);
     f88:	76 b3       	in	r23, 0x16	; 22
     f8a:	81 e0       	ldi	r24, 0x01	; 1
     f8c:	90 e0       	ldi	r25, 0x00	; 0
     f8e:	9c 01       	movw	r18, r24
     f90:	06 2e       	mov	r0, r22
     f92:	02 c0       	rjmp	.+4      	; 0xf98 <DIO_readPIN+0x4c>
     f94:	22 0f       	add	r18, r18
     f96:	33 1f       	adc	r19, r19
     f98:	0a 94       	dec	r0
     f9a:	e2 f7       	brpl	.-8      	; 0xf94 <DIO_readPIN+0x48>
     f9c:	87 2f       	mov	r24, r23
     f9e:	90 e0       	ldi	r25, 0x00	; 0
     fa0:	82 23       	and	r24, r18
     fa2:	93 23       	and	r25, r19
     fa4:	02 c0       	rjmp	.+4      	; 0xfaa <DIO_readPIN+0x5e>
     fa6:	96 95       	lsr	r25
     fa8:	87 95       	ror	r24
     faa:	6a 95       	dec	r22
     fac:	e2 f7       	brpl	.-8      	; 0xfa6 <DIO_readPIN+0x5a>
     fae:	fa 01       	movw	r30, r20
     fb0:	80 83       	st	Z, r24
			return DIO_E_OK;
     fb2:	80 e0       	ldi	r24, 0x00	; 0
     fb4:	08 95       	ret
		}
		else if (port == portc)
     fb6:	82 30       	cpi	r24, 0x02	; 2
     fb8:	b9 f4       	brne	.+46     	; 0xfe8 <DIO_readPIN+0x9c>
		{
			*value = ((RE_PORT_C & (1U<<pin))>>pin);
     fba:	73 b3       	in	r23, 0x13	; 19
     fbc:	81 e0       	ldi	r24, 0x01	; 1
     fbe:	90 e0       	ldi	r25, 0x00	; 0
     fc0:	9c 01       	movw	r18, r24
     fc2:	06 2e       	mov	r0, r22
     fc4:	02 c0       	rjmp	.+4      	; 0xfca <DIO_readPIN+0x7e>
     fc6:	22 0f       	add	r18, r18
     fc8:	33 1f       	adc	r19, r19
     fca:	0a 94       	dec	r0
     fcc:	e2 f7       	brpl	.-8      	; 0xfc6 <DIO_readPIN+0x7a>
     fce:	87 2f       	mov	r24, r23
     fd0:	90 e0       	ldi	r25, 0x00	; 0
     fd2:	82 23       	and	r24, r18
     fd4:	93 23       	and	r25, r19
     fd6:	02 c0       	rjmp	.+4      	; 0xfdc <DIO_readPIN+0x90>
     fd8:	96 95       	lsr	r25
     fda:	87 95       	ror	r24
     fdc:	6a 95       	dec	r22
     fde:	e2 f7       	brpl	.-8      	; 0xfd8 <DIO_readPIN+0x8c>
     fe0:	fa 01       	movw	r30, r20
     fe2:	80 83       	st	Z, r24
			return DIO_E_OK;
     fe4:	80 e0       	ldi	r24, 0x00	; 0
     fe6:	08 95       	ret
		}
		else if (port == portd)
     fe8:	83 30       	cpi	r24, 0x03	; 3
     fea:	c9 f4       	brne	.+50     	; 0x101e <DIO_readPIN+0xd2>
		{
			*value = ((RE_PORT_D & (1U<<pin))>>pin);
     fec:	70 b3       	in	r23, 0x10	; 16
     fee:	81 e0       	ldi	r24, 0x01	; 1
     ff0:	90 e0       	ldi	r25, 0x00	; 0
     ff2:	9c 01       	movw	r18, r24
     ff4:	06 2e       	mov	r0, r22
     ff6:	02 c0       	rjmp	.+4      	; 0xffc <DIO_readPIN+0xb0>
     ff8:	22 0f       	add	r18, r18
     ffa:	33 1f       	adc	r19, r19
     ffc:	0a 94       	dec	r0
     ffe:	e2 f7       	brpl	.-8      	; 0xff8 <DIO_readPIN+0xac>
    1000:	87 2f       	mov	r24, r23
    1002:	90 e0       	ldi	r25, 0x00	; 0
    1004:	82 23       	and	r24, r18
    1006:	93 23       	and	r25, r19
    1008:	02 c0       	rjmp	.+4      	; 0x100e <DIO_readPIN+0xc2>
    100a:	96 95       	lsr	r25
    100c:	87 95       	ror	r24
    100e:	6a 95       	dec	r22
    1010:	e2 f7       	brpl	.-8      	; 0x100a <DIO_readPIN+0xbe>
    1012:	fa 01       	movw	r30, r20
    1014:	80 83       	st	Z, r24
			return DIO_E_OK;
    1016:	80 e0       	ldi	r24, 0x00	; 0
    1018:	08 95       	ret
			return DIO_InvalidPort;
		}
		
	}
	else{
		return DIO_InvalidPin;
    101a:	81 e0       	ldi	r24, 0x01	; 1
    101c:	08 95       	ret
			*value = ((RE_PORT_D & (1U<<pin))>>pin);
			return DIO_E_OK;
		}
		else
		{
			return DIO_InvalidPort;
    101e:	82 e0       	ldi	r24, 0x02	; 2
		
	}
	else{
		return DIO_InvalidPin;
	}
    1020:	08 95       	ret

00001022 <__vector_11>:
    1022:	1f 92       	push	r1
    1024:	0f 92       	push	r0
    1026:	0f b6       	in	r0, 0x3f	; 63
    1028:	0f 92       	push	r0
    102a:	11 24       	eor	r1, r1
    102c:	2f 93       	push	r18
    102e:	3f 93       	push	r19
    1030:	4f 93       	push	r20
    1032:	5f 93       	push	r21
    1034:	6f 93       	push	r22
    1036:	7f 93       	push	r23
    1038:	8f 93       	push	r24
    103a:	9f 93       	push	r25
    103c:	af 93       	push	r26
    103e:	bf 93       	push	r27
    1040:	ef 93       	push	r30
    1042:	ff 93       	push	r31
    1044:	80 91 13 01 	lds	r24, 0x0113	; 0x800113 <sg_Timer0_callBackPtr>
    1048:	90 91 14 01 	lds	r25, 0x0114	; 0x800114 <sg_Timer0_callBackPtr+0x1>
    104c:	89 2b       	or	r24, r25
    104e:	41 f0       	breq	.+16     	; 0x1060 <__vector_11+0x3e>
    1050:	88 b7       	in	r24, 0x38	; 56
    1052:	8e 7f       	andi	r24, 0xFE	; 254
    1054:	88 bf       	out	0x38, r24	; 56
    1056:	e0 91 13 01 	lds	r30, 0x0113	; 0x800113 <sg_Timer0_callBackPtr>
    105a:	f0 91 14 01 	lds	r31, 0x0114	; 0x800114 <sg_Timer0_callBackPtr+0x1>
    105e:	09 95       	icall
    1060:	ff 91       	pop	r31
    1062:	ef 91       	pop	r30
    1064:	bf 91       	pop	r27
    1066:	af 91       	pop	r26
    1068:	9f 91       	pop	r25
    106a:	8f 91       	pop	r24
    106c:	7f 91       	pop	r23
    106e:	6f 91       	pop	r22
    1070:	5f 91       	pop	r21
    1072:	4f 91       	pop	r20
    1074:	3f 91       	pop	r19
    1076:	2f 91       	pop	r18
    1078:	0f 90       	pop	r0
    107a:	0f be       	out	0x3f, r0	; 63
    107c:	0f 90       	pop	r0
    107e:	1f 90       	pop	r1
    1080:	18 95       	reti

00001082 <__vector_9>:
    1082:	1f 92       	push	r1
    1084:	0f 92       	push	r0
    1086:	0f b6       	in	r0, 0x3f	; 63
    1088:	0f 92       	push	r0
    108a:	11 24       	eor	r1, r1
    108c:	2f 93       	push	r18
    108e:	3f 93       	push	r19
    1090:	4f 93       	push	r20
    1092:	5f 93       	push	r21
    1094:	6f 93       	push	r22
    1096:	7f 93       	push	r23
    1098:	8f 93       	push	r24
    109a:	9f 93       	push	r25
    109c:	af 93       	push	r26
    109e:	bf 93       	push	r27
    10a0:	ef 93       	push	r30
    10a2:	ff 93       	push	r31
    10a4:	80 91 11 01 	lds	r24, 0x0111	; 0x800111 <sg_Timer1_callBackPtr>
    10a8:	90 91 12 01 	lds	r25, 0x0112	; 0x800112 <sg_Timer1_callBackPtr+0x1>
    10ac:	89 2b       	or	r24, r25
    10ae:	41 f0       	breq	.+16     	; 0x10c0 <__vector_9+0x3e>
    10b0:	88 b7       	in	r24, 0x38	; 56
    10b2:	8b 7f       	andi	r24, 0xFB	; 251
    10b4:	88 bf       	out	0x38, r24	; 56
    10b6:	e0 91 11 01 	lds	r30, 0x0111	; 0x800111 <sg_Timer1_callBackPtr>
    10ba:	f0 91 12 01 	lds	r31, 0x0112	; 0x800112 <sg_Timer1_callBackPtr+0x1>
    10be:	09 95       	icall
    10c0:	ff 91       	pop	r31
    10c2:	ef 91       	pop	r30
    10c4:	bf 91       	pop	r27
    10c6:	af 91       	pop	r26
    10c8:	9f 91       	pop	r25
    10ca:	8f 91       	pop	r24
    10cc:	7f 91       	pop	r23
    10ce:	6f 91       	pop	r22
    10d0:	5f 91       	pop	r21
    10d2:	4f 91       	pop	r20
    10d4:	3f 91       	pop	r19
    10d6:	2f 91       	pop	r18
    10d8:	0f 90       	pop	r0
    10da:	0f be       	out	0x3f, r0	; 63
    10dc:	0f 90       	pop	r0
    10de:	1f 90       	pop	r1
    10e0:	18 95       	reti

000010e2 <__vector_5>:
    10e2:	1f 92       	push	r1
    10e4:	0f 92       	push	r0
    10e6:	0f b6       	in	r0, 0x3f	; 63
    10e8:	0f 92       	push	r0
    10ea:	11 24       	eor	r1, r1
    10ec:	2f 93       	push	r18
    10ee:	3f 93       	push	r19
    10f0:	4f 93       	push	r20
    10f2:	5f 93       	push	r21
    10f4:	6f 93       	push	r22
    10f6:	7f 93       	push	r23
    10f8:	8f 93       	push	r24
    10fa:	9f 93       	push	r25
    10fc:	af 93       	push	r26
    10fe:	bf 93       	push	r27
    1100:	ef 93       	push	r30
    1102:	ff 93       	push	r31
    1104:	80 91 0f 01 	lds	r24, 0x010F	; 0x80010f <sg_Timer2_callBackPtr>
    1108:	90 91 10 01 	lds	r25, 0x0110	; 0x800110 <sg_Timer2_callBackPtr+0x1>
    110c:	89 2b       	or	r24, r25
    110e:	41 f0       	breq	.+16     	; 0x1120 <__vector_5+0x3e>
    1110:	88 b7       	in	r24, 0x38	; 56
    1112:	8f 7b       	andi	r24, 0xBF	; 191
    1114:	88 bf       	out	0x38, r24	; 56
    1116:	e0 91 0f 01 	lds	r30, 0x010F	; 0x80010f <sg_Timer2_callBackPtr>
    111a:	f0 91 10 01 	lds	r31, 0x0110	; 0x800110 <sg_Timer2_callBackPtr+0x1>
    111e:	09 95       	icall
    1120:	ff 91       	pop	r31
    1122:	ef 91       	pop	r30
    1124:	bf 91       	pop	r27
    1126:	af 91       	pop	r26
    1128:	9f 91       	pop	r25
    112a:	8f 91       	pop	r24
    112c:	7f 91       	pop	r23
    112e:	6f 91       	pop	r22
    1130:	5f 91       	pop	r21
    1132:	4f 91       	pop	r20
    1134:	3f 91       	pop	r19
    1136:	2f 91       	pop	r18
    1138:	0f 90       	pop	r0
    113a:	0f be       	out	0x3f, r0	; 63
    113c:	0f 90       	pop	r0
    113e:	1f 90       	pop	r1
    1140:	18 95       	reti

00001142 <TIMER_init>:
    1142:	00 97       	sbiw	r24, 0x00	; 0
    1144:	09 f4       	brne	.+2      	; 0x1148 <TIMER_init+0x6>
    1146:	7c c0       	rjmp	.+248    	; 0x1240 <TIMER_init+0xfe>
    1148:	fc 01       	movw	r30, r24
    114a:	20 81       	ld	r18, Z
    114c:	23 30       	cpi	r18, 0x03	; 3
    114e:	08 f0       	brcs	.+2      	; 0x1152 <TIMER_init+0x10>
    1150:	79 c0       	rjmp	.+242    	; 0x1244 <TIMER_init+0x102>
    1152:	31 81       	ldd	r19, Z+1	; 0x01
    1154:	3a 30       	cpi	r19, 0x0A	; 10
    1156:	08 f0       	brcs	.+2      	; 0x115a <TIMER_init+0x18>
    1158:	77 c0       	rjmp	.+238    	; 0x1248 <TIMER_init+0x106>
    115a:	21 30       	cpi	r18, 0x01	; 1
    115c:	19 f1       	breq	.+70     	; 0x11a4 <TIMER_init+0x62>
    115e:	20 f0       	brcs	.+8      	; 0x1168 <TIMER_init+0x26>
    1160:	22 30       	cpi	r18, 0x02	; 2
    1162:	09 f4       	brne	.+2      	; 0x1166 <TIMER_init+0x24>
    1164:	50 c0       	rjmp	.+160    	; 0x1206 <TIMER_init+0xc4>
    1166:	72 c0       	rjmp	.+228    	; 0x124c <TIMER_init+0x10a>
    1168:	12 be       	out	0x32, r1	; 50
    116a:	13 be       	out	0x33, r1	; 51
    116c:	1c be       	out	0x3c, r1	; 60
    116e:	fc 01       	movw	r30, r24
    1170:	22 81       	ldd	r18, Z+2	; 0x02
    1172:	22 bf       	out	0x32, r18	; 50
    1174:	23 b7       	in	r18, 0x33	; 51
    1176:	20 68       	ori	r18, 0x80	; 128
    1178:	23 bf       	out	0x33, r18	; 51
    117a:	23 b7       	in	r18, 0x33	; 51
    117c:	2f 7b       	andi	r18, 0xBF	; 191
    117e:	23 bf       	out	0x33, r18	; 51
    1180:	23 b7       	in	r18, 0x33	; 51
    1182:	27 7f       	andi	r18, 0xF7	; 247
    1184:	23 bf       	out	0x33, r18	; 51
    1186:	23 b7       	in	r18, 0x33	; 51
    1188:	2f 7e       	andi	r18, 0xEF	; 239
    118a:	23 bf       	out	0x33, r18	; 51
    118c:	23 b7       	in	r18, 0x33	; 51
    118e:	2f 7d       	andi	r18, 0xDF	; 223
    1190:	23 bf       	out	0x33, r18	; 51
    1192:	84 81       	ldd	r24, Z+4	; 0x04
    1194:	81 30       	cpi	r24, 0x01	; 1
    1196:	09 f0       	breq	.+2      	; 0x119a <TIMER_init+0x58>
    1198:	5b c0       	rjmp	.+182    	; 0x1250 <TIMER_init+0x10e>
    119a:	89 b7       	in	r24, 0x39	; 57
    119c:	81 60       	ori	r24, 0x01	; 1
    119e:	89 bf       	out	0x39, r24	; 57
    11a0:	80 e0       	ldi	r24, 0x00	; 0
    11a2:	08 95       	ret
    11a4:	1c bc       	out	0x2c, r1	; 44
    11a6:	1d bc       	out	0x2d, r1	; 45
    11a8:	1f bc       	out	0x2f, r1	; 47
    11aa:	1e bc       	out	0x2e, r1	; 46
    11ac:	1b bc       	out	0x2b, r1	; 43
    11ae:	1a bc       	out	0x2a, r1	; 42
    11b0:	fc 01       	movw	r30, r24
    11b2:	22 81       	ldd	r18, Z+2	; 0x02
    11b4:	33 81       	ldd	r19, Z+3	; 0x03
    11b6:	3d bd       	out	0x2d, r19	; 45
    11b8:	2c bd       	out	0x2c, r18	; 44
    11ba:	2f b5       	in	r18, 0x2f	; 47
    11bc:	28 60       	ori	r18, 0x08	; 8
    11be:	2f bd       	out	0x2f, r18	; 47
    11c0:	2f b5       	in	r18, 0x2f	; 47
    11c2:	24 60       	ori	r18, 0x04	; 4
    11c4:	2f bd       	out	0x2f, r18	; 47
    11c6:	2f b5       	in	r18, 0x2f	; 47
    11c8:	2e 7f       	andi	r18, 0xFE	; 254
    11ca:	2f bd       	out	0x2f, r18	; 47
    11cc:	2f b5       	in	r18, 0x2f	; 47
    11ce:	2d 7f       	andi	r18, 0xFD	; 253
    11d0:	2f bd       	out	0x2f, r18	; 47
    11d2:	2e b5       	in	r18, 0x2e	; 46
    11d4:	2f 7e       	andi	r18, 0xEF	; 239
    11d6:	2e bd       	out	0x2e, r18	; 46
    11d8:	2e b5       	in	r18, 0x2e	; 46
    11da:	27 7f       	andi	r18, 0xF7	; 247
    11dc:	2e bd       	out	0x2e, r18	; 46
    11de:	2f b5       	in	r18, 0x2f	; 47
    11e0:	2f 7b       	andi	r18, 0xBF	; 191
    11e2:	2f bd       	out	0x2f, r18	; 47
    11e4:	2f b5       	in	r18, 0x2f	; 47
    11e6:	2f 77       	andi	r18, 0x7F	; 127
    11e8:	2f bd       	out	0x2f, r18	; 47
    11ea:	2f b5       	in	r18, 0x2f	; 47
    11ec:	2f 7e       	andi	r18, 0xEF	; 239
    11ee:	2f bd       	out	0x2f, r18	; 47
    11f0:	2f b5       	in	r18, 0x2f	; 47
    11f2:	2f 7d       	andi	r18, 0xDF	; 223
    11f4:	2f bd       	out	0x2f, r18	; 47
    11f6:	84 81       	ldd	r24, Z+4	; 0x04
    11f8:	81 30       	cpi	r24, 0x01	; 1
    11fa:	61 f5       	brne	.+88     	; 0x1254 <TIMER_init+0x112>
    11fc:	89 b7       	in	r24, 0x39	; 57
    11fe:	84 60       	ori	r24, 0x04	; 4
    1200:	89 bf       	out	0x39, r24	; 57
    1202:	80 e0       	ldi	r24, 0x00	; 0
    1204:	08 95       	ret
    1206:	14 bc       	out	0x24, r1	; 36
    1208:	15 bc       	out	0x25, r1	; 37
    120a:	13 bc       	out	0x23, r1	; 35
    120c:	fc 01       	movw	r30, r24
    120e:	22 81       	ldd	r18, Z+2	; 0x02
    1210:	24 bd       	out	0x24, r18	; 36
    1212:	25 b5       	in	r18, 0x25	; 37
    1214:	20 68       	ori	r18, 0x80	; 128
    1216:	25 bd       	out	0x25, r18	; 37
    1218:	25 b5       	in	r18, 0x25	; 37
    121a:	2f 7b       	andi	r18, 0xBF	; 191
    121c:	25 bd       	out	0x25, r18	; 37
    121e:	25 b5       	in	r18, 0x25	; 37
    1220:	27 7f       	andi	r18, 0xF7	; 247
    1222:	25 bd       	out	0x25, r18	; 37
    1224:	25 b5       	in	r18, 0x25	; 37
    1226:	2f 7e       	andi	r18, 0xEF	; 239
    1228:	25 bd       	out	0x25, r18	; 37
    122a:	25 b5       	in	r18, 0x25	; 37
    122c:	2f 7d       	andi	r18, 0xDF	; 223
    122e:	25 bd       	out	0x25, r18	; 37
    1230:	84 81       	ldd	r24, Z+4	; 0x04
    1232:	81 30       	cpi	r24, 0x01	; 1
    1234:	89 f4       	brne	.+34     	; 0x1258 <TIMER_init+0x116>
    1236:	89 b7       	in	r24, 0x39	; 57
    1238:	80 64       	ori	r24, 0x40	; 64
    123a:	89 bf       	out	0x39, r24	; 57
    123c:	80 e0       	ldi	r24, 0x00	; 0
    123e:	08 95       	ret
    1240:	83 e0       	ldi	r24, 0x03	; 3
    1242:	08 95       	ret
    1244:	83 e0       	ldi	r24, 0x03	; 3
    1246:	08 95       	ret
    1248:	83 e0       	ldi	r24, 0x03	; 3
    124a:	08 95       	ret
    124c:	83 e0       	ldi	r24, 0x03	; 3
    124e:	08 95       	ret
    1250:	80 e0       	ldi	r24, 0x00	; 0
    1252:	08 95       	ret
    1254:	80 e0       	ldi	r24, 0x00	; 0
    1256:	08 95       	ret
    1258:	80 e0       	ldi	r24, 0x00	; 0
    125a:	08 95       	ret

0000125c <TIMER_start>:
    125c:	00 97       	sbiw	r24, 0x00	; 0
    125e:	09 f4       	brne	.+2      	; 0x1262 <TIMER_start+0x6>
    1260:	3b c1       	rjmp	.+630    	; 0x14d8 <TIMER_start+0x27c>
    1262:	dc 01       	movw	r26, r24
    1264:	2c 91       	ld	r18, X
    1266:	23 30       	cpi	r18, 0x03	; 3
    1268:	08 f0       	brcs	.+2      	; 0x126c <TIMER_start+0x10>
    126a:	38 c1       	rjmp	.+624    	; 0x14dc <TIMER_start+0x280>
    126c:	11 96       	adiw	r26, 0x01	; 1
    126e:	ec 91       	ld	r30, X
    1270:	ea 30       	cpi	r30, 0x0A	; 10
    1272:	08 f0       	brcs	.+2      	; 0x1276 <TIMER_start+0x1a>
    1274:	35 c1       	rjmp	.+618    	; 0x14e0 <TIMER_start+0x284>
    1276:	21 30       	cpi	r18, 0x01	; 1
    1278:	09 f4       	brne	.+2      	; 0x127c <TIMER_start+0x20>
    127a:	68 c0       	rjmp	.+208    	; 0x134c <TIMER_start+0xf0>
    127c:	20 f0       	brcs	.+8      	; 0x1286 <TIMER_start+0x2a>
    127e:	22 30       	cpi	r18, 0x02	; 2
    1280:	09 f4       	brne	.+2      	; 0x1284 <TIMER_start+0x28>
    1282:	c7 c0       	rjmp	.+398    	; 0x1412 <TIMER_start+0x1b6>
    1284:	2f c1       	rjmp	.+606    	; 0x14e4 <TIMER_start+0x288>
    1286:	8e 2f       	mov	r24, r30
    1288:	90 e0       	ldi	r25, 0x00	; 0
    128a:	8a 30       	cpi	r24, 0x0A	; 10
    128c:	91 05       	cpc	r25, r1
    128e:	08 f0       	brcs	.+2      	; 0x1292 <TIMER_start+0x36>
    1290:	2b c1       	rjmp	.+598    	; 0x14e8 <TIMER_start+0x28c>
    1292:	fc 01       	movw	r30, r24
    1294:	e6 5d       	subi	r30, 0xD6	; 214
    1296:	ff 4f       	sbci	r31, 0xFF	; 255
    1298:	0c 94 8e 0c 	jmp	0x191c	; 0x191c <__tablejump2__>
    129c:	83 b7       	in	r24, 0x33	; 51
    129e:	8e 7f       	andi	r24, 0xFE	; 254
    12a0:	83 bf       	out	0x33, r24	; 51
    12a2:	83 b7       	in	r24, 0x33	; 51
    12a4:	8d 7f       	andi	r24, 0xFD	; 253
    12a6:	83 bf       	out	0x33, r24	; 51
    12a8:	83 b7       	in	r24, 0x33	; 51
    12aa:	8b 7f       	andi	r24, 0xFB	; 251
    12ac:	83 bf       	out	0x33, r24	; 51
    12ae:	80 e0       	ldi	r24, 0x00	; 0
    12b0:	08 95       	ret
    12b2:	83 b7       	in	r24, 0x33	; 51
    12b4:	81 60       	ori	r24, 0x01	; 1
    12b6:	83 bf       	out	0x33, r24	; 51
    12b8:	83 b7       	in	r24, 0x33	; 51
    12ba:	8d 7f       	andi	r24, 0xFD	; 253
    12bc:	83 bf       	out	0x33, r24	; 51
    12be:	83 b7       	in	r24, 0x33	; 51
    12c0:	8b 7f       	andi	r24, 0xFB	; 251
    12c2:	83 bf       	out	0x33, r24	; 51
    12c4:	80 e0       	ldi	r24, 0x00	; 0
    12c6:	08 95       	ret
    12c8:	83 b7       	in	r24, 0x33	; 51
    12ca:	8e 7f       	andi	r24, 0xFE	; 254
    12cc:	83 bf       	out	0x33, r24	; 51
    12ce:	83 b7       	in	r24, 0x33	; 51
    12d0:	82 60       	ori	r24, 0x02	; 2
    12d2:	83 bf       	out	0x33, r24	; 51
    12d4:	83 b7       	in	r24, 0x33	; 51
    12d6:	8b 7f       	andi	r24, 0xFB	; 251
    12d8:	83 bf       	out	0x33, r24	; 51
    12da:	80 e0       	ldi	r24, 0x00	; 0
    12dc:	08 95       	ret
    12de:	83 b7       	in	r24, 0x33	; 51
    12e0:	81 60       	ori	r24, 0x01	; 1
    12e2:	83 bf       	out	0x33, r24	; 51
    12e4:	83 b7       	in	r24, 0x33	; 51
    12e6:	82 60       	ori	r24, 0x02	; 2
    12e8:	83 bf       	out	0x33, r24	; 51
    12ea:	83 b7       	in	r24, 0x33	; 51
    12ec:	8b 7f       	andi	r24, 0xFB	; 251
    12ee:	83 bf       	out	0x33, r24	; 51
    12f0:	80 e0       	ldi	r24, 0x00	; 0
    12f2:	08 95       	ret
    12f4:	83 b7       	in	r24, 0x33	; 51
    12f6:	8e 7f       	andi	r24, 0xFE	; 254
    12f8:	83 bf       	out	0x33, r24	; 51
    12fa:	83 b7       	in	r24, 0x33	; 51
    12fc:	8d 7f       	andi	r24, 0xFD	; 253
    12fe:	83 bf       	out	0x33, r24	; 51
    1300:	83 b7       	in	r24, 0x33	; 51
    1302:	84 60       	ori	r24, 0x04	; 4
    1304:	83 bf       	out	0x33, r24	; 51
    1306:	80 e0       	ldi	r24, 0x00	; 0
    1308:	08 95       	ret
    130a:	83 b7       	in	r24, 0x33	; 51
    130c:	81 60       	ori	r24, 0x01	; 1
    130e:	83 bf       	out	0x33, r24	; 51
    1310:	83 b7       	in	r24, 0x33	; 51
    1312:	8d 7f       	andi	r24, 0xFD	; 253
    1314:	83 bf       	out	0x33, r24	; 51
    1316:	83 b7       	in	r24, 0x33	; 51
    1318:	84 60       	ori	r24, 0x04	; 4
    131a:	83 bf       	out	0x33, r24	; 51
    131c:	80 e0       	ldi	r24, 0x00	; 0
    131e:	08 95       	ret
    1320:	83 b7       	in	r24, 0x33	; 51
    1322:	8e 7f       	andi	r24, 0xFE	; 254
    1324:	83 bf       	out	0x33, r24	; 51
    1326:	83 b7       	in	r24, 0x33	; 51
    1328:	82 60       	ori	r24, 0x02	; 2
    132a:	83 bf       	out	0x33, r24	; 51
    132c:	83 b7       	in	r24, 0x33	; 51
    132e:	84 60       	ori	r24, 0x04	; 4
    1330:	83 bf       	out	0x33, r24	; 51
    1332:	80 e0       	ldi	r24, 0x00	; 0
    1334:	08 95       	ret
    1336:	83 b7       	in	r24, 0x33	; 51
    1338:	81 60       	ori	r24, 0x01	; 1
    133a:	83 bf       	out	0x33, r24	; 51
    133c:	83 b7       	in	r24, 0x33	; 51
    133e:	82 60       	ori	r24, 0x02	; 2
    1340:	83 bf       	out	0x33, r24	; 51
    1342:	83 b7       	in	r24, 0x33	; 51
    1344:	84 60       	ori	r24, 0x04	; 4
    1346:	83 bf       	out	0x33, r24	; 51
    1348:	80 e0       	ldi	r24, 0x00	; 0
    134a:	08 95       	ret
    134c:	8e 2f       	mov	r24, r30
    134e:	90 e0       	ldi	r25, 0x00	; 0
    1350:	8a 30       	cpi	r24, 0x0A	; 10
    1352:	91 05       	cpc	r25, r1
    1354:	08 f0       	brcs	.+2      	; 0x1358 <TIMER_start+0xfc>
    1356:	ca c0       	rjmp	.+404    	; 0x14ec <TIMER_start+0x290>
    1358:	fc 01       	movw	r30, r24
    135a:	ec 5c       	subi	r30, 0xCC	; 204
    135c:	ff 4f       	sbci	r31, 0xFF	; 255
    135e:	0c 94 8e 0c 	jmp	0x191c	; 0x191c <__tablejump2__>
    1362:	8e b5       	in	r24, 0x2e	; 46
    1364:	8e 7f       	andi	r24, 0xFE	; 254
    1366:	8e bd       	out	0x2e, r24	; 46
    1368:	8e b5       	in	r24, 0x2e	; 46
    136a:	8d 7f       	andi	r24, 0xFD	; 253
    136c:	8e bd       	out	0x2e, r24	; 46
    136e:	8e b5       	in	r24, 0x2e	; 46
    1370:	8b 7f       	andi	r24, 0xFB	; 251
    1372:	8e bd       	out	0x2e, r24	; 46
    1374:	80 e0       	ldi	r24, 0x00	; 0
    1376:	08 95       	ret
    1378:	8e b5       	in	r24, 0x2e	; 46
    137a:	81 60       	ori	r24, 0x01	; 1
    137c:	8e bd       	out	0x2e, r24	; 46
    137e:	8e b5       	in	r24, 0x2e	; 46
    1380:	8d 7f       	andi	r24, 0xFD	; 253
    1382:	8e bd       	out	0x2e, r24	; 46
    1384:	8e b5       	in	r24, 0x2e	; 46
    1386:	8b 7f       	andi	r24, 0xFB	; 251
    1388:	8e bd       	out	0x2e, r24	; 46
    138a:	80 e0       	ldi	r24, 0x00	; 0
    138c:	08 95       	ret
    138e:	8e b5       	in	r24, 0x2e	; 46
    1390:	8e 7f       	andi	r24, 0xFE	; 254
    1392:	8e bd       	out	0x2e, r24	; 46
    1394:	8e b5       	in	r24, 0x2e	; 46
    1396:	82 60       	ori	r24, 0x02	; 2
    1398:	8e bd       	out	0x2e, r24	; 46
    139a:	8e b5       	in	r24, 0x2e	; 46
    139c:	8b 7f       	andi	r24, 0xFB	; 251
    139e:	8e bd       	out	0x2e, r24	; 46
    13a0:	80 e0       	ldi	r24, 0x00	; 0
    13a2:	08 95       	ret
    13a4:	8e b5       	in	r24, 0x2e	; 46
    13a6:	81 60       	ori	r24, 0x01	; 1
    13a8:	8e bd       	out	0x2e, r24	; 46
    13aa:	8e b5       	in	r24, 0x2e	; 46
    13ac:	82 60       	ori	r24, 0x02	; 2
    13ae:	8e bd       	out	0x2e, r24	; 46
    13b0:	8e b5       	in	r24, 0x2e	; 46
    13b2:	8b 7f       	andi	r24, 0xFB	; 251
    13b4:	8e bd       	out	0x2e, r24	; 46
    13b6:	80 e0       	ldi	r24, 0x00	; 0
    13b8:	08 95       	ret
    13ba:	8e b5       	in	r24, 0x2e	; 46
    13bc:	8e 7f       	andi	r24, 0xFE	; 254
    13be:	8e bd       	out	0x2e, r24	; 46
    13c0:	8e b5       	in	r24, 0x2e	; 46
    13c2:	8d 7f       	andi	r24, 0xFD	; 253
    13c4:	8e bd       	out	0x2e, r24	; 46
    13c6:	8e b5       	in	r24, 0x2e	; 46
    13c8:	84 60       	ori	r24, 0x04	; 4
    13ca:	8e bd       	out	0x2e, r24	; 46
    13cc:	80 e0       	ldi	r24, 0x00	; 0
    13ce:	08 95       	ret
    13d0:	8e b5       	in	r24, 0x2e	; 46
    13d2:	81 60       	ori	r24, 0x01	; 1
    13d4:	8e bd       	out	0x2e, r24	; 46
    13d6:	8e b5       	in	r24, 0x2e	; 46
    13d8:	8d 7f       	andi	r24, 0xFD	; 253
    13da:	8e bd       	out	0x2e, r24	; 46
    13dc:	8e b5       	in	r24, 0x2e	; 46
    13de:	84 60       	ori	r24, 0x04	; 4
    13e0:	8e bd       	out	0x2e, r24	; 46
    13e2:	80 e0       	ldi	r24, 0x00	; 0
    13e4:	08 95       	ret
    13e6:	8e b5       	in	r24, 0x2e	; 46
    13e8:	8e 7f       	andi	r24, 0xFE	; 254
    13ea:	8e bd       	out	0x2e, r24	; 46
    13ec:	8e b5       	in	r24, 0x2e	; 46
    13ee:	82 60       	ori	r24, 0x02	; 2
    13f0:	8e bd       	out	0x2e, r24	; 46
    13f2:	8e b5       	in	r24, 0x2e	; 46
    13f4:	84 60       	ori	r24, 0x04	; 4
    13f6:	8e bd       	out	0x2e, r24	; 46
    13f8:	80 e0       	ldi	r24, 0x00	; 0
    13fa:	08 95       	ret
    13fc:	8e b5       	in	r24, 0x2e	; 46
    13fe:	81 60       	ori	r24, 0x01	; 1
    1400:	8e bd       	out	0x2e, r24	; 46
    1402:	8e b5       	in	r24, 0x2e	; 46
    1404:	82 60       	ori	r24, 0x02	; 2
    1406:	8e bd       	out	0x2e, r24	; 46
    1408:	8e b5       	in	r24, 0x2e	; 46
    140a:	84 60       	ori	r24, 0x04	; 4
    140c:	8e bd       	out	0x2e, r24	; 46
    140e:	80 e0       	ldi	r24, 0x00	; 0
    1410:	08 95       	ret
    1412:	8e 2f       	mov	r24, r30
    1414:	90 e0       	ldi	r25, 0x00	; 0
    1416:	88 30       	cpi	r24, 0x08	; 8
    1418:	91 05       	cpc	r25, r1
    141a:	08 f0       	brcs	.+2      	; 0x141e <TIMER_start+0x1c2>
    141c:	69 c0       	rjmp	.+210    	; 0x14f0 <TIMER_start+0x294>
    141e:	fc 01       	movw	r30, r24
    1420:	e2 5c       	subi	r30, 0xC2	; 194
    1422:	ff 4f       	sbci	r31, 0xFF	; 255
    1424:	0c 94 8e 0c 	jmp	0x191c	; 0x191c <__tablejump2__>
    1428:	85 b5       	in	r24, 0x25	; 37
    142a:	8b 7f       	andi	r24, 0xFB	; 251
    142c:	85 bd       	out	0x25, r24	; 37
    142e:	85 b5       	in	r24, 0x25	; 37
    1430:	8d 7f       	andi	r24, 0xFD	; 253
    1432:	85 bd       	out	0x25, r24	; 37
    1434:	85 b5       	in	r24, 0x25	; 37
    1436:	8e 7f       	andi	r24, 0xFE	; 254
    1438:	85 bd       	out	0x25, r24	; 37
    143a:	80 e0       	ldi	r24, 0x00	; 0
    143c:	08 95       	ret
    143e:	85 b5       	in	r24, 0x25	; 37
    1440:	84 60       	ori	r24, 0x04	; 4
    1442:	85 bd       	out	0x25, r24	; 37
    1444:	85 b5       	in	r24, 0x25	; 37
    1446:	8d 7f       	andi	r24, 0xFD	; 253
    1448:	85 bd       	out	0x25, r24	; 37
    144a:	85 b5       	in	r24, 0x25	; 37
    144c:	8e 7f       	andi	r24, 0xFE	; 254
    144e:	85 bd       	out	0x25, r24	; 37
    1450:	80 e0       	ldi	r24, 0x00	; 0
    1452:	08 95       	ret
    1454:	85 b5       	in	r24, 0x25	; 37
    1456:	8b 7f       	andi	r24, 0xFB	; 251
    1458:	85 bd       	out	0x25, r24	; 37
    145a:	85 b5       	in	r24, 0x25	; 37
    145c:	82 60       	ori	r24, 0x02	; 2
    145e:	85 bd       	out	0x25, r24	; 37
    1460:	85 b5       	in	r24, 0x25	; 37
    1462:	8e 7f       	andi	r24, 0xFE	; 254
    1464:	85 bd       	out	0x25, r24	; 37
    1466:	80 e0       	ldi	r24, 0x00	; 0
    1468:	08 95       	ret
    146a:	85 b5       	in	r24, 0x25	; 37
    146c:	84 60       	ori	r24, 0x04	; 4
    146e:	85 bd       	out	0x25, r24	; 37
    1470:	85 b5       	in	r24, 0x25	; 37
    1472:	82 60       	ori	r24, 0x02	; 2
    1474:	85 bd       	out	0x25, r24	; 37
    1476:	85 b5       	in	r24, 0x25	; 37
    1478:	8e 7f       	andi	r24, 0xFE	; 254
    147a:	85 bd       	out	0x25, r24	; 37
    147c:	80 e0       	ldi	r24, 0x00	; 0
    147e:	08 95       	ret
    1480:	85 b5       	in	r24, 0x25	; 37
    1482:	8b 7f       	andi	r24, 0xFB	; 251
    1484:	85 bd       	out	0x25, r24	; 37
    1486:	85 b5       	in	r24, 0x25	; 37
    1488:	8d 7f       	andi	r24, 0xFD	; 253
    148a:	85 bd       	out	0x25, r24	; 37
    148c:	85 b5       	in	r24, 0x25	; 37
    148e:	81 60       	ori	r24, 0x01	; 1
    1490:	85 bd       	out	0x25, r24	; 37
    1492:	80 e0       	ldi	r24, 0x00	; 0
    1494:	08 95       	ret
    1496:	85 b5       	in	r24, 0x25	; 37
    1498:	84 60       	ori	r24, 0x04	; 4
    149a:	85 bd       	out	0x25, r24	; 37
    149c:	85 b5       	in	r24, 0x25	; 37
    149e:	8d 7f       	andi	r24, 0xFD	; 253
    14a0:	85 bd       	out	0x25, r24	; 37
    14a2:	85 b5       	in	r24, 0x25	; 37
    14a4:	81 60       	ori	r24, 0x01	; 1
    14a6:	85 bd       	out	0x25, r24	; 37
    14a8:	80 e0       	ldi	r24, 0x00	; 0
    14aa:	08 95       	ret
    14ac:	85 b5       	in	r24, 0x25	; 37
    14ae:	8b 7f       	andi	r24, 0xFB	; 251
    14b0:	85 bd       	out	0x25, r24	; 37
    14b2:	85 b5       	in	r24, 0x25	; 37
    14b4:	82 60       	ori	r24, 0x02	; 2
    14b6:	85 bd       	out	0x25, r24	; 37
    14b8:	85 b5       	in	r24, 0x25	; 37
    14ba:	81 60       	ori	r24, 0x01	; 1
    14bc:	85 bd       	out	0x25, r24	; 37
    14be:	80 e0       	ldi	r24, 0x00	; 0
    14c0:	08 95       	ret
    14c2:	85 b5       	in	r24, 0x25	; 37
    14c4:	84 60       	ori	r24, 0x04	; 4
    14c6:	85 bd       	out	0x25, r24	; 37
    14c8:	85 b5       	in	r24, 0x25	; 37
    14ca:	82 60       	ori	r24, 0x02	; 2
    14cc:	85 bd       	out	0x25, r24	; 37
    14ce:	85 b5       	in	r24, 0x25	; 37
    14d0:	81 60       	ori	r24, 0x01	; 1
    14d2:	85 bd       	out	0x25, r24	; 37
    14d4:	80 e0       	ldi	r24, 0x00	; 0
    14d6:	08 95       	ret
    14d8:	83 e0       	ldi	r24, 0x03	; 3
    14da:	08 95       	ret
    14dc:	83 e0       	ldi	r24, 0x03	; 3
    14de:	08 95       	ret
    14e0:	83 e0       	ldi	r24, 0x03	; 3
    14e2:	08 95       	ret
    14e4:	83 e0       	ldi	r24, 0x03	; 3
    14e6:	08 95       	ret
    14e8:	83 e0       	ldi	r24, 0x03	; 3
    14ea:	08 95       	ret
    14ec:	83 e0       	ldi	r24, 0x03	; 3
    14ee:	08 95       	ret
    14f0:	83 e0       	ldi	r24, 0x03	; 3
    14f2:	08 95       	ret

000014f4 <TIMER_reset>:
    14f4:	00 97       	sbiw	r24, 0x00	; 0
    14f6:	f1 f0       	breq	.+60     	; 0x1534 <TIMER_reset+0x40>
    14f8:	fc 01       	movw	r30, r24
    14fa:	20 81       	ld	r18, Z
    14fc:	23 30       	cpi	r18, 0x03	; 3
    14fe:	e0 f4       	brcc	.+56     	; 0x1538 <TIMER_reset+0x44>
    1500:	31 81       	ldd	r19, Z+1	; 0x01
    1502:	3a 30       	cpi	r19, 0x0A	; 10
    1504:	d8 f4       	brcc	.+54     	; 0x153c <TIMER_reset+0x48>
    1506:	21 30       	cpi	r18, 0x01	; 1
    1508:	49 f0       	breq	.+18     	; 0x151c <TIMER_reset+0x28>
    150a:	18 f0       	brcs	.+6      	; 0x1512 <TIMER_reset+0x1e>
    150c:	22 30       	cpi	r18, 0x02	; 2
    150e:	69 f0       	breq	.+26     	; 0x152a <TIMER_reset+0x36>
    1510:	17 c0       	rjmp	.+46     	; 0x1540 <TIMER_reset+0x4c>
    1512:	fc 01       	movw	r30, r24
    1514:	82 81       	ldd	r24, Z+2	; 0x02
    1516:	82 bf       	out	0x32, r24	; 50
    1518:	80 e0       	ldi	r24, 0x00	; 0
    151a:	08 95       	ret
    151c:	fc 01       	movw	r30, r24
    151e:	82 81       	ldd	r24, Z+2	; 0x02
    1520:	93 81       	ldd	r25, Z+3	; 0x03
    1522:	9d bd       	out	0x2d, r25	; 45
    1524:	8c bd       	out	0x2c, r24	; 44
    1526:	80 e0       	ldi	r24, 0x00	; 0
    1528:	08 95       	ret
    152a:	fc 01       	movw	r30, r24
    152c:	82 81       	ldd	r24, Z+2	; 0x02
    152e:	84 bd       	out	0x24, r24	; 36
    1530:	80 e0       	ldi	r24, 0x00	; 0
    1532:	08 95       	ret
    1534:	83 e0       	ldi	r24, 0x03	; 3
    1536:	08 95       	ret
    1538:	83 e0       	ldi	r24, 0x03	; 3
    153a:	08 95       	ret
    153c:	83 e0       	ldi	r24, 0x03	; 3
    153e:	08 95       	ret
    1540:	83 e0       	ldi	r24, 0x03	; 3
    1542:	08 95       	ret

00001544 <TIMER_setCallBack>:
    1544:	00 97       	sbiw	r24, 0x00	; 0
    1546:	d1 f0       	breq	.+52     	; 0x157c <TIMER_setCallBack+0x38>
    1548:	63 30       	cpi	r22, 0x03	; 3
    154a:	d0 f4       	brcc	.+52     	; 0x1580 <TIMER_setCallBack+0x3c>
    154c:	61 30       	cpi	r22, 0x01	; 1
    154e:	51 f0       	breq	.+20     	; 0x1564 <TIMER_setCallBack+0x20>
    1550:	18 f0       	brcs	.+6      	; 0x1558 <TIMER_setCallBack+0x14>
    1552:	62 30       	cpi	r22, 0x02	; 2
    1554:	69 f0       	breq	.+26     	; 0x1570 <TIMER_setCallBack+0x2c>
    1556:	16 c0       	rjmp	.+44     	; 0x1584 <TIMER_setCallBack+0x40>
    1558:	90 93 14 01 	sts	0x0114, r25	; 0x800114 <sg_Timer0_callBackPtr+0x1>
    155c:	80 93 13 01 	sts	0x0113, r24	; 0x800113 <sg_Timer0_callBackPtr>
    1560:	80 e0       	ldi	r24, 0x00	; 0
    1562:	08 95       	ret
    1564:	90 93 12 01 	sts	0x0112, r25	; 0x800112 <sg_Timer1_callBackPtr+0x1>
    1568:	80 93 11 01 	sts	0x0111, r24	; 0x800111 <sg_Timer1_callBackPtr>
    156c:	80 e0       	ldi	r24, 0x00	; 0
    156e:	08 95       	ret
    1570:	90 93 10 01 	sts	0x0110, r25	; 0x800110 <sg_Timer2_callBackPtr+0x1>
    1574:	80 93 0f 01 	sts	0x010F, r24	; 0x80010f <sg_Timer2_callBackPtr>
    1578:	80 e0       	ldi	r24, 0x00	; 0
    157a:	08 95       	ret
    157c:	83 e0       	ldi	r24, 0x03	; 3
    157e:	08 95       	ret
    1580:	83 e0       	ldi	r24, 0x03	; 3
    1582:	08 95       	ret
    1584:	83 e0       	ldi	r24, 0x03	; 3
    1586:	08 95       	ret

00001588 <__cmpsf2>:
    1588:	0e 94 a7 0b 	call	0x174e	; 0x174e <__fp_cmp>
    158c:	08 f4       	brcc	.+2      	; 0x1590 <__cmpsf2+0x8>
    158e:	81 e0       	ldi	r24, 0x01	; 1
    1590:	08 95       	ret

00001592 <__divsf3>:
    1592:	0e 94 dd 0a 	call	0x15ba	; 0x15ba <__divsf3x>
    1596:	0c 94 e2 0b 	jmp	0x17c4	; 0x17c4 <__fp_round>
    159a:	0e 94 db 0b 	call	0x17b6	; 0x17b6 <__fp_pscB>
    159e:	58 f0       	brcs	.+22     	; 0x15b6 <__divsf3+0x24>
    15a0:	0e 94 d4 0b 	call	0x17a8	; 0x17a8 <__fp_pscA>
    15a4:	40 f0       	brcs	.+16     	; 0x15b6 <__divsf3+0x24>
    15a6:	29 f4       	brne	.+10     	; 0x15b2 <__divsf3+0x20>
    15a8:	5f 3f       	cpi	r21, 0xFF	; 255
    15aa:	29 f0       	breq	.+10     	; 0x15b6 <__divsf3+0x24>
    15ac:	0c 94 cb 0b 	jmp	0x1796	; 0x1796 <__fp_inf>
    15b0:	51 11       	cpse	r21, r1
    15b2:	0c 94 16 0c 	jmp	0x182c	; 0x182c <__fp_szero>
    15b6:	0c 94 d1 0b 	jmp	0x17a2	; 0x17a2 <__fp_nan>

000015ba <__divsf3x>:
    15ba:	0e 94 f3 0b 	call	0x17e6	; 0x17e6 <__fp_split3>
    15be:	68 f3       	brcs	.-38     	; 0x159a <__divsf3+0x8>

000015c0 <__divsf3_pse>:
    15c0:	99 23       	and	r25, r25
    15c2:	b1 f3       	breq	.-20     	; 0x15b0 <__divsf3+0x1e>
    15c4:	55 23       	and	r21, r21
    15c6:	91 f3       	breq	.-28     	; 0x15ac <__divsf3+0x1a>
    15c8:	95 1b       	sub	r25, r21
    15ca:	55 0b       	sbc	r21, r21
    15cc:	bb 27       	eor	r27, r27
    15ce:	aa 27       	eor	r26, r26
    15d0:	62 17       	cp	r22, r18
    15d2:	73 07       	cpc	r23, r19
    15d4:	84 07       	cpc	r24, r20
    15d6:	38 f0       	brcs	.+14     	; 0x15e6 <__divsf3_pse+0x26>
    15d8:	9f 5f       	subi	r25, 0xFF	; 255
    15da:	5f 4f       	sbci	r21, 0xFF	; 255
    15dc:	22 0f       	add	r18, r18
    15de:	33 1f       	adc	r19, r19
    15e0:	44 1f       	adc	r20, r20
    15e2:	aa 1f       	adc	r26, r26
    15e4:	a9 f3       	breq	.-22     	; 0x15d0 <__divsf3_pse+0x10>
    15e6:	35 d0       	rcall	.+106    	; 0x1652 <__divsf3_pse+0x92>
    15e8:	0e 2e       	mov	r0, r30
    15ea:	3a f0       	brmi	.+14     	; 0x15fa <__divsf3_pse+0x3a>
    15ec:	e0 e8       	ldi	r30, 0x80	; 128
    15ee:	32 d0       	rcall	.+100    	; 0x1654 <__divsf3_pse+0x94>
    15f0:	91 50       	subi	r25, 0x01	; 1
    15f2:	50 40       	sbci	r21, 0x00	; 0
    15f4:	e6 95       	lsr	r30
    15f6:	00 1c       	adc	r0, r0
    15f8:	ca f7       	brpl	.-14     	; 0x15ec <__divsf3_pse+0x2c>
    15fa:	2b d0       	rcall	.+86     	; 0x1652 <__divsf3_pse+0x92>
    15fc:	fe 2f       	mov	r31, r30
    15fe:	29 d0       	rcall	.+82     	; 0x1652 <__divsf3_pse+0x92>
    1600:	66 0f       	add	r22, r22
    1602:	77 1f       	adc	r23, r23
    1604:	88 1f       	adc	r24, r24
    1606:	bb 1f       	adc	r27, r27
    1608:	26 17       	cp	r18, r22
    160a:	37 07       	cpc	r19, r23
    160c:	48 07       	cpc	r20, r24
    160e:	ab 07       	cpc	r26, r27
    1610:	b0 e8       	ldi	r27, 0x80	; 128
    1612:	09 f0       	breq	.+2      	; 0x1616 <__divsf3_pse+0x56>
    1614:	bb 0b       	sbc	r27, r27
    1616:	80 2d       	mov	r24, r0
    1618:	bf 01       	movw	r22, r30
    161a:	ff 27       	eor	r31, r31
    161c:	93 58       	subi	r25, 0x83	; 131
    161e:	5f 4f       	sbci	r21, 0xFF	; 255
    1620:	3a f0       	brmi	.+14     	; 0x1630 <__divsf3_pse+0x70>
    1622:	9e 3f       	cpi	r25, 0xFE	; 254
    1624:	51 05       	cpc	r21, r1
    1626:	78 f0       	brcs	.+30     	; 0x1646 <__divsf3_pse+0x86>
    1628:	0c 94 cb 0b 	jmp	0x1796	; 0x1796 <__fp_inf>
    162c:	0c 94 16 0c 	jmp	0x182c	; 0x182c <__fp_szero>
    1630:	5f 3f       	cpi	r21, 0xFF	; 255
    1632:	e4 f3       	brlt	.-8      	; 0x162c <__divsf3_pse+0x6c>
    1634:	98 3e       	cpi	r25, 0xE8	; 232
    1636:	d4 f3       	brlt	.-12     	; 0x162c <__divsf3_pse+0x6c>
    1638:	86 95       	lsr	r24
    163a:	77 95       	ror	r23
    163c:	67 95       	ror	r22
    163e:	b7 95       	ror	r27
    1640:	f7 95       	ror	r31
    1642:	9f 5f       	subi	r25, 0xFF	; 255
    1644:	c9 f7       	brne	.-14     	; 0x1638 <__divsf3_pse+0x78>
    1646:	88 0f       	add	r24, r24
    1648:	91 1d       	adc	r25, r1
    164a:	96 95       	lsr	r25
    164c:	87 95       	ror	r24
    164e:	97 f9       	bld	r25, 7
    1650:	08 95       	ret
    1652:	e1 e0       	ldi	r30, 0x01	; 1
    1654:	66 0f       	add	r22, r22
    1656:	77 1f       	adc	r23, r23
    1658:	88 1f       	adc	r24, r24
    165a:	bb 1f       	adc	r27, r27
    165c:	62 17       	cp	r22, r18
    165e:	73 07       	cpc	r23, r19
    1660:	84 07       	cpc	r24, r20
    1662:	ba 07       	cpc	r27, r26
    1664:	20 f0       	brcs	.+8      	; 0x166e <__divsf3_pse+0xae>
    1666:	62 1b       	sub	r22, r18
    1668:	73 0b       	sbc	r23, r19
    166a:	84 0b       	sbc	r24, r20
    166c:	ba 0b       	sbc	r27, r26
    166e:	ee 1f       	adc	r30, r30
    1670:	88 f7       	brcc	.-30     	; 0x1654 <__divsf3_pse+0x94>
    1672:	e0 95       	com	r30
    1674:	08 95       	ret

00001676 <__fixunssfsi>:
    1676:	0e 94 fb 0b 	call	0x17f6	; 0x17f6 <__fp_splitA>
    167a:	88 f0       	brcs	.+34     	; 0x169e <__fixunssfsi+0x28>
    167c:	9f 57       	subi	r25, 0x7F	; 127
    167e:	98 f0       	brcs	.+38     	; 0x16a6 <__fixunssfsi+0x30>
    1680:	b9 2f       	mov	r27, r25
    1682:	99 27       	eor	r25, r25
    1684:	b7 51       	subi	r27, 0x17	; 23
    1686:	b0 f0       	brcs	.+44     	; 0x16b4 <__fixunssfsi+0x3e>
    1688:	e1 f0       	breq	.+56     	; 0x16c2 <__fixunssfsi+0x4c>
    168a:	66 0f       	add	r22, r22
    168c:	77 1f       	adc	r23, r23
    168e:	88 1f       	adc	r24, r24
    1690:	99 1f       	adc	r25, r25
    1692:	1a f0       	brmi	.+6      	; 0x169a <__fixunssfsi+0x24>
    1694:	ba 95       	dec	r27
    1696:	c9 f7       	brne	.-14     	; 0x168a <__fixunssfsi+0x14>
    1698:	14 c0       	rjmp	.+40     	; 0x16c2 <__fixunssfsi+0x4c>
    169a:	b1 30       	cpi	r27, 0x01	; 1
    169c:	91 f0       	breq	.+36     	; 0x16c2 <__fixunssfsi+0x4c>
    169e:	0e 94 15 0c 	call	0x182a	; 0x182a <__fp_zero>
    16a2:	b1 e0       	ldi	r27, 0x01	; 1
    16a4:	08 95       	ret
    16a6:	0c 94 15 0c 	jmp	0x182a	; 0x182a <__fp_zero>
    16aa:	67 2f       	mov	r22, r23
    16ac:	78 2f       	mov	r23, r24
    16ae:	88 27       	eor	r24, r24
    16b0:	b8 5f       	subi	r27, 0xF8	; 248
    16b2:	39 f0       	breq	.+14     	; 0x16c2 <__fixunssfsi+0x4c>
    16b4:	b9 3f       	cpi	r27, 0xF9	; 249
    16b6:	cc f3       	brlt	.-14     	; 0x16aa <__fixunssfsi+0x34>
    16b8:	86 95       	lsr	r24
    16ba:	77 95       	ror	r23
    16bc:	67 95       	ror	r22
    16be:	b3 95       	inc	r27
    16c0:	d9 f7       	brne	.-10     	; 0x16b8 <__fixunssfsi+0x42>
    16c2:	3e f4       	brtc	.+14     	; 0x16d2 <__fixunssfsi+0x5c>
    16c4:	90 95       	com	r25
    16c6:	80 95       	com	r24
    16c8:	70 95       	com	r23
    16ca:	61 95       	neg	r22
    16cc:	7f 4f       	sbci	r23, 0xFF	; 255
    16ce:	8f 4f       	sbci	r24, 0xFF	; 255
    16d0:	9f 4f       	sbci	r25, 0xFF	; 255
    16d2:	08 95       	ret

000016d4 <__floatunsisf>:
    16d4:	e8 94       	clt
    16d6:	09 c0       	rjmp	.+18     	; 0x16ea <__floatsisf+0x12>

000016d8 <__floatsisf>:
    16d8:	97 fb       	bst	r25, 7
    16da:	3e f4       	brtc	.+14     	; 0x16ea <__floatsisf+0x12>
    16dc:	90 95       	com	r25
    16de:	80 95       	com	r24
    16e0:	70 95       	com	r23
    16e2:	61 95       	neg	r22
    16e4:	7f 4f       	sbci	r23, 0xFF	; 255
    16e6:	8f 4f       	sbci	r24, 0xFF	; 255
    16e8:	9f 4f       	sbci	r25, 0xFF	; 255
    16ea:	99 23       	and	r25, r25
    16ec:	a9 f0       	breq	.+42     	; 0x1718 <__floatsisf+0x40>
    16ee:	f9 2f       	mov	r31, r25
    16f0:	96 e9       	ldi	r25, 0x96	; 150
    16f2:	bb 27       	eor	r27, r27
    16f4:	93 95       	inc	r25
    16f6:	f6 95       	lsr	r31
    16f8:	87 95       	ror	r24
    16fa:	77 95       	ror	r23
    16fc:	67 95       	ror	r22
    16fe:	b7 95       	ror	r27
    1700:	f1 11       	cpse	r31, r1
    1702:	f8 cf       	rjmp	.-16     	; 0x16f4 <__floatsisf+0x1c>
    1704:	fa f4       	brpl	.+62     	; 0x1744 <__floatsisf+0x6c>
    1706:	bb 0f       	add	r27, r27
    1708:	11 f4       	brne	.+4      	; 0x170e <__floatsisf+0x36>
    170a:	60 ff       	sbrs	r22, 0
    170c:	1b c0       	rjmp	.+54     	; 0x1744 <__floatsisf+0x6c>
    170e:	6f 5f       	subi	r22, 0xFF	; 255
    1710:	7f 4f       	sbci	r23, 0xFF	; 255
    1712:	8f 4f       	sbci	r24, 0xFF	; 255
    1714:	9f 4f       	sbci	r25, 0xFF	; 255
    1716:	16 c0       	rjmp	.+44     	; 0x1744 <__floatsisf+0x6c>
    1718:	88 23       	and	r24, r24
    171a:	11 f0       	breq	.+4      	; 0x1720 <__floatsisf+0x48>
    171c:	96 e9       	ldi	r25, 0x96	; 150
    171e:	11 c0       	rjmp	.+34     	; 0x1742 <__floatsisf+0x6a>
    1720:	77 23       	and	r23, r23
    1722:	21 f0       	breq	.+8      	; 0x172c <__floatsisf+0x54>
    1724:	9e e8       	ldi	r25, 0x8E	; 142
    1726:	87 2f       	mov	r24, r23
    1728:	76 2f       	mov	r23, r22
    172a:	05 c0       	rjmp	.+10     	; 0x1736 <__floatsisf+0x5e>
    172c:	66 23       	and	r22, r22
    172e:	71 f0       	breq	.+28     	; 0x174c <__floatsisf+0x74>
    1730:	96 e8       	ldi	r25, 0x86	; 134
    1732:	86 2f       	mov	r24, r22
    1734:	70 e0       	ldi	r23, 0x00	; 0
    1736:	60 e0       	ldi	r22, 0x00	; 0
    1738:	2a f0       	brmi	.+10     	; 0x1744 <__floatsisf+0x6c>
    173a:	9a 95       	dec	r25
    173c:	66 0f       	add	r22, r22
    173e:	77 1f       	adc	r23, r23
    1740:	88 1f       	adc	r24, r24
    1742:	da f7       	brpl	.-10     	; 0x173a <__floatsisf+0x62>
    1744:	88 0f       	add	r24, r24
    1746:	96 95       	lsr	r25
    1748:	87 95       	ror	r24
    174a:	97 f9       	bld	r25, 7
    174c:	08 95       	ret

0000174e <__fp_cmp>:
    174e:	99 0f       	add	r25, r25
    1750:	00 08       	sbc	r0, r0
    1752:	55 0f       	add	r21, r21
    1754:	aa 0b       	sbc	r26, r26
    1756:	e0 e8       	ldi	r30, 0x80	; 128
    1758:	fe ef       	ldi	r31, 0xFE	; 254
    175a:	16 16       	cp	r1, r22
    175c:	17 06       	cpc	r1, r23
    175e:	e8 07       	cpc	r30, r24
    1760:	f9 07       	cpc	r31, r25
    1762:	c0 f0       	brcs	.+48     	; 0x1794 <__fp_cmp+0x46>
    1764:	12 16       	cp	r1, r18
    1766:	13 06       	cpc	r1, r19
    1768:	e4 07       	cpc	r30, r20
    176a:	f5 07       	cpc	r31, r21
    176c:	98 f0       	brcs	.+38     	; 0x1794 <__fp_cmp+0x46>
    176e:	62 1b       	sub	r22, r18
    1770:	73 0b       	sbc	r23, r19
    1772:	84 0b       	sbc	r24, r20
    1774:	95 0b       	sbc	r25, r21
    1776:	39 f4       	brne	.+14     	; 0x1786 <__fp_cmp+0x38>
    1778:	0a 26       	eor	r0, r26
    177a:	61 f0       	breq	.+24     	; 0x1794 <__fp_cmp+0x46>
    177c:	23 2b       	or	r18, r19
    177e:	24 2b       	or	r18, r20
    1780:	25 2b       	or	r18, r21
    1782:	21 f4       	brne	.+8      	; 0x178c <__fp_cmp+0x3e>
    1784:	08 95       	ret
    1786:	0a 26       	eor	r0, r26
    1788:	09 f4       	brne	.+2      	; 0x178c <__fp_cmp+0x3e>
    178a:	a1 40       	sbci	r26, 0x01	; 1
    178c:	a6 95       	lsr	r26
    178e:	8f ef       	ldi	r24, 0xFF	; 255
    1790:	81 1d       	adc	r24, r1
    1792:	81 1d       	adc	r24, r1
    1794:	08 95       	ret

00001796 <__fp_inf>:
    1796:	97 f9       	bld	r25, 7
    1798:	9f 67       	ori	r25, 0x7F	; 127
    179a:	80 e8       	ldi	r24, 0x80	; 128
    179c:	70 e0       	ldi	r23, 0x00	; 0
    179e:	60 e0       	ldi	r22, 0x00	; 0
    17a0:	08 95       	ret

000017a2 <__fp_nan>:
    17a2:	9f ef       	ldi	r25, 0xFF	; 255
    17a4:	80 ec       	ldi	r24, 0xC0	; 192
    17a6:	08 95       	ret

000017a8 <__fp_pscA>:
    17a8:	00 24       	eor	r0, r0
    17aa:	0a 94       	dec	r0
    17ac:	16 16       	cp	r1, r22
    17ae:	17 06       	cpc	r1, r23
    17b0:	18 06       	cpc	r1, r24
    17b2:	09 06       	cpc	r0, r25
    17b4:	08 95       	ret

000017b6 <__fp_pscB>:
    17b6:	00 24       	eor	r0, r0
    17b8:	0a 94       	dec	r0
    17ba:	12 16       	cp	r1, r18
    17bc:	13 06       	cpc	r1, r19
    17be:	14 06       	cpc	r1, r20
    17c0:	05 06       	cpc	r0, r21
    17c2:	08 95       	ret

000017c4 <__fp_round>:
    17c4:	09 2e       	mov	r0, r25
    17c6:	03 94       	inc	r0
    17c8:	00 0c       	add	r0, r0
    17ca:	11 f4       	brne	.+4      	; 0x17d0 <__fp_round+0xc>
    17cc:	88 23       	and	r24, r24
    17ce:	52 f0       	brmi	.+20     	; 0x17e4 <__fp_round+0x20>
    17d0:	bb 0f       	add	r27, r27
    17d2:	40 f4       	brcc	.+16     	; 0x17e4 <__fp_round+0x20>
    17d4:	bf 2b       	or	r27, r31
    17d6:	11 f4       	brne	.+4      	; 0x17dc <__fp_round+0x18>
    17d8:	60 ff       	sbrs	r22, 0
    17da:	04 c0       	rjmp	.+8      	; 0x17e4 <__fp_round+0x20>
    17dc:	6f 5f       	subi	r22, 0xFF	; 255
    17de:	7f 4f       	sbci	r23, 0xFF	; 255
    17e0:	8f 4f       	sbci	r24, 0xFF	; 255
    17e2:	9f 4f       	sbci	r25, 0xFF	; 255
    17e4:	08 95       	ret

000017e6 <__fp_split3>:
    17e6:	57 fd       	sbrc	r21, 7
    17e8:	90 58       	subi	r25, 0x80	; 128
    17ea:	44 0f       	add	r20, r20
    17ec:	55 1f       	adc	r21, r21
    17ee:	59 f0       	breq	.+22     	; 0x1806 <__fp_splitA+0x10>
    17f0:	5f 3f       	cpi	r21, 0xFF	; 255
    17f2:	71 f0       	breq	.+28     	; 0x1810 <__fp_splitA+0x1a>
    17f4:	47 95       	ror	r20

000017f6 <__fp_splitA>:
    17f6:	88 0f       	add	r24, r24
    17f8:	97 fb       	bst	r25, 7
    17fa:	99 1f       	adc	r25, r25
    17fc:	61 f0       	breq	.+24     	; 0x1816 <__fp_splitA+0x20>
    17fe:	9f 3f       	cpi	r25, 0xFF	; 255
    1800:	79 f0       	breq	.+30     	; 0x1820 <__fp_splitA+0x2a>
    1802:	87 95       	ror	r24
    1804:	08 95       	ret
    1806:	12 16       	cp	r1, r18
    1808:	13 06       	cpc	r1, r19
    180a:	14 06       	cpc	r1, r20
    180c:	55 1f       	adc	r21, r21
    180e:	f2 cf       	rjmp	.-28     	; 0x17f4 <__fp_split3+0xe>
    1810:	46 95       	lsr	r20
    1812:	f1 df       	rcall	.-30     	; 0x17f6 <__fp_splitA>
    1814:	08 c0       	rjmp	.+16     	; 0x1826 <__fp_splitA+0x30>
    1816:	16 16       	cp	r1, r22
    1818:	17 06       	cpc	r1, r23
    181a:	18 06       	cpc	r1, r24
    181c:	99 1f       	adc	r25, r25
    181e:	f1 cf       	rjmp	.-30     	; 0x1802 <__fp_splitA+0xc>
    1820:	86 95       	lsr	r24
    1822:	71 05       	cpc	r23, r1
    1824:	61 05       	cpc	r22, r1
    1826:	08 94       	sec
    1828:	08 95       	ret

0000182a <__fp_zero>:
    182a:	e8 94       	clt

0000182c <__fp_szero>:
    182c:	bb 27       	eor	r27, r27
    182e:	66 27       	eor	r22, r22
    1830:	77 27       	eor	r23, r23
    1832:	cb 01       	movw	r24, r22
    1834:	97 f9       	bld	r25, 7
    1836:	08 95       	ret

00001838 <__gesf2>:
    1838:	0e 94 a7 0b 	call	0x174e	; 0x174e <__fp_cmp>
    183c:	08 f4       	brcc	.+2      	; 0x1840 <__gesf2+0x8>
    183e:	8f ef       	ldi	r24, 0xFF	; 255
    1840:	08 95       	ret

00001842 <__mulsf3>:
    1842:	0e 94 34 0c 	call	0x1868	; 0x1868 <__mulsf3x>
    1846:	0c 94 e2 0b 	jmp	0x17c4	; 0x17c4 <__fp_round>
    184a:	0e 94 d4 0b 	call	0x17a8	; 0x17a8 <__fp_pscA>
    184e:	38 f0       	brcs	.+14     	; 0x185e <__mulsf3+0x1c>
    1850:	0e 94 db 0b 	call	0x17b6	; 0x17b6 <__fp_pscB>
    1854:	20 f0       	brcs	.+8      	; 0x185e <__mulsf3+0x1c>
    1856:	95 23       	and	r25, r21
    1858:	11 f0       	breq	.+4      	; 0x185e <__mulsf3+0x1c>
    185a:	0c 94 cb 0b 	jmp	0x1796	; 0x1796 <__fp_inf>
    185e:	0c 94 d1 0b 	jmp	0x17a2	; 0x17a2 <__fp_nan>
    1862:	11 24       	eor	r1, r1
    1864:	0c 94 16 0c 	jmp	0x182c	; 0x182c <__fp_szero>

00001868 <__mulsf3x>:
    1868:	0e 94 f3 0b 	call	0x17e6	; 0x17e6 <__fp_split3>
    186c:	70 f3       	brcs	.-36     	; 0x184a <__mulsf3+0x8>

0000186e <__mulsf3_pse>:
    186e:	95 9f       	mul	r25, r21
    1870:	c1 f3       	breq	.-16     	; 0x1862 <__mulsf3+0x20>
    1872:	95 0f       	add	r25, r21
    1874:	50 e0       	ldi	r21, 0x00	; 0
    1876:	55 1f       	adc	r21, r21
    1878:	62 9f       	mul	r22, r18
    187a:	f0 01       	movw	r30, r0
    187c:	72 9f       	mul	r23, r18
    187e:	bb 27       	eor	r27, r27
    1880:	f0 0d       	add	r31, r0
    1882:	b1 1d       	adc	r27, r1
    1884:	63 9f       	mul	r22, r19
    1886:	aa 27       	eor	r26, r26
    1888:	f0 0d       	add	r31, r0
    188a:	b1 1d       	adc	r27, r1
    188c:	aa 1f       	adc	r26, r26
    188e:	64 9f       	mul	r22, r20
    1890:	66 27       	eor	r22, r22
    1892:	b0 0d       	add	r27, r0
    1894:	a1 1d       	adc	r26, r1
    1896:	66 1f       	adc	r22, r22
    1898:	82 9f       	mul	r24, r18
    189a:	22 27       	eor	r18, r18
    189c:	b0 0d       	add	r27, r0
    189e:	a1 1d       	adc	r26, r1
    18a0:	62 1f       	adc	r22, r18
    18a2:	73 9f       	mul	r23, r19
    18a4:	b0 0d       	add	r27, r0
    18a6:	a1 1d       	adc	r26, r1
    18a8:	62 1f       	adc	r22, r18
    18aa:	83 9f       	mul	r24, r19
    18ac:	a0 0d       	add	r26, r0
    18ae:	61 1d       	adc	r22, r1
    18b0:	22 1f       	adc	r18, r18
    18b2:	74 9f       	mul	r23, r20
    18b4:	33 27       	eor	r19, r19
    18b6:	a0 0d       	add	r26, r0
    18b8:	61 1d       	adc	r22, r1
    18ba:	23 1f       	adc	r18, r19
    18bc:	84 9f       	mul	r24, r20
    18be:	60 0d       	add	r22, r0
    18c0:	21 1d       	adc	r18, r1
    18c2:	82 2f       	mov	r24, r18
    18c4:	76 2f       	mov	r23, r22
    18c6:	6a 2f       	mov	r22, r26
    18c8:	11 24       	eor	r1, r1
    18ca:	9f 57       	subi	r25, 0x7F	; 127
    18cc:	50 40       	sbci	r21, 0x00	; 0
    18ce:	9a f0       	brmi	.+38     	; 0x18f6 <__mulsf3_pse+0x88>
    18d0:	f1 f0       	breq	.+60     	; 0x190e <__mulsf3_pse+0xa0>
    18d2:	88 23       	and	r24, r24
    18d4:	4a f0       	brmi	.+18     	; 0x18e8 <__mulsf3_pse+0x7a>
    18d6:	ee 0f       	add	r30, r30
    18d8:	ff 1f       	adc	r31, r31
    18da:	bb 1f       	adc	r27, r27
    18dc:	66 1f       	adc	r22, r22
    18de:	77 1f       	adc	r23, r23
    18e0:	88 1f       	adc	r24, r24
    18e2:	91 50       	subi	r25, 0x01	; 1
    18e4:	50 40       	sbci	r21, 0x00	; 0
    18e6:	a9 f7       	brne	.-22     	; 0x18d2 <__mulsf3_pse+0x64>
    18e8:	9e 3f       	cpi	r25, 0xFE	; 254
    18ea:	51 05       	cpc	r21, r1
    18ec:	80 f0       	brcs	.+32     	; 0x190e <__mulsf3_pse+0xa0>
    18ee:	0c 94 cb 0b 	jmp	0x1796	; 0x1796 <__fp_inf>
    18f2:	0c 94 16 0c 	jmp	0x182c	; 0x182c <__fp_szero>
    18f6:	5f 3f       	cpi	r21, 0xFF	; 255
    18f8:	e4 f3       	brlt	.-8      	; 0x18f2 <__mulsf3_pse+0x84>
    18fa:	98 3e       	cpi	r25, 0xE8	; 232
    18fc:	d4 f3       	brlt	.-12     	; 0x18f2 <__mulsf3_pse+0x84>
    18fe:	86 95       	lsr	r24
    1900:	77 95       	ror	r23
    1902:	67 95       	ror	r22
    1904:	b7 95       	ror	r27
    1906:	f7 95       	ror	r31
    1908:	e7 95       	ror	r30
    190a:	9f 5f       	subi	r25, 0xFF	; 255
    190c:	c1 f7       	brne	.-16     	; 0x18fe <__mulsf3_pse+0x90>
    190e:	fe 2b       	or	r31, r30
    1910:	88 0f       	add	r24, r24
    1912:	91 1d       	adc	r25, r1
    1914:	96 95       	lsr	r25
    1916:	87 95       	ror	r24
    1918:	97 f9       	bld	r25, 7
    191a:	08 95       	ret

0000191c <__tablejump2__>:
    191c:	ee 0f       	add	r30, r30
    191e:	ff 1f       	adc	r31, r31
    1920:	05 90       	lpm	r0, Z+
    1922:	f4 91       	lpm	r31, Z
    1924:	e0 2d       	mov	r30, r0
    1926:	09 94       	ijmp

00001928 <__itoa_ncheck>:
    1928:	bb 27       	eor	r27, r27
    192a:	4a 30       	cpi	r20, 0x0A	; 10
    192c:	31 f4       	brne	.+12     	; 0x193a <__itoa_ncheck+0x12>
    192e:	99 23       	and	r25, r25
    1930:	22 f4       	brpl	.+8      	; 0x193a <__itoa_ncheck+0x12>
    1932:	bd e2       	ldi	r27, 0x2D	; 45
    1934:	90 95       	com	r25
    1936:	81 95       	neg	r24
    1938:	9f 4f       	sbci	r25, 0xFF	; 255
    193a:	0c 94 a0 0c 	jmp	0x1940	; 0x1940 <__utoa_common>

0000193e <__utoa_ncheck>:
    193e:	bb 27       	eor	r27, r27

00001940 <__utoa_common>:
    1940:	fb 01       	movw	r30, r22
    1942:	55 27       	eor	r21, r21
    1944:	aa 27       	eor	r26, r26
    1946:	88 0f       	add	r24, r24
    1948:	99 1f       	adc	r25, r25
    194a:	aa 1f       	adc	r26, r26
    194c:	a4 17       	cp	r26, r20
    194e:	10 f0       	brcs	.+4      	; 0x1954 <__utoa_common+0x14>
    1950:	a4 1b       	sub	r26, r20
    1952:	83 95       	inc	r24
    1954:	50 51       	subi	r21, 0x10	; 16
    1956:	b9 f7       	brne	.-18     	; 0x1946 <__utoa_common+0x6>
    1958:	a0 5d       	subi	r26, 0xD0	; 208
    195a:	aa 33       	cpi	r26, 0x3A	; 58
    195c:	08 f0       	brcs	.+2      	; 0x1960 <__utoa_common+0x20>
    195e:	a9 5d       	subi	r26, 0xD9	; 217
    1960:	a1 93       	st	Z+, r26
    1962:	00 97       	sbiw	r24, 0x00	; 0
    1964:	79 f7       	brne	.-34     	; 0x1944 <__utoa_common+0x4>
    1966:	b1 11       	cpse	r27, r1
    1968:	b1 93       	st	Z+, r27
    196a:	11 92       	st	Z+, r1
    196c:	cb 01       	movw	r24, r22
    196e:	0c 94 b9 0c 	jmp	0x1972	; 0x1972 <strrev>

00001972 <strrev>:
    1972:	dc 01       	movw	r26, r24
    1974:	fc 01       	movw	r30, r24
    1976:	67 2f       	mov	r22, r23
    1978:	71 91       	ld	r23, Z+
    197a:	77 23       	and	r23, r23
    197c:	e1 f7       	brne	.-8      	; 0x1976 <strrev+0x4>
    197e:	32 97       	sbiw	r30, 0x02	; 2
    1980:	04 c0       	rjmp	.+8      	; 0x198a <strrev+0x18>
    1982:	7c 91       	ld	r23, X
    1984:	6d 93       	st	X+, r22
    1986:	70 83       	st	Z, r23
    1988:	62 91       	ld	r22, -Z
    198a:	ae 17       	cp	r26, r30
    198c:	bf 07       	cpc	r27, r31
    198e:	c8 f3       	brcs	.-14     	; 0x1982 <strrev+0x10>
    1990:	08 95       	ret

00001992 <_exit>:
    1992:	f8 94       	cli

00001994 <__stop_program>:
    1994:	ff cf       	rjmp	.-2      	; 0x1994 <__stop_program>
